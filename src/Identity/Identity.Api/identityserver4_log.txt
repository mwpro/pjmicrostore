2019-04-27 21:16:18.487 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-27 21:16:18.546 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-27 21:16:18.549 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-27 21:16:18.550 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-27 21:16:18.551 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-27 21:16:18.551 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-27 21:16:18.551 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-27 21:16:19.583 +02:00 [DBG] Login Url: /Account/Login
2019-04-27 21:16:19.585 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-27 21:16:19.585 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-27 21:16:19.585 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-27 21:16:19.585 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-27 21:16:19.586 +02:00 [DBG] Error Url: /home/error
2019-04-27 21:16:19.586 +02:00 [DBG] Error Id Parameter: errorId
2019-04-27 21:16:19.597 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:16:19.613 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:17:53.723 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:17:53.723 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:17:53.727 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-27 21:17:53.816 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-27 21:17:53.816 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-27 21:17:53.820 +02:00 [DBG] Start authorize request
2019-04-27 21:17:53.825 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:17:53.828 +02:00 [DBG] No user present in authorize request
2019-04-27 21:17:53.833 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 21:17:53.851 +02:00 [ERR] Unknown client or not enabled: frontStore
{"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"74554d82eca74be5a7e1f57cf87b314a","code_challenge":"1WqqfwK_XzgxQe2b-mOTHS7BQ5r-AKCXiOWfcdE7q6g","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 21:17:53.863 +02:00 [ERR] Request validation failed
2019-04-27 21:17:53.863 +02:00 [INF] {"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"74554d82eca74be5a7e1f57cf87b314a","code_challenge":"1WqqfwK_XzgxQe2b-mOTHS7BQ5r-AKCXiOWfcdE7q6g","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 21:17:53.883 +02:00 [INF] {"ClientId":"frontStore","ClientName":null,"RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Unknown client or client not enabled","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLMB8J9U5G0U:00000001","TimeStamp":"2019-04-27T19:17:53.0000000Z","ProcessId":58520,"LocalIpAddress":"127.0.0.1:33526","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-04-27 21:17:53.905 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:17:53.905 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:24:46.670 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-27 21:24:46.736 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-27 21:24:46.739 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-27 21:24:46.740 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-27 21:24:46.740 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-27 21:24:46.740 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-27 21:24:46.740 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-27 21:24:47.657 +02:00 [DBG] Login Url: /Account/Login
2019-04-27 21:24:47.661 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-27 21:24:47.661 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-27 21:24:47.662 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-27 21:24:47.662 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-27 21:24:47.662 +02:00 [DBG] Error Url: /home/error
2019-04-27 21:24:47.662 +02:00 [DBG] Error Id Parameter: errorId
2019-04-27 21:24:47.675 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:24:47.675 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:24:47.702 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:24:47.702 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:24:53.414 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:24:53.414 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:24:53.423 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 21:24:53.427 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 21:24:53.428 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 21:24:53.432 +02:00 [DBG] Rendering check session result
2019-04-27 21:24:54.724 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:24:54.724 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:24:54.724 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-27 21:24:54.823 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-27 21:24:54.823 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-27 21:24:54.826 +02:00 [DBG] Start authorize request
2019-04-27 21:24:54.830 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:24:54.834 +02:00 [DBG] No user present in authorize request
2019-04-27 21:24:54.838 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 21:24:54.854 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:24:54.858 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 21:24:54.892 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 21:24:54.904 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"46d539a092624d08ba32a9591d255381","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"46d539a092624d08ba32a9591d255381","code_challenge":"jP8LIEVcF42-1njpl7XrzQK63iTbKVPcsMYf5sfmpX0","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 21:24:54.920 +02:00 [INF] Showing login: User is not authenticated
2019-04-27 21:24:54.928 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:24:54.928 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:24:54.946 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:24:54.946 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 21:24:54.946 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:24:54.946 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 21:24:54.947 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 21:24:54.950 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:25:13.953 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-27 21:25:13.954 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:25:13.955 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:25:13.997 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:25:13.998 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 21:25:13.998 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:25:13.998 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 21:25:13.998 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 21:25:15.516 +02:00 [DBG] Augmenting SignInContext
2019-04-27 21:25:15.519 +02:00 [DBG] Adding idp claim with value: local
2019-04-27 21:25:15.519 +02:00 [DBG] Adding amr claim with value: pwd
2019-04-27 21:25:15.519 +02:00 [DBG] Adding auth_time claim with value: 1556393115
2019-04-27 21:25:15.521 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-04-27 21:25:15.529 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-27 21:25:15.561 +02:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLMB8O1BJDDS:00000004","TimeStamp":"2019-04-27T19:25:15.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-27 21:25:15.564 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:25:15.588 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-27 21:25:15.589 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-27 21:25:15.589 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-27 21:25:15.594 +02:00 [DBG] Start authorize callback request
2019-04-27 21:25:15.598 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 21:25:15.598 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 21:25:15.598 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:25:15.599 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 21:25:15.599 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 21:25:15.599 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"46d539a092624d08ba32a9591d255381","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"35f59761faacdf1b25972e05f388b9a1","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"46d539a092624d08ba32a9591d255381","code_challenge":"jP8LIEVcF42-1njpl7XrzQK63iTbKVPcsMYf5sfmpX0","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 21:25:16.056 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-27 21:25:16.056 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-27 21:25:16.056 +02:00 [INF] Showing consent: User has not yet consented
2019-04-27 21:25:16.080 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 21:25:16.080 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:25:16.080 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 21:25:16.080 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 21:25:16.080 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:25:49.166 +02:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-27 21:25:49.181 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 21:25:49.181 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:25:49.181 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 21:25:49.181 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 21:25:49.182 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RequestedScopes":["openid","profile","api1"],"GrantedScopes":["openid","profile","api1"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLMB8O1BJDDS:00000005","TimeStamp":"2019-04-27T19:25:49.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-04-27 21:25:49.195 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:25:49.366 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-27 21:25:49.367 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-27 21:25:49.367 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-27 21:25:49.367 +02:00 [DBG] Start authorize callback request
2019-04-27 21:25:49.370 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 21:25:49.370 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 21:25:49.371 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:25:49.371 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 21:25:49.371 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 21:25:49.371 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"46d539a092624d08ba32a9591d255381","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"35f59761faacdf1b25972e05f388b9a1","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"46d539a092624d08ba32a9591d255381","code_challenge":"jP8LIEVcF42-1njpl7XrzQK63iTbKVPcsMYf5sfmpX0","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 21:25:49.637 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-27 21:25:49.637 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-27 21:25:49.642 +02:00 [INF] User consented to scopes: ["openid","profile","api1"]
2019-04-27 21:25:49.644 +02:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1"]
2019-04-27 21:25:49.647 +02:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 21:25:49.659 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-27 21:25:49.679 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****dc43","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMB8O1BJDDQ:00000007","TimeStamp":"2019-04-27T19:25:49.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-27 21:25:49.680 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"46d539a092624d08ba32a9591d255381","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-27 21:25:49.694 +02:00 [DBG] Augmenting SignInContext
2019-04-27 21:25:49.695 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-27 21:25:50.541 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 21:25:50.544 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 21:25:50.544 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 21:25:50.547 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 21:25:50.554 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 21:25:50.554 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 21:25:50.559 +02:00 [DBG] Start discovery request
2019-04-27 21:25:50.599 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 21:25:50.600 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 21:25:50.600 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 21:25:50.601 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 21:25:50.601 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 21:25:50.601 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 21:25:50.602 +02:00 [DBG] Start discovery request
2019-04-27 21:25:50.603 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-27 21:25:50.603 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 21:25:50.603 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 21:25:50.603 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-27 21:25:50.610 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-27 21:25:50.611 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-27 21:25:50.615 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 21:25:50.615 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 21:25:50.616 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 21:25:50.616 +02:00 [DBG] Rendering check session result
2019-04-27 21:25:50.622 +02:00 [DBG] Start token request.
2019-04-27 21:25:50.633 +02:00 [DBG] Start client validation
2019-04-27 21:25:50.638 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-27 21:25:50.642 +02:00 [DBG] Start parsing for secret in post body
2019-04-27 21:25:50.643 +02:00 [DBG] client id without secret found
2019-04-27 21:25:50.643 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-27 21:25:50.643 +02:00 [DBG] Secret id found: frontStore
2019-04-27 21:25:50.643 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:25:50.643 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-27 21:25:50.643 +02:00 [DBG] Client validation success
2019-04-27 21:25:50.644 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMB8O1BJDDT:00000005","TimeStamp":"2019-04-27T19:25:50.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-27 21:25:50.650 +02:00 [DBG] Start token request validation
2019-04-27 21:25:50.658 +02:00 [DBG] Start validation of authorization code token request
2019-04-27 21:25:50.670 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-27 21:25:50.916 +02:00 [DBG] Validation of authorization code token request success
2019-04-27 21:25:50.920 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"dbc0e6f6be233064f7be6a482293d9237c5e85fe44d0ddbfb9d2262c8e07dc43","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"dbc0e6f6be233064f7be6a482293d9237c5e85fe44d0ddbfb9d2262c8e07dc43","redirect_uri":"http://localhost:8080/callback","code_verifier":"424660d88e8f4e95893d96e03f201598485e063d428045609b49248e2e00be4801f8caca411146ca8368467243b8db9f","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-27 21:25:50.938 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:25:50.947 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-27 21:25:50.947 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 21:25:51.297 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:25:51.305 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-27 21:25:51.305 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-27 21:25:51.311 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****lPUw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Viyg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMB8O1BJDDT:00000005","TimeStamp":"2019-04-27T19:25:51.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-27 21:25:51.313 +02:00 [DBG] Token request success.
2019-04-27 21:25:51.329 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-27 21:25:51.329 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 21:25:51.329 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 21:25:51.336 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-27 21:25:51.336 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 21:25:51.336 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 21:25:51.337 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-27 21:25:51.338 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-27 21:25:51.338 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-27 21:25:51.348 +02:00 [DBG] Start userinfo request
2019-04-27 21:25:51.352 +02:00 [DBG] Bearer token found in header
2019-04-27 21:25:51.405 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:25:51.408 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 21:25:51.500 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-27 21:25:51.502 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556393151,"exp":1556396751,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556393115,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-27 21:25:51.509 +02:00 [DBG] Creating userinfo response
2019-04-27 21:25:51.511 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-27 21:25:51.514 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-27 21:25:51.516 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-27 21:25:51.516 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-27 21:25:51.549 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-27 21:25:51.550 +02:00 [DBG] End userinfo request
2019-04-27 21:25:51.567 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 21:25:51.568 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 21:25:51.568 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 21:25:51.568 +02:00 [DBG] Rendering check session result
2019-04-27 21:25:53.038 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 21:25:53.038 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 21:25:53.038 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 21:25:53.039 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 21:25:53.041 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 21:25:53.041 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 21:25:53.041 +02:00 [DBG] Start discovery request
2019-04-27 21:25:53.154 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 21:25:53.154 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 21:25:53.155 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 21:25:53.155 +02:00 [DBG] Rendering check session result
2019-04-27 22:38:41.687 +02:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-27 22:38:41.692 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-27 22:38:41.693 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-27 22:38:41.701 +02:00 [DBG] Processing signout request for de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 22:38:41.708 +02:00 [DBG] Start end session request validation
2019-04-27 22:38:41.713 +02:00 [DBG] Start identity token validation
2019-04-27 22:38:41.717 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:38:41.718 +02:00 [DBG] Client found: frontStore / Front Store Client
2019-04-27 22:38:41.721 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-27 22:38:41.721 +02:00 [DBG] Token validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556393151,"exp":1556393451,"iss":"http://localhost:5000","aud":"frontStore","iat":1556393151,"at_hash":"zTbXrSlZOivl-xffw6_XuA","sid":"35f59761faacdf1b25972e05f388b9a1","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556393115,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-27 22:38:41.725 +02:00 [INF] End session request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","PostLogOutUri":"http://localhost:8080","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjY4NjEzN2E5NzllNzI0MWY1MzczZmM2YWUzZWNiZTE5IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NTYzOTMxNTEsImV4cCI6MTU1NjM5MzQ1MSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoiZnJvbnRTdG9yZSIsImlhdCI6MTU1NjM5MzE1MSwiYXRfaGFzaCI6InpUYlhyU2xaT2l2bC14ZmZ3Nl9YdUEiLCJzaWQiOiIzNWY1OTc2MWZhYWNkZjFiMjU5NzJlMDVmMzg4YjlhMSIsInN1YiI6ImRlM2YyNWM4LTI0NmMtNDA2MS1iZmE2LTg2YzY2OTgxNzJmZSIsImF1dGhfdGltZSI6MTU1NjM5MzExNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.jmzDFVWNFVAVT2XdaQg1WRSYXKkV8ZUhIScNmEVWbvD6T_Zbx9Fk0vkYQS87L4gQlDzcM8f1flmnDNuGRveDqaKZkI0afTD9UpCcf_brIPaL1teEqmMEGJx1kMYaIQVUT889XE_DgFRmp8wHlZDCtxpgqpqA9IUz_PrCAZV5KsTgzoYx8PbSCYVyh66Y0D8-bhBgLXBSZnuEAcjuIa1XdFeoR9yGPOPm7JEE73__c4d5cs45GfBqjy44bbbRxlBw0UkaKWImSZOV-aupTG5TpPUrBB0GizzHjVGB5XXHR4dznqkPydtHbaQIoPG_jQ954wD565kCr0r9LX_AmplPUw","post_logout_redirect_uri":"http://localhost:8080"},"$type":"EndSessionRequestValidationLog"}
2019-04-27 22:38:41.725 +02:00 [DBG] Success validating end session request from frontStore
2019-04-27 22:38:41.816 +02:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-27 22:38:41.817 +02:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-27 22:38:41.818 +02:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-27 22:38:41.819 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLMB8O1BJDDU:00000002","TimeStamp":"2019-04-27T20:38:41.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-27 22:38:42.053 +02:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-27 22:38:42.057 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-27 22:38:42.057 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-27 22:38:42.065 +02:00 [DBG] Processing signout callback request
2019-04-27 22:38:42.088 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:38:42.088 +02:00 [DBG] No client front-channel logout URLs
2019-04-27 22:38:42.089 +02:00 [DBG] No client back-channel logout URLs
2019-04-27 22:38:42.089 +02:00 [INF] Successful signout callback.
2019-04-27 22:38:42.089 +02:00 [DBG] No client front-channel iframe urls
2019-04-27 22:38:42.089 +02:00 [DBG] No client back-channel iframe urls
2019-04-27 22:39:28.055 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 22:39:28.056 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 22:39:28.056 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 22:39:28.057 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 22:39:28.057 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 22:39:28.057 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 22:39:28.057 +02:00 [DBG] Start discovery request
2019-04-27 22:39:28.090 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-27 22:39:28.090 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-27 22:39:28.090 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-27 22:39:28.090 +02:00 [DBG] Start authorize request
2019-04-27 22:39:28.091 +02:00 [DBG] No user present in authorize request
2019-04-27 22:39:28.091 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 22:39:28.091 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:39:28.091 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 22:39:28.091 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 22:39:28.092 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"312f09766f184b90be07ba1d52ab6848","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"312f09766f184b90be07ba1d52ab6848","code_challenge":"Mms9RAef1bK0uDDAz8uuUKmKBnp7l_BrYiWqazfxsh4","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 22:39:28.092 +02:00 [INF] Showing login: User is not authenticated
2019-04-27 22:39:28.115 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 22:39:28.115 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:39:28.116 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 22:39:28.116 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 22:39:28.116 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:39:45.103 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-27 22:39:45.106 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 22:39:45.106 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:39:45.106 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 22:39:45.107 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 22:39:45.399 +02:00 [DBG] Augmenting SignInContext
2019-04-27 22:39:45.399 +02:00 [DBG] Adding idp claim with value: local
2019-04-27 22:39:45.399 +02:00 [DBG] Adding amr claim with value: pwd
2019-04-27 22:39:45.399 +02:00 [DBG] Adding auth_time claim with value: 1556397585
2019-04-27 22:39:45.400 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-27 22:39:45.650 +02:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLMB8O1BJDDV:00000005","TimeStamp":"2019-04-27T20:39:45.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-27 22:39:45.650 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:39:45.661 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-27 22:39:45.662 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-27 22:39:45.662 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-27 22:39:45.662 +02:00 [DBG] Start authorize callback request
2019-04-27 22:39:45.662 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 22:39:45.662 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 22:39:45.662 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:39:45.662 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 22:39:45.662 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 22:39:45.663 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"312f09766f184b90be07ba1d52ab6848","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9cee472e97efa62302efb6c0facb3b7a","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"312f09766f184b90be07ba1d52ab6848","code_challenge":"Mms9RAef1bK0uDDAz8uuUKmKBnp7l_BrYiWqazfxsh4","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 22:39:45.678 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-27 22:39:45.678 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-27 22:39:45.688 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****7373","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMB8O1BJDE1:00000004","TimeStamp":"2019-04-27T20:39:45.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-27 22:39:45.689 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"312f09766f184b90be07ba1d52ab6848","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-27 22:39:45.689 +02:00 [DBG] Augmenting SignInContext
2019-04-27 22:39:45.690 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-27 22:39:46.685 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 22:39:46.685 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 22:39:46.685 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 22:39:46.686 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 22:39:46.686 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 22:39:46.686 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 22:39:46.686 +02:00 [DBG] Start discovery request
2019-04-27 22:39:46.801 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-27 22:39:46.801 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 22:39:46.801 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 22:39:46.802 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-27 22:39:46.802 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-27 22:39:46.803 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-27 22:39:46.803 +02:00 [DBG] Start token request.
2019-04-27 22:39:46.803 +02:00 [DBG] Start client validation
2019-04-27 22:39:46.803 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-27 22:39:46.803 +02:00 [DBG] Start parsing for secret in post body
2019-04-27 22:39:46.804 +02:00 [DBG] client id without secret found
2019-04-27 22:39:46.804 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-27 22:39:46.804 +02:00 [DBG] Secret id found: frontStore
2019-04-27 22:39:46.804 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:39:46.804 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-27 22:39:46.804 +02:00 [DBG] Client validation success
2019-04-27 22:39:46.804 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMB8O1BJDE0:00000006","TimeStamp":"2019-04-27T20:39:46.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-27 22:39:46.805 +02:00 [DBG] Start token request validation
2019-04-27 22:39:46.805 +02:00 [DBG] Start validation of authorization code token request
2019-04-27 22:39:46.829 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-27 22:39:47.121 +02:00 [DBG] Validation of authorization code token request success
2019-04-27 22:39:47.121 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"8d750ee3972d1ed22f6914dcb56944c08d5f42b2dfb3f578fc6e006c92b77373","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"8d750ee3972d1ed22f6914dcb56944c08d5f42b2dfb3f578fc6e006c92b77373","redirect_uri":"http://localhost:8080/callback","code_verifier":"58c90f09866949a69ac88b3e536253a51f8152c967b7412b98ef3bcf10a7be570c3539e4ca504b8382577881727a699c","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-27 22:39:47.122 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:39:47.122 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-27 22:39:47.122 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 22:39:47.346 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:39:47.347 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-27 22:39:47.347 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-27 22:39:47.351 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****dqDw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****uOAQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMB8O1BJDE0:00000006","TimeStamp":"2019-04-27T20:39:47.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-27 22:39:47.352 +02:00 [DBG] Token request success.
2019-04-27 22:39:47.365 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-27 22:39:47.365 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 22:39:47.365 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 22:39:47.372 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-27 22:39:47.372 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 22:39:47.372 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 22:39:47.372 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-27 22:39:47.373 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-27 22:39:47.373 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-27 22:39:47.374 +02:00 [DBG] Start userinfo request
2019-04-27 22:39:47.374 +02:00 [DBG] Bearer token found in header
2019-04-27 22:39:47.377 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:39:47.377 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:39:47.667 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-27 22:39:47.668 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556397587,"exp":1556401187,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556397585,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-27 22:39:47.668 +02:00 [DBG] Creating userinfo response
2019-04-27 22:39:47.668 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-27 22:39:47.668 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-27 22:39:47.669 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-27 22:39:47.669 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-27 22:39:47.975 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-27 22:39:47.975 +02:00 [DBG] End userinfo request
2019-04-27 22:39:47.995 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 22:39:47.995 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 22:39:47.996 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 22:39:47.996 +02:00 [DBG] Rendering check session result
2019-04-27 22:39:48.698 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 22:39:48.699 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 22:39:48.699 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 22:39:48.699 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 22:39:48.700 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 22:39:48.700 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 22:39:48.701 +02:00 [DBG] Start discovery request
2019-04-27 22:39:48.905 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 22:39:48.905 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 22:39:48.905 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 22:39:48.906 +02:00 [DBG] Rendering check session result
2019-04-27 22:40:23.948 +02:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-27 22:40:23.949 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-27 22:40:23.949 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-27 22:40:23.949 +02:00 [DBG] Processing signout request for de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 22:40:23.949 +02:00 [DBG] Start end session request validation
2019-04-27 22:40:23.949 +02:00 [DBG] Start identity token validation
2019-04-27 22:40:23.951 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:40:23.951 +02:00 [DBG] Client found: frontStore / Front Store Client
2019-04-27 22:40:24.188 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-27 22:40:24.188 +02:00 [DBG] Token validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556397587,"exp":1556397887,"iss":"http://localhost:5000","aud":"frontStore","iat":1556397587,"at_hash":"azLaLpDTQCYcBJf-tLMOSg","sid":"9cee472e97efa62302efb6c0facb3b7a","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556397585,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-27 22:40:24.192 +02:00 [INF] End session request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","PostLogOutUri":"http://localhost:8080","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjY4NjEzN2E5NzllNzI0MWY1MzczZmM2YWUzZWNiZTE5IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NTYzOTc1ODcsImV4cCI6MTU1NjM5Nzg4NywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoiZnJvbnRTdG9yZSIsImlhdCI6MTU1NjM5NzU4NywiYXRfaGFzaCI6ImF6TGFMcERUUUNZY0JKZi10TE1PU2ciLCJzaWQiOiI5Y2VlNDcyZTk3ZWZhNjIzMDJlZmI2YzBmYWNiM2I3YSIsInN1YiI6ImRlM2YyNWM4LTI0NmMtNDA2MS1iZmE2LTg2YzY2OTgxNzJmZSIsImF1dGhfdGltZSI6MTU1NjM5NzU4NSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.K0oqo-7wXwk0cRb8T_BRc2QTwpU2bXCYePtwH56_NLFSbVDh-ej6_Dv-j8pUrwHC-dAkD6EKriE2woKPCkivouLzLEqt5TuigIxmQFTnpUozkaDmgqFWOgvSXob-ChgogDyLPD8CYba97xe5N-QIRXKWOQfR2pV9TVZbJ_crw0IFOlor4udzhizKTs2g8Wbns03CJavWlFnCuWKxy8H52J8uY6ilCM8GFdZx6xbaMCVXEumdKEU_KBcB8bI1Y-ZdQamH-HCXl0PyKR6dkWU2Is8YBa-mfKWbopK6fyZp9CwzazBFZibsQcRMJtAvgz516jo8zOguOhFGfsptZNdqDw","post_logout_redirect_uri":"http://localhost:8080"},"$type":"EndSessionRequestValidationLog"}
2019-04-27 22:40:24.194 +02:00 [DBG] Success validating end session request from frontStore
2019-04-27 22:40:24.205 +02:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-27 22:40:24.206 +02:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-27 22:40:24.206 +02:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-27 22:40:24.206 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLMB8O1BJDDU:00000009","TimeStamp":"2019-04-27T20:40:24.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-27 22:40:24.426 +02:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-27 22:40:24.428 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-27 22:40:24.428 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-27 22:40:24.429 +02:00 [DBG] Processing signout callback request
2019-04-27 22:40:24.430 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:40:24.430 +02:00 [DBG] No client front-channel logout URLs
2019-04-27 22:40:24.430 +02:00 [DBG] No client back-channel logout URLs
2019-04-27 22:40:24.430 +02:00 [INF] Successful signout callback.
2019-04-27 22:40:24.430 +02:00 [DBG] No client front-channel iframe urls
2019-04-27 22:40:24.430 +02:00 [DBG] No client back-channel iframe urls
2019-04-27 22:40:29.859 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 22:40:29.860 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 22:40:29.860 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 22:40:29.860 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 22:40:29.861 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 22:40:29.861 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 22:40:29.861 +02:00 [DBG] Start discovery request
2019-04-27 22:40:29.877 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-27 22:40:29.877 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-27 22:40:29.877 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-27 22:40:29.877 +02:00 [DBG] Start authorize request
2019-04-27 22:40:29.878 +02:00 [DBG] No user present in authorize request
2019-04-27 22:40:29.878 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 22:40:29.878 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:40:29.878 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 22:40:29.878 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 22:40:29.878 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"bb027e0d74774f0c8a6f7dc081970124","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"bb027e0d74774f0c8a6f7dc081970124","code_challenge":"k83DPrMQsTUQIcFdF770lB49zA7lpc0PcY_kSKhzcPs","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 22:40:29.878 +02:00 [INF] Showing login: User is not authenticated
2019-04-27 22:40:29.891 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 22:40:29.891 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:40:29.891 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 22:40:29.891 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 22:40:29.891 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:40:35.885 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-27 22:40:35.886 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 22:40:35.886 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:40:35.886 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 22:40:35.887 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 22:40:36.157 +02:00 [DBG] Augmenting SignInContext
2019-04-27 22:40:36.157 +02:00 [DBG] Adding idp claim with value: local
2019-04-27 22:40:36.157 +02:00 [DBG] Adding amr claim with value: pwd
2019-04-27 22:40:36.157 +02:00 [DBG] Adding auth_time claim with value: 1556397636
2019-04-27 22:40:36.157 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-27 22:40:36.161 +02:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLMB8O1BJDDU:0000000D","TimeStamp":"2019-04-27T20:40:36.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-27 22:40:36.161 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:40:36.168 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-27 22:40:36.169 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-27 22:40:36.169 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-27 22:40:36.169 +02:00 [DBG] Start authorize callback request
2019-04-27 22:40:36.169 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 22:40:36.170 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 22:40:36.170 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:40:36.170 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 22:40:36.170 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 22:40:36.170 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"bb027e0d74774f0c8a6f7dc081970124","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0c2f9764aec40da33e50a3b7643caf83","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"bb027e0d74774f0c8a6f7dc081970124","code_challenge":"k83DPrMQsTUQIcFdF770lB49zA7lpc0PcY_kSKhzcPs","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 22:40:36.183 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-27 22:40:36.183 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-27 22:40:36.194 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****eddb","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMB8O1BJDE0:0000000B","TimeStamp":"2019-04-27T20:40:36.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-27 22:40:36.194 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"bb027e0d74774f0c8a6f7dc081970124","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-27 22:40:36.195 +02:00 [DBG] Augmenting SignInContext
2019-04-27 22:40:36.195 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-27 22:40:37.290 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 22:40:37.290 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 22:40:37.290 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 22:40:37.291 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 22:40:37.291 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 22:40:37.291 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 22:40:37.292 +02:00 [DBG] Start discovery request
2019-04-27 22:40:37.415 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-27 22:40:37.415 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 22:40:37.415 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 22:40:37.416 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-27 22:40:37.416 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-27 22:40:37.416 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-27 22:40:37.416 +02:00 [DBG] Start token request.
2019-04-27 22:40:37.416 +02:00 [DBG] Start client validation
2019-04-27 22:40:37.416 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-27 22:40:37.416 +02:00 [DBG] Start parsing for secret in post body
2019-04-27 22:40:37.417 +02:00 [DBG] client id without secret found
2019-04-27 22:40:37.417 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-27 22:40:37.417 +02:00 [DBG] Secret id found: frontStore
2019-04-27 22:40:37.417 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:40:37.417 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-27 22:40:37.418 +02:00 [DBG] Client validation success
2019-04-27 22:40:37.418 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMB8O1BJDE1:0000000C","TimeStamp":"2019-04-27T20:40:37.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-27 22:40:37.418 +02:00 [DBG] Start token request validation
2019-04-27 22:40:37.418 +02:00 [DBG] Start validation of authorization code token request
2019-04-27 22:40:37.437 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-27 22:40:37.678 +02:00 [DBG] Validation of authorization code token request success
2019-04-27 22:40:37.678 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"af91f912f2da7520546c3a8d167df3a991156bbf1faedc6b1f8d3986c332eddb","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"af91f912f2da7520546c3a8d167df3a991156bbf1faedc6b1f8d3986c332eddb","redirect_uri":"http://localhost:8080/callback","code_verifier":"0f29f44dd8f4478196fdc1298271bf05ad1a335620724501b4d1b37ba8ee7364c63cd66d6ef74e5fb15cf88d6eabd6c8","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-27 22:40:37.678 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:40:37.679 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-27 22:40:37.679 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 22:40:37.712 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:40:37.713 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-27 22:40:37.713 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-27 22:40:37.716 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****TF5w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****xAxw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMB8O1BJDE1:0000000C","TimeStamp":"2019-04-27T20:40:37.0000000Z","ProcessId":70704,"LocalIpAddress":"127.0.0.1:41075","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-27 22:40:37.716 +02:00 [DBG] Token request success.
2019-04-27 22:40:37.728 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-27 22:40:37.728 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 22:40:37.729 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 22:40:37.750 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-27 22:40:37.750 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 22:40:37.750 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 22:40:37.751 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-27 22:40:37.752 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-27 22:40:37.752 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-27 22:40:37.752 +02:00 [DBG] Start userinfo request
2019-04-27 22:40:37.752 +02:00 [DBG] Bearer token found in header
2019-04-27 22:40:37.756 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:40:37.756 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 22:40:38.017 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-27 22:40:38.017 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556397637,"exp":1556401237,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556397636,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-27 22:40:38.018 +02:00 [DBG] Creating userinfo response
2019-04-27 22:40:38.018 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-27 22:40:38.018 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-27 22:40:38.018 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-27 22:40:38.018 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-27 22:40:38.062 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-27 22:40:38.062 +02:00 [DBG] End userinfo request
2019-04-27 22:40:38.084 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 22:40:38.084 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 22:40:38.084 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 22:40:38.085 +02:00 [DBG] Rendering check session result
2019-04-27 22:40:38.894 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 22:40:38.894 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 22:40:38.894 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 22:40:38.894 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 22:40:38.895 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 22:40:38.895 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 22:40:38.895 +02:00 [DBG] Start discovery request
2019-04-27 22:40:39.040 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 22:40:39.040 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 22:40:39.040 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 22:40:39.040 +02:00 [DBG] Rendering check session result
2019-04-27 23:34:39.423 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-27 23:34:39.466 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-27 23:34:39.470 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-27 23:34:39.470 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-27 23:34:39.470 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-27 23:34:39.470 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-27 23:34:39.470 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-27 23:34:39.711 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 23:34:39.716 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:34:39.716 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:34:39.740 +02:00 [DBG] Login Url: /Account/Login
2019-04-27 23:34:39.740 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-27 23:34:39.740 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-27 23:34:39.740 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-27 23:34:39.740 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-27 23:34:39.740 +02:00 [DBG] Error Url: /home/error
2019-04-27 23:34:39.740 +02:00 [DBG] Error Id Parameter: errorId
2019-04-27 23:34:39.756 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:34:39.820 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:34:39.820 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:34:39.822 +02:00 [DBG] Start discovery request
2019-04-27 23:34:40.722 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 23:34:40.723 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 23:34:40.723 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 23:34:40.724 +02:00 [DBG] Rendering check session result
2019-04-27 23:34:43.497 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 23:34:43.497 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:34:43.498 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:34:43.499 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:34:43.500 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:34:43.500 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:34:43.500 +02:00 [DBG] Start discovery request
2019-04-27 23:34:43.758 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 23:34:43.758 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 23:34:43.758 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 23:34:43.758 +02:00 [DBG] Rendering check session result
2019-04-27 23:37:33.361 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-27 23:37:33.461 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-27 23:37:33.466 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-27 23:37:33.466 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-27 23:37:33.466 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-27 23:37:33.466 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-27 23:37:33.466 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-27 23:37:34.484 +02:00 [DBG] Login Url: /Account/Login
2019-04-27 23:37:34.492 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-27 23:37:34.492 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-27 23:37:34.493 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-27 23:37:34.493 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-27 23:37:34.493 +02:00 [DBG] Error Url: /home/error
2019-04-27 23:37:34.493 +02:00 [DBG] Error Id Parameter: errorId
2019-04-27 23:42:28.221 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 23:42:28.230 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:42:28.230 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:42:28.290 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:42:28.297 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:42:28.298 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:42:28.301 +02:00 [DBG] Start discovery request
2019-04-27 23:42:28.479 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 23:42:28.480 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 23:42:28.480 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 23:42:28.481 +02:00 [DBG] Rendering check session result
2019-04-27 23:43:09.963 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 23:43:09.963 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:43:09.976 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:43:09.977 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:43:09.977 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:43:09.978 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:43:09.978 +02:00 [DBG] Start discovery request
2019-04-27 23:43:10.048 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 23:43:10.048 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 23:43:10.048 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 23:43:10.048 +02:00 [DBG] Rendering check session result
2019-04-27 23:43:17.522 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 23:43:17.522 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:43:17.522 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:43:17.523 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:43:17.524 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:43:17.524 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:43:17.524 +02:00 [DBG] Start discovery request
2019-04-27 23:43:17.680 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 23:43:17.680 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 23:43:17.680 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 23:43:17.680 +02:00 [DBG] Rendering check session result
2019-04-27 23:43:23.140 +02:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-27 23:43:23.143 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-27 23:43:23.143 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-27 23:43:23.167 +02:00 [DBG] Processing signout request for de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 23:43:23.172 +02:00 [DBG] Start end session request validation
2019-04-27 23:43:23.179 +02:00 [DBG] Start identity token validation
2019-04-27 23:43:23.227 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:43:23.227 +02:00 [DBG] Client found: frontStore / Front Store Client
2019-04-27 23:43:24.283 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-27 23:43:24.292 +02:00 [DBG] Token validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556397637,"exp":1556397937,"iss":"http://localhost:5000","aud":"frontStore","iat":1556397637,"at_hash":"qYksrNHFMIobnVswtDFcyw","sid":"0c2f9764aec40da33e50a3b7643caf83","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556397636,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-27 23:43:24.311 +02:00 [INF] End session request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","PostLogOutUri":"http://localhost:8080","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjY4NjEzN2E5NzllNzI0MWY1MzczZmM2YWUzZWNiZTE5IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NTYzOTc2MzcsImV4cCI6MTU1NjM5NzkzNywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoiZnJvbnRTdG9yZSIsImlhdCI6MTU1NjM5NzYzNywiYXRfaGFzaCI6InFZa3NyTkhGTUlvYm5Wc3d0REZjeXciLCJzaWQiOiIwYzJmOTc2NGFlYzQwZGEzM2U1MGEzYjc2NDNjYWY4MyIsInN1YiI6ImRlM2YyNWM4LTI0NmMtNDA2MS1iZmE2LTg2YzY2OTgxNzJmZSIsImF1dGhfdGltZSI6MTU1NjM5NzYzNiwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.Vd9Msy6gYMoTdkxArGt0b55MJzvwsCYj0yi6NjXgbepvd9TKP6jL7OpFBBZTmugPHZjXL5rlaHOATtLx8ai6Kb8eQXVG0DQT_VaOOFdMX8l1XBdS961F87i4J0oco3xjwv_CjYn0ueYznovftIt9ujFxk-xCfqQA5E1GEItwMQwIX-XTJNvO8fclgjG2khJ57tDAlJrRZHQrPC8iElVB7BgvPN59OnljyuNCVEyT3N1QQ8voVGDMptykEmMK3ZzRqsXTjO37j_1HkWGi0TXH3gA7fYWknaWrBmURmrLLgEEqqKf3eHyNnAOYllH5sqysZG86VgANlbwpqQOstBTF5w","post_logout_redirect_uri":"http://localhost:8080"},"$type":"EndSessionRequestValidationLog"}
2019-04-27 23:43:24.313 +02:00 [DBG] Success validating end session request from frontStore
2019-04-27 23:43:24.415 +02:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-27 23:43:24.416 +02:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-27 23:43:24.417 +02:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-27 23:43:24.436 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLMBB27ICCHQ:00000008","TimeStamp":"2019-04-27T21:43:24.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-27 23:43:24.745 +02:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-27 23:43:24.750 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-27 23:43:24.750 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-27 23:43:24.816 +02:00 [DBG] Processing signout callback request
2019-04-27 23:43:24.830 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:43:24.830 +02:00 [DBG] No client front-channel logout URLs
2019-04-27 23:43:24.830 +02:00 [DBG] No client back-channel logout URLs
2019-04-27 23:43:24.831 +02:00 [INF] Successful signout callback.
2019-04-27 23:43:24.831 +02:00 [DBG] No client front-channel iframe urls
2019-04-27 23:43:24.831 +02:00 [DBG] No client back-channel iframe urls
2019-04-27 23:49:46.065 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 23:49:46.066 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:49:46.066 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:49:46.066 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:49:46.067 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:49:46.067 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:49:46.067 +02:00 [DBG] Start discovery request
2019-04-27 23:49:46.122 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-27 23:49:46.125 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-27 23:49:46.126 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-27 23:49:46.131 +02:00 [DBG] Start authorize request
2019-04-27 23:49:46.136 +02:00 [DBG] No user present in authorize request
2019-04-27 23:49:46.144 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 23:49:46.151 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:49:46.160 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 23:49:46.195 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 23:49:46.199 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"a417446bcb0b42a2b64087c594b6d8fe","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"a417446bcb0b42a2b64087c594b6d8fe","code_challenge":"tRvDJZz8VU6aedMrjDf_WC2pP_JqsBCAcvlVluYtgK8","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 23:49:46.210 +02:00 [INF] Showing login: User is not authenticated
2019-04-27 23:49:46.239 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 23:49:46.239 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:49:46.239 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 23:49:46.239 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 23:49:46.243 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:49:51.760 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-27 23:49:51.797 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 23:49:51.797 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:49:51.797 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 23:49:51.797 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 23:49:52.658 +02:00 [DBG] Augmenting SignInContext
2019-04-27 23:49:52.660 +02:00 [DBG] Adding idp claim with value: local
2019-04-27 23:49:52.660 +02:00 [DBG] Adding amr claim with value: pwd
2019-04-27 23:49:52.661 +02:00 [DBG] Adding auth_time claim with value: 1556401792
2019-04-27 23:49:52.667 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-27 23:49:52.688 +02:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLMBB27ICCHU:00000005","TimeStamp":"2019-04-27T21:49:52.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-27 23:49:52.690 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:49:52.712 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-27 23:49:52.713 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-27 23:49:52.713 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-27 23:49:52.720 +02:00 [DBG] Start authorize callback request
2019-04-27 23:49:52.725 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 23:49:52.726 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 23:49:52.726 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:49:52.726 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 23:49:52.726 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 23:49:52.726 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"a417446bcb0b42a2b64087c594b6d8fe","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0cd69dc46097bf82150d28a17b66e31e","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"a417446bcb0b42a2b64087c594b6d8fe","code_challenge":"tRvDJZz8VU6aedMrjDf_WC2pP_JqsBCAcvlVluYtgK8","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 23:49:52.999 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-27 23:49:52.999 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-27 23:49:52.999 +02:00 [INF] Showing consent: User has not yet consented
2019-04-27 23:49:53.029 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 23:49:53.029 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:49:53.029 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 23:49:53.029 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 23:49:53.029 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:49:55.045 +02:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-27 23:49:55.080 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 23:49:55.081 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:49:55.081 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 23:49:55.081 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 23:49:55.082 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RequestedScopes":["openid","profile","api1"],"Category":"Grants","Name":"Consent denied","EventType":"Information","Id":4001,"Message":null,"ActivityId":"0HLMBB27ICCHU:00000008","TimeStamp":"2019-04-27T21:49:55.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"ConsentDeniedEvent"}
2019-04-27 23:49:55.094 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:49:55.374 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-27 23:49:55.375 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-27 23:49:55.375 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-27 23:49:55.375 +02:00 [DBG] Start authorize callback request
2019-04-27 23:49:55.377 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 23:49:55.378 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 23:49:55.378 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:49:55.378 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 23:49:55.378 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 23:49:55.379 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"a417446bcb0b42a2b64087c594b6d8fe","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0cd69dc46097bf82150d28a17b66e31e","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"a417446bcb0b42a2b64087c594b6d8fe","code_challenge":"tRvDJZz8VU6aedMrjDf_WC2pP_JqsBCAcvlVluYtgK8","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 23:49:55.621 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-27 23:49:55.621 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-27 23:49:55.621 +02:00 [INF] Error: User denied consent
2019-04-27 23:49:55.627 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"a417446bcb0b42a2b64087c594b6d8fe","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0cd69dc46097bf82150d28a17b66e31e","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"a417446bcb0b42a2b64087c594b6d8fe","code_challenge":"tRvDJZz8VU6aedMrjDf_WC2pP_JqsBCAcvlVluYtgK8","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 23:49:55.629 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLMBB27ICCI0:00000006","TimeStamp":"2019-04-27T21:49:55.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-04-27 23:51:19.212 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 23:51:19.212 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:51:19.212 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:51:19.212 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:51:19.213 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:51:19.213 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:51:19.213 +02:00 [DBG] Start discovery request
2019-04-27 23:51:19.230 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-27 23:51:19.231 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-27 23:51:19.231 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-27 23:51:19.231 +02:00 [DBG] Start authorize request
2019-04-27 23:51:19.231 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 23:51:19.231 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 23:51:19.232 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:51:19.232 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 23:51:19.232 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 23:51:19.232 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"b2bbe66c02cb433f87676767ccac94ac","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0cd69dc46097bf82150d28a17b66e31e","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"b2bbe66c02cb433f87676767ccac94ac","code_challenge":"mNhm2HgyaocecIDIYTcP9Z6z179fjFqcE_J8E_J8_dA","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 23:51:19.472 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-27 23:51:19.472 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-27 23:51:19.473 +02:00 [INF] Showing consent: User has not yet consented
2019-04-27 23:51:19.483 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 23:51:19.484 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:51:19.484 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 23:51:19.484 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 23:51:19.484 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:51:22.754 +02:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-27 23:51:22.756 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 23:51:22.756 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:51:22.756 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 23:51:22.757 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 23:51:22.758 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RequestedScopes":["openid","profile","api1"],"GrantedScopes":["openid","profile","api1"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLMBB27ICCI4:00000002","TimeStamp":"2019-04-27T21:51:22.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-04-27 23:51:22.759 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:51:22.962 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-27 23:51:22.962 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-27 23:51:22.962 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-27 23:51:22.962 +02:00 [DBG] Start authorize callback request
2019-04-27 23:51:22.970 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 23:51:22.970 +02:00 [DBG] Start authorize request protocol validation
2019-04-27 23:51:22.970 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:51:22.971 +02:00 [DBG] Checking for PKCE parameters
2019-04-27 23:51:22.971 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-27 23:51:22.971 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"b2bbe66c02cb433f87676767ccac94ac","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0cd69dc46097bf82150d28a17b66e31e","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"b2bbe66c02cb433f87676767ccac94ac","code_challenge":"mNhm2HgyaocecIDIYTcP9Z6z179fjFqcE_J8E_J8_dA","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-27 23:51:23.003 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-27 23:51:23.003 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-27 23:51:23.012 +02:00 [INF] User consented to scopes: ["openid","profile","api1"]
2019-04-27 23:51:23.013 +02:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1"]
2019-04-27 23:51:23.020 +02:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 23:51:23.042 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-27 23:51:23.063 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****435c","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCI3:00000004","TimeStamp":"2019-04-27T21:51:23.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-27 23:51:23.064 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"b2bbe66c02cb433f87676767ccac94ac","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-27 23:51:23.071 +02:00 [DBG] Augmenting SignInContext
2019-04-27 23:51:23.071 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-27 23:51:24.035 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 23:51:24.036 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:51:24.036 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:51:24.036 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:51:24.037 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:51:24.037 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:51:24.037 +02:00 [DBG] Start discovery request
2019-04-27 23:51:24.386 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-27 23:51:24.388 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:51:24.388 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:51:24.389 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-27 23:51:24.404 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-27 23:51:24.404 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-27 23:51:24.420 +02:00 [DBG] Start token request.
2019-04-27 23:51:24.429 +02:00 [DBG] Start client validation
2019-04-27 23:51:24.445 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-27 23:51:24.453 +02:00 [DBG] Start parsing for secret in post body
2019-04-27 23:51:24.453 +02:00 [DBG] client id without secret found
2019-04-27 23:51:24.454 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-27 23:51:24.454 +02:00 [DBG] Secret id found: frontStore
2019-04-27 23:51:24.454 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:51:24.454 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-27 23:51:24.454 +02:00 [DBG] Client validation success
2019-04-27 23:51:24.455 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBB27ICCI5:00000005","TimeStamp":"2019-04-27T21:51:24.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-27 23:51:24.463 +02:00 [DBG] Start token request validation
2019-04-27 23:51:24.484 +02:00 [DBG] Start validation of authorization code token request
2019-04-27 23:51:24.512 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-27 23:51:24.536 +02:00 [DBG] Validation of authorization code token request success
2019-04-27 23:51:24.546 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"5a828d850f4e12339f7f13c90935e9bd95373fd24be6b5d7da4e76863588435c","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"5a828d850f4e12339f7f13c90935e9bd95373fd24be6b5d7da4e76863588435c","redirect_uri":"http://localhost:8080/callback","code_verifier":"0346e1d5a2b14615bf82c49cc5e4f37a280d626e3a274054b4b695cd45d27f6c5437075fffc04878b3f770c94e861c63","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-27 23:51:24.582 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:51:24.614 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-27 23:51:24.615 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-27 23:51:24.716 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:51:24.725 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-27 23:51:24.725 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-27 23:51:24.730 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****eQ2A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****6koA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCI5:00000005","TimeStamp":"2019-04-27T21:51:24.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-27 23:51:24.731 +02:00 [DBG] Token request success.
2019-04-27 23:51:24.743 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-27 23:51:24.744 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:51:24.744 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:51:24.750 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-27 23:51:24.750 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:51:24.750 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:51:24.750 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-27 23:51:24.752 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-27 23:51:24.752 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-27 23:51:24.759 +02:00 [DBG] Start userinfo request
2019-04-27 23:51:24.762 +02:00 [DBG] Bearer token found in header
2019-04-27 23:51:24.776 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:51:24.777 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-27 23:51:24.784 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-27 23:51:24.785 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556401884,"exp":1556402214,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556401792,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-27 23:51:24.794 +02:00 [DBG] Creating userinfo response
2019-04-27 23:51:24.798 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-27 23:51:24.800 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-27 23:51:24.802 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-27 23:51:24.802 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-27 23:51:24.809 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-27 23:51:24.809 +02:00 [DBG] End userinfo request
2019-04-27 23:51:24.824 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 23:51:24.824 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 23:51:24.825 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 23:51:24.825 +02:00 [DBG] Rendering check session result
2019-04-27 23:51:25.678 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 23:51:25.678 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:51:25.678 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:51:25.678 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:51:25.679 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:51:25.679 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:51:25.679 +02:00 [DBG] Start discovery request
2019-04-27 23:51:25.823 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 23:51:25.823 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 23:51:25.823 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 23:51:25.823 +02:00 [DBG] Rendering check session result
2019-04-27 23:52:56.469 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 23:52:56.479 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:52:56.480 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:52:56.480 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:52:56.481 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:52:56.481 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:52:56.481 +02:00 [DBG] Start discovery request
2019-04-27 23:52:56.552 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 23:52:56.552 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 23:52:56.552 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 23:52:56.552 +02:00 [DBG] Rendering check session result
2019-04-27 23:53:19.394 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 23:53:19.394 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:53:19.394 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:53:19.396 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:53:19.396 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:53:19.396 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:53:19.397 +02:00 [DBG] Start discovery request
2019-04-27 23:53:19.560 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 23:53:19.560 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 23:53:19.560 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 23:53:19.560 +02:00 [DBG] Rendering check session result
2019-04-27 23:54:12.346 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-27 23:54:12.347 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-27 23:54:12.347 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-27 23:54:12.347 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:54:12.348 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:54:12.348 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:54:12.348 +02:00 [DBG] Start discovery request
2019-04-27 23:54:12.480 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-27 23:54:12.480 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-27 23:54:12.480 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-27 23:54:12.480 +02:00 [DBG] Rendering check session result
2019-04-27 23:54:14.153 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:54:14.154 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:54:14.154 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:54:14.154 +02:00 [DBG] Start discovery request
2019-04-27 23:54:14.290 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-27 23:54:14.290 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-27 23:54:14.290 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-27 23:54:14.294 +02:00 [DBG] Start key discovery request
2019-04-27 23:54:37.803 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-04-27 23:54:37.803 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-04-27 23:54:37.803 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-04-27 23:54:37.803 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:54:37.804 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:54:37.804 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:54:37.804 +02:00 [DBG] Start discovery request
2019-04-27 23:59:55.345 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-04-27 23:59:55.346 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-04-27 23:59:55.346 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-04-27 23:59:55.346 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-27 23:59:55.346 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-27 23:59:55.346 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-27 23:59:55.346 +02:00 [DBG] Start discovery request
2019-04-28 00:01:52.684 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:01:52.685 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:01:52.685 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:01:52.685 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:01:52.685 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:01:52.685 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:01:52.685 +02:00 [DBG] Start discovery request
2019-04-28 00:01:52.893 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:01:52.893 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:01:52.893 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:01:52.893 +02:00 [DBG] Rendering check session result
2019-04-28 00:02:03.682 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:02:03.682 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:02:03.682 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:02:03.683 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:02:03.683 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:02:03.683 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:02:03.683 +02:00 [DBG] Start discovery request
2019-04-28 00:02:03.808 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:02:03.809 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:02:03.809 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:02:03.809 +02:00 [DBG] Rendering check session result
2019-04-28 00:02:48.929 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:02:48.929 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:02:48.930 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:02:48.930 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:02:48.930 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:02:48.930 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:02:48.931 +02:00 [DBG] Start discovery request
2019-04-28 00:02:49.101 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:02:49.101 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:02:49.101 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:02:49.101 +02:00 [DBG] Rendering check session result
2019-04-28 00:07:33.264 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:07:33.264 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:07:33.265 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:07:33.265 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:07:33.265 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:07:33.265 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:07:33.266 +02:00 [DBG] Start discovery request
2019-04-28 00:07:33.519 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:07:33.519 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:07:33.519 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:07:33.519 +02:00 [DBG] Rendering check session result
2019-04-28 00:07:44.674 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:07:44.674 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:07:44.674 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:07:44.675 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:07:44.675 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:07:44.675 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:07:44.675 +02:00 [DBG] Start discovery request
2019-04-28 00:07:44.816 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:07:44.816 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:07:44.816 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:07:44.816 +02:00 [DBG] Rendering check session result
2019-04-28 00:12:35.960 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:12:35.961 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:12:35.962 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:12:35.962 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:12:35.981 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:12:35.981 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:12:35.981 +02:00 [DBG] Start discovery request
2019-04-28 00:12:36.112 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:12:36.112 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:12:36.112 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:12:36.112 +02:00 [DBG] Rendering check session result
2019-04-28 00:15:02.816 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:15:02.817 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:15:02.817 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:15:02.817 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:15:02.818 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:15:02.818 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:15:02.818 +02:00 [DBG] Start discovery request
2019-04-28 00:15:02.945 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:15:02.945 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:15:02.945 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:15:02.945 +02:00 [DBG] Rendering check session result
2019-04-28 00:15:53.215 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:15:53.215 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:15:53.215 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:15:53.215 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:15:53.216 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:15:53.216 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:15:53.216 +02:00 [DBG] Start discovery request
2019-04-28 00:15:53.534 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:15:53.534 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:15:53.534 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:15:53.534 +02:00 [DBG] Rendering check session result
2019-04-28 00:16:00.551 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:16:00.551 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:16:00.551 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:16:00.552 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:16:00.552 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:16:00.552 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:16:00.552 +02:00 [DBG] Start discovery request
2019-04-28 00:16:00.666 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:16:00.666 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:16:00.666 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:16:00.666 +02:00 [DBG] Rendering check session result
2019-04-28 00:16:11.428 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:16:11.429 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:16:11.429 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:16:11.429 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:16:11.429 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:16:11.430 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:16:11.430 +02:00 [DBG] Start discovery request
2019-04-28 00:16:11.568 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:16:11.568 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:16:11.568 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:16:11.568 +02:00 [DBG] Rendering check session result
2019-04-28 00:16:48.425 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:16:48.425 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:16:48.426 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:16:48.426 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:16:48.426 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:16:48.427 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:16:48.427 +02:00 [DBG] Start discovery request
2019-04-28 00:16:48.470 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:16:48.470 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:16:48.470 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:16:48.470 +02:00 [DBG] Rendering check session result
2019-04-28 00:16:59.142 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:16:59.143 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:16:59.143 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:16:59.144 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:16:59.146 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:16:59.146 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:16:59.146 +02:00 [DBG] Start discovery request
2019-04-28 00:16:59.281 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:16:59.281 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:16:59.281 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:16:59.281 +02:00 [DBG] Rendering check session result
2019-04-28 00:17:25.749 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:17:25.749 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:17:25.749 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:17:25.749 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:17:25.750 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:17:25.751 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:17:25.751 +02:00 [DBG] Start discovery request
2019-04-28 00:17:25.879 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:17:25.880 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:17:25.880 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:17:25.880 +02:00 [DBG] Rendering check session result
2019-04-28 00:18:00.612 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:18:00.614 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:18:00.614 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:18:00.614 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:18:00.615 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:18:00.615 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:18:00.615 +02:00 [DBG] Start discovery request
2019-04-28 00:18:00.777 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:18:00.777 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:18:00.777 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:18:00.777 +02:00 [DBG] Rendering check session result
2019-04-28 00:21:48.983 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:21:48.995 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:21:48.995 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:21:48.996 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:21:48.996 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:21:48.996 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:21:48.996 +02:00 [DBG] Start discovery request
2019-04-28 00:21:49.529 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:21:49.529 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:21:49.530 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:21:49.530 +02:00 [DBG] Rendering check session result
2019-04-28 00:21:54.685 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:21:54.685 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:21:54.685 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:21:54.686 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:21:54.686 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:21:54.686 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:21:54.686 +02:00 [DBG] Start discovery request
2019-04-28 00:21:54.877 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:21:54.877 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:21:54.877 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:21:54.877 +02:00 [DBG] Rendering check session result
2019-04-28 00:22:44.093 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:22:44.094 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:22:44.094 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:22:44.094 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:22:44.096 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:22:44.096 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:22:44.096 +02:00 [DBG] Start discovery request
2019-04-28 00:22:44.144 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:22:44.144 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:22:44.144 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:22:44.144 +02:00 [DBG] Rendering check session result
2019-04-28 00:22:58.711 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:22:58.711 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:22:58.711 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:22:58.712 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:22:58.713 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:22:58.713 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:22:58.713 +02:00 [DBG] Start discovery request
2019-04-28 00:22:58.799 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:22:58.799 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:22:58.799 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:22:58.799 +02:00 [DBG] Rendering check session result
2019-04-28 00:23:10.568 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:23:10.568 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:23:10.569 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:23:10.569 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:23:10.569 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:23:10.569 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:23:10.569 +02:00 [DBG] Start discovery request
2019-04-28 00:23:10.628 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:23:10.628 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:23:10.628 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:23:10.628 +02:00 [DBG] Rendering check session result
2019-04-28 00:23:25.670 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:23:25.670 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:23:25.670 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:23:25.670 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:23:25.672 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:23:25.672 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:23:25.672 +02:00 [DBG] Start discovery request
2019-04-28 00:23:25.701 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:23:25.701 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:23:25.701 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:23:25.701 +02:00 [DBG] Rendering check session result
2019-04-28 00:23:35.299 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:23:35.302 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:23:35.302 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:23:35.303 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:23:35.303 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:23:35.304 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:23:35.304 +02:00 [DBG] Start discovery request
2019-04-28 00:23:35.516 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:23:35.516 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:23:35.516 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:23:35.516 +02:00 [DBG] Rendering check session result
2019-04-28 00:23:39.240 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 00:23:39.240 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 00:23:39.241 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 00:23:39.241 +02:00 [DBG] Start authorize request
2019-04-28 00:23:39.241 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:23:39.241 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:23:39.241 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:23:39.241 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:23:39.242 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:23:39.242 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"06aa5fae02bb4411a9c68b2e9e80cd80","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0cd69dc46097bf82150d28a17b66e31e","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"06aa5fae02bb4411a9c68b2e9e80cd80","code_challenge":"n76nCn0k3RKDPIsCKrTjO2iiwbg0pfTQk1UJll7hiJc","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 00:23:39.461 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 00:23:39.461 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 00:23:39.468 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****5020","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIC:0000000F","TimeStamp":"2019-04-27T22:23:39.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:23:39.468 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"06aa5fae02bb4411a9c68b2e9e80cd80","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 00:23:40.444 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:23:40.445 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:23:40.445 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:23:40.446 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:23:40.446 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:23:40.446 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:23:40.446 +02:00 [DBG] Start discovery request
2019-04-28 00:23:40.447 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:23:40.447 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:23:40.447 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:23:40.447 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:23:40.448 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:23:40.448 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:23:40.448 +02:00 [DBG] Start discovery request
2019-04-28 00:23:40.578 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 00:23:40.578 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:23:40.578 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:23:40.579 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 00:23:40.580 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 00:23:40.580 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 00:23:40.580 +02:00 [DBG] Start token request.
2019-04-28 00:23:40.581 +02:00 [DBG] Start client validation
2019-04-28 00:23:40.581 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 00:23:40.581 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 00:23:40.582 +02:00 [DBG] client id without secret found
2019-04-28 00:23:40.583 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 00:23:40.583 +02:00 [DBG] Secret id found: frontStore
2019-04-28 00:23:40.583 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:23:40.583 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 00:23:40.583 +02:00 [DBG] Client validation success
2019-04-28 00:23:40.583 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBB27ICCIC:00000011","TimeStamp":"2019-04-27T22:23:40.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 00:23:40.583 +02:00 [DBG] Start token request validation
2019-04-28 00:23:40.584 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 00:23:40.595 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:23:40.595 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:23:40.595 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:23:40.595 +02:00 [DBG] Rendering check session result
2019-04-28 00:23:40.628 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 00:23:40.639 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 00:23:40.640 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"77445555dda28a866ee48e48b1dd80f950cad1ef4405ff2954656783c6b25020","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"77445555dda28a866ee48e48b1dd80f950cad1ef4405ff2954656783c6b25020","redirect_uri":"http://localhost:8080/callback","code_verifier":"18645e5df1894e878311a4cc28ea39d333b731e388ee44a4ad8770eaf5960c655bdcb77bd3fb463f957645dda9e1389d","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 00:23:40.644 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:23:40.644 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 00:23:40.645 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:23:40.744 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:23:40.744 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 00:23:40.744 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 00:23:40.748 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****4E0A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****PP2w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIC:00000011","TimeStamp":"2019-04-27T22:23:40.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:23:40.748 +02:00 [DBG] Token request success.
2019-04-28 00:23:40.856 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:23:40.857 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:23:40.857 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:23:40.890 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:23:40.890 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:23:40.891 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:23:40.891 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 00:23:40.892 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 00:23:40.892 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 00:23:40.892 +02:00 [DBG] Start userinfo request
2019-04-28 00:23:40.892 +02:00 [DBG] Bearer token found in header
2019-04-28 00:23:40.895 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:23:40.896 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:23:40.925 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 00:23:40.926 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556403820,"exp":1556404150,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556401792,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 00:23:40.927 +02:00 [DBG] Creating userinfo response
2019-04-28 00:23:40.927 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:23:40.927 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:23:40.927 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 00:23:40.939 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:23:40.967 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 00:23:40.968 +02:00 [DBG] End userinfo request
2019-04-28 00:23:41.049 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:23:41.049 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:23:41.049 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:23:41.049 +02:00 [DBG] Rendering check session result
2019-04-28 00:23:41.749 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:23:41.751 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:23:41.752 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:23:41.752 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:23:41.753 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:23:41.753 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:23:41.753 +02:00 [DBG] Start discovery request
2019-04-28 00:23:41.915 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:23:41.915 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:23:41.915 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:23:41.916 +02:00 [DBG] Rendering check session result
2019-04-28 00:24:05.746 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:24:05.746 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:24:05.747 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:24:05.747 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:24:05.748 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:24:05.748 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:24:05.748 +02:00 [DBG] Start discovery request
2019-04-28 00:24:05.964 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:24:05.965 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:24:05.965 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:24:05.965 +02:00 [DBG] Rendering check session result
2019-04-28 00:24:08.854 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 00:24:08.854 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 00:24:08.854 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 00:24:08.855 +02:00 [DBG] Start authorize request
2019-04-28 00:24:08.855 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:24:08.855 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:24:08.857 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:08.857 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:24:08.858 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:24:08.858 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"7bedfd5badc64c26bff1bdf031f187f3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0cd69dc46097bf82150d28a17b66e31e","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"7bedfd5badc64c26bff1bdf031f187f3","code_challenge":"w6eeFs88mbsWvH4c31SQXCvwoIVbW4xljGaPHoyW3lg","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 00:24:09.074 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 00:24:09.074 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 00:24:09.081 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****e28b","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIC:00000015","TimeStamp":"2019-04-27T22:24:09.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:24:09.082 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"7bedfd5badc64c26bff1bdf031f187f3","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 00:24:10.058 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:24:10.058 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:24:10.059 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:24:10.059 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:24:10.059 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:24:10.059 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:24:10.059 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:24:10.060 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:24:10.060 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:24:10.060 +02:00 [DBG] Start discovery request
2019-04-28 00:24:10.060 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:24:10.061 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:24:10.064 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:24:10.064 +02:00 [DBG] Start discovery request
2019-04-28 00:24:10.178 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 00:24:10.178 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:24:10.178 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:24:10.178 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:24:10.179 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:24:10.179 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:24:10.179 +02:00 [DBG] Rendering check session result
2019-04-28 00:24:10.179 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 00:24:10.179 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 00:24:10.179 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 00:24:10.179 +02:00 [DBG] Start token request.
2019-04-28 00:24:10.179 +02:00 [DBG] Start client validation
2019-04-28 00:24:10.179 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 00:24:10.179 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 00:24:10.180 +02:00 [DBG] client id without secret found
2019-04-28 00:24:10.180 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 00:24:10.180 +02:00 [DBG] Secret id found: frontStore
2019-04-28 00:24:10.180 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:10.180 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 00:24:10.180 +02:00 [DBG] Client validation success
2019-04-28 00:24:10.180 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBB27ICCIC:00000017","TimeStamp":"2019-04-27T22:24:10.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 00:24:10.180 +02:00 [DBG] Start token request validation
2019-04-28 00:24:10.180 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 00:24:10.205 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 00:24:10.216 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 00:24:10.216 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"e86b09e9c4267ba0c1ae1e9c7c0151cda6a2fd5716555a93689792685efee28b","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"e86b09e9c4267ba0c1ae1e9c7c0151cda6a2fd5716555a93689792685efee28b","redirect_uri":"http://localhost:8080/callback","code_verifier":"b8e3784da8a44524a0e8f68b3683138cf976f26969cd484aa9aef4bee755bb91cba43857167b47fb9c73c8ff4049d6d2","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 00:24:10.216 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:10.217 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 00:24:10.217 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:24:10.280 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:10.280 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 00:24:10.280 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 00:24:10.285 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****ry4w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****HvhQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIC:00000017","TimeStamp":"2019-04-27T22:24:10.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:24:10.286 +02:00 [DBG] Token request success.
2019-04-28 00:24:10.427 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:24:10.427 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:24:10.428 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:24:10.481 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:24:10.481 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:24:10.482 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:24:10.483 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 00:24:10.483 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 00:24:10.483 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 00:24:10.484 +02:00 [DBG] Start userinfo request
2019-04-28 00:24:10.484 +02:00 [DBG] Bearer token found in header
2019-04-28 00:24:10.486 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:10.487 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:10.504 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 00:24:10.504 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556403850,"exp":1556404180,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556401792,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 00:24:10.504 +02:00 [DBG] Creating userinfo response
2019-04-28 00:24:10.504 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:24:10.504 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:24:10.505 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 00:24:10.505 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:24:10.550 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 00:24:10.550 +02:00 [DBG] End userinfo request
2019-04-28 00:24:10.595 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:24:10.595 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:24:10.595 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:24:10.595 +02:00 [DBG] Rendering check session result
2019-04-28 00:24:11.365 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:24:11.365 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:24:11.365 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:24:11.366 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:24:11.366 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:24:11.366 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:24:11.366 +02:00 [DBG] Start discovery request
2019-04-28 00:24:11.507 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:24:11.507 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:24:11.508 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:24:11.508 +02:00 [DBG] Rendering check session result
2019-04-28 00:24:14.353 +02:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-28 00:24:14.353 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-28 00:24:14.354 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-28 00:24:14.355 +02:00 [DBG] Processing signout request for de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:24:14.355 +02:00 [DBG] Start end session request validation
2019-04-28 00:24:14.356 +02:00 [DBG] Start identity token validation
2019-04-28 00:24:14.358 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:14.358 +02:00 [DBG] Client found: frontStore / Front Store Client
2019-04-28 00:24:14.368 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 00:24:14.369 +02:00 [DBG] Token validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556403850,"exp":1556404150,"iss":"http://localhost:5000","aud":"frontStore","iat":1556403850,"at_hash":"3IE2EGhYMbZ5AZInNjoU4A","sid":"0cd69dc46097bf82150d28a17b66e31e","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556401792,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 00:24:14.369 +02:00 [INF] End session request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","PostLogOutUri":"http://localhost:8080","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjY4NjEzN2E5NzllNzI0MWY1MzczZmM2YWUzZWNiZTE5IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NTY0MDM4NTAsImV4cCI6MTU1NjQwNDE1MCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoiZnJvbnRTdG9yZSIsImlhdCI6MTU1NjQwMzg1MCwiYXRfaGFzaCI6IjNJRTJFR2hZTWJaNUFaSW5Oam9VNEEiLCJzaWQiOiIwY2Q2OWRjNDYwOTdiZjgyMTUwZDI4YTE3YjY2ZTMxZSIsInN1YiI6ImRlM2YyNWM4LTI0NmMtNDA2MS1iZmE2LTg2YzY2OTgxNzJmZSIsImF1dGhfdGltZSI6MTU1NjQwMTc5MiwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.pdxzmIqrp0gsKjaQhLbJCU1k5jB0T2v3zNwuXeCXY1uohYeTXB51lXbdO9QCHahRaMMSCaXEZHx5Qxy2ChMXdYY0ip2e6gQQaR07tZ0J-g-gsiOXeNJF3D-ls617I95ULZC7pCxBvfE-7HgsJ-A1_v-MduHPVg7wRrWeoKIVFYbs1Bb441cx92ZTkt7ZpLKhmX5JQBMnIhjHrN7kpgcwmD_LRm5OAC5Gb21jn8wtGgOoRT2ZNQSQw1Hw8qUPdAyKLOmxe5PWoOGdIbkDkNS5L_-gvm2sogf13B7AvS2vScpDqOSp5_BGsVz5CAVhOdq8nJi_jvSQaQCn9IgWFNry4w","post_logout_redirect_uri":"http://localhost:8080"},"$type":"EndSessionRequestValidationLog"}
2019-04-28 00:24:14.369 +02:00 [DBG] Success validating end session request from frontStore
2019-04-28 00:24:14.379 +02:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-28 00:24:14.380 +02:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-28 00:24:14.380 +02:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-28 00:24:14.380 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLMBB27ICCID:0000000C","TimeStamp":"2019-04-27T22:24:14.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-28 00:24:14.592 +02:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-28 00:24:14.594 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-28 00:24:14.594 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-28 00:24:14.594 +02:00 [DBG] Processing signout callback request
2019-04-28 00:24:14.594 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:14.595 +02:00 [DBG] No client front-channel logout URLs
2019-04-28 00:24:14.595 +02:00 [DBG] No client back-channel logout URLs
2019-04-28 00:24:14.595 +02:00 [INF] Successful signout callback.
2019-04-28 00:24:14.595 +02:00 [DBG] No client front-channel iframe urls
2019-04-28 00:24:14.595 +02:00 [DBG] No client back-channel iframe urls
2019-04-28 00:24:19.433 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:24:19.433 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:24:19.433 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:24:19.434 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:24:19.434 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:24:19.434 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:24:19.434 +02:00 [DBG] Start discovery request
2019-04-28 00:24:19.452 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 00:24:19.453 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 00:24:19.453 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 00:24:19.453 +02:00 [DBG] Start authorize request
2019-04-28 00:24:19.453 +02:00 [DBG] No user present in authorize request
2019-04-28 00:24:19.453 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:24:19.453 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:19.454 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:24:19.454 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:24:19.454 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"0119639234ac4442b6ba9a8e89a52dc2","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"0119639234ac4442b6ba9a8e89a52dc2","code_challenge":"hrd0OcestnC-QRkYLsfB9pqVg2vKmv83Simif5wz6ig","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 00:24:19.454 +02:00 [INF] Showing login: User is not authenticated
2019-04-28 00:24:19.467 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:24:19.467 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:19.467 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:24:19.467 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:24:19.467 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:24.243 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 00:24:24.245 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:24:24.245 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:24.246 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:24:24.246 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:24:24.290 +02:00 [DBG] Augmenting SignInContext
2019-04-28 00:24:24.291 +02:00 [DBG] Adding idp claim with value: local
2019-04-28 00:24:24.291 +02:00 [DBG] Adding amr claim with value: pwd
2019-04-28 00:24:24.291 +02:00 [DBG] Adding auth_time claim with value: 1556403864
2019-04-28 00:24:24.292 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-28 00:24:24.297 +02:00 [INF] {"Username":"bob","Provider":null,"ProviderUserId":null,"SubjectId":"4a5790bf-81b9-450d-8ad2-eea5026bc63c","DisplayName":"bob","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLMBB27ICCIF:00000004","TimeStamp":"2019-04-27T22:24:24.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-28 00:24:24.297 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:24.311 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-28 00:24:24.311 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-28 00:24:24.311 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-28 00:24:24.311 +02:00 [DBG] Start authorize callback request
2019-04-28 00:24:24.311 +02:00 [DBG] User in authorize request: 4a5790bf-81b9-450d-8ad2-eea5026bc63c
2019-04-28 00:24:24.312 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:24:24.312 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:24.312 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:24:24.313 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:24:24.313 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"4a5790bf-81b9-450d-8ad2-eea5026bc63c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"0119639234ac4442b6ba9a8e89a52dc2","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"6fabdd888075880f9e7b03561c2da100","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"0119639234ac4442b6ba9a8e89a52dc2","code_challenge":"hrd0OcestnC-QRkYLsfB9pqVg2vKmv83Simif5wz6ig","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 00:24:24.328 +02:00 [DBG] user_consent grant with value: frontStore|4a5790bf-81b9-450d-8ad2-eea5026bc63c not found in store.
2019-04-28 00:24:24.328 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-28 00:24:24.328 +02:00 [INF] Showing consent: User has not yet consented
2019-04-28 00:24:24.345 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:24:24.345 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:24.346 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:24:24.346 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:24:24.346 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:26.334 +02:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 00:24:26.336 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:24:26.337 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:26.337 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:24:26.337 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:24:26.338 +02:00 [INF] {"SubjectId":"4a5790bf-81b9-450d-8ad2-eea5026bc63c","ClientId":"frontStore","RequestedScopes":["openid","profile","api1"],"GrantedScopes":["openid","profile","api1"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLMBB27ICCIC:00000022","TimeStamp":"2019-04-27T22:24:26.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-04-28 00:24:26.339 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:26.588 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-28 00:24:26.589 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-28 00:24:26.589 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-28 00:24:26.589 +02:00 [DBG] Start authorize callback request
2019-04-28 00:24:26.590 +02:00 [DBG] User in authorize request: 4a5790bf-81b9-450d-8ad2-eea5026bc63c
2019-04-28 00:24:26.590 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:24:26.590 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:26.590 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:24:26.590 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:24:26.591 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"4a5790bf-81b9-450d-8ad2-eea5026bc63c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"0119639234ac4442b6ba9a8e89a52dc2","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"6fabdd888075880f9e7b03561c2da100","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"0119639234ac4442b6ba9a8e89a52dc2","code_challenge":"hrd0OcestnC-QRkYLsfB9pqVg2vKmv83Simif5wz6ig","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 00:24:26.621 +02:00 [DBG] user_consent grant with value: frontStore|4a5790bf-81b9-450d-8ad2-eea5026bc63c not found in store.
2019-04-28 00:24:26.621 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-28 00:24:26.621 +02:00 [INF] User consented to scopes: ["openid","profile","api1"]
2019-04-28 00:24:26.621 +02:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1"]
2019-04-28 00:24:26.622 +02:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 4a5790bf-81b9-450d-8ad2-eea5026bc63c
2019-04-28 00:24:26.627 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 00:24:26.635 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"4a5790bf-81b9-450d-8ad2-eea5026bc63c","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****367c","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIE:00000009","TimeStamp":"2019-04-27T22:24:26.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:24:26.636 +02:00 [INF] Authorize endpoint response
{"SubjectId":"4a5790bf-81b9-450d-8ad2-eea5026bc63c","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"0119639234ac4442b6ba9a8e89a52dc2","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 00:24:26.636 +02:00 [DBG] Augmenting SignInContext
2019-04-28 00:24:26.637 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-28 00:24:27.430 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:24:27.430 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:24:27.430 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:24:27.430 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:24:27.431 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:24:27.431 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:24:27.431 +02:00 [DBG] Start discovery request
2019-04-28 00:24:27.548 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 00:24:27.548 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:24:27.548 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:24:27.548 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 00:24:27.549 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 00:24:27.549 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 00:24:27.549 +02:00 [DBG] Start token request.
2019-04-28 00:24:27.549 +02:00 [DBG] Start client validation
2019-04-28 00:24:27.549 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 00:24:27.549 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 00:24:27.549 +02:00 [DBG] client id without secret found
2019-04-28 00:24:27.549 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 00:24:27.549 +02:00 [DBG] Secret id found: frontStore
2019-04-28 00:24:27.549 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:27.549 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 00:24:27.549 +02:00 [DBG] Client validation success
2019-04-28 00:24:27.550 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBB27ICCIC:00000025","TimeStamp":"2019-04-27T22:24:27.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 00:24:27.550 +02:00 [DBG] Start token request validation
2019-04-28 00:24:27.550 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 00:24:27.566 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 00:24:27.587 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 00:24:27.587 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"f8d4b3d65dc99895f5631e31d41c3bb32a6da800720ebe956ecdafabd080367c","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"f8d4b3d65dc99895f5631e31d41c3bb32a6da800720ebe956ecdafabd080367c","redirect_uri":"http://localhost:8080/callback","code_verifier":"9c54c90a896b4dde9e02ebef739f918bfc28407e609b487eaca03045237d7841b419a37ea8974c56aa93a71935035871","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 00:24:27.588 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:27.588 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 00:24:27.588 +02:00 [DBG] Getting claims for access token for subject: 4a5790bf-81b9-450d-8ad2-eea5026bc63c
2019-04-28 00:24:27.611 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:27.611 +02:00 [DBG] Getting claims for identity token for subject: 4a5790bf-81b9-450d-8ad2-eea5026bc63c and client: frontStore
2019-04-28 00:24:27.611 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 00:24:27.615 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****bptw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_oqg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIC:00000025","TimeStamp":"2019-04-27T22:24:27.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:24:27.615 +02:00 [DBG] Token request success.
2019-04-28 00:24:27.633 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:24:27.633 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:24:27.633 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:24:27.649 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:24:27.649 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:24:27.649 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:24:27.649 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 00:24:27.650 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 00:24:27.651 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 00:24:27.651 +02:00 [DBG] Start userinfo request
2019-04-28 00:24:27.651 +02:00 [DBG] Bearer token found in header
2019-04-28 00:24:27.655 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:27.655 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:24:27.694 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 00:24:27.694 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556403867,"exp":1556404197,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"4a5790bf-81b9-450d-8ad2-eea5026bc63c","auth_time":1556403864,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 00:24:27.694 +02:00 [DBG] Creating userinfo response
2019-04-28 00:24:27.694 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:24:27.694 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:24:27.695 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 00:24:27.695 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:24:27.707 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 00:24:27.707 +02:00 [DBG] End userinfo request
2019-04-28 00:24:27.720 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:24:27.721 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:24:27.721 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:24:27.721 +02:00 [DBG] Rendering check session result
2019-04-28 00:24:28.618 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:24:28.618 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:24:28.619 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:24:28.619 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:24:28.620 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:24:28.620 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:24:28.620 +02:00 [DBG] Start discovery request
2019-04-28 00:24:28.768 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:24:28.768 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:24:28.768 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:24:28.768 +02:00 [DBG] Rendering check session result
2019-04-28 00:25:59.405 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:25:59.405 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:25:59.417 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:25:59.429 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:25:59.450 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:25:59.450 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:25:59.450 +02:00 [DBG] Start discovery request
2019-04-28 00:25:59.477 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:25:59.477 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:25:59.477 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:25:59.477 +02:00 [DBG] Rendering check session result
2019-04-28 00:26:13.116 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:26:13.116 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:26:13.116 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:26:13.117 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:26:13.117 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:26:13.117 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:26:13.117 +02:00 [DBG] Start discovery request
2019-04-28 00:26:13.153 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:26:13.155 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:26:13.155 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:26:13.155 +02:00 [DBG] Rendering check session result
2019-04-28 00:27:17.058 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:27:17.058 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:27:17.071 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:27:17.071 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:27:17.084 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:27:17.084 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:27:17.084 +02:00 [DBG] Start discovery request
2019-04-28 00:27:17.301 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:27:17.301 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:27:17.301 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:27:17.301 +02:00 [DBG] Rendering check session result
2019-04-28 00:27:35.876 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:27:35.877 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:27:35.878 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:27:35.879 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:27:35.880 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:27:35.880 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:27:35.880 +02:00 [DBG] Start discovery request
2019-04-28 00:27:36.071 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:27:36.071 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:27:36.071 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:27:36.071 +02:00 [DBG] Rendering check session result
2019-04-28 00:28:44.354 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:28:44.365 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:28:44.374 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:28:44.375 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:28:44.375 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:28:44.375 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:28:44.375 +02:00 [DBG] Start discovery request
2019-04-28 00:28:44.472 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:28:44.472 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:28:44.472 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:28:44.472 +02:00 [DBG] Rendering check session result
2019-04-28 00:33:38.423 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:33:38.424 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:33:38.424 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:33:38.425 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:33:38.425 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:33:38.425 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:33:38.426 +02:00 [DBG] Start discovery request
2019-04-28 00:33:38.662 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:33:38.662 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:33:38.662 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:33:38.663 +02:00 [DBG] Rendering check session result
2019-04-28 00:33:42.773 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:33:42.773 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:33:42.773 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:33:42.774 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:33:42.774 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:33:42.774 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:33:42.774 +02:00 [DBG] Start discovery request
2019-04-28 00:33:42.879 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:33:42.879 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:33:42.879 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:33:42.879 +02:00 [DBG] Rendering check session result
2019-04-28 00:33:45.680 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 00:33:45.680 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 00:33:45.680 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 00:33:45.680 +02:00 [DBG] Start authorize request
2019-04-28 00:33:45.680 +02:00 [DBG] User in authorize request: 4a5790bf-81b9-450d-8ad2-eea5026bc63c
2019-04-28 00:33:45.680 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:33:45.680 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:33:45.681 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:33:45.681 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:33:45.681 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"4a5790bf-81b9-450d-8ad2-eea5026bc63c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"bc8caecd08e64c6b99b50ea894d5d342","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"6fabdd888075880f9e7b03561c2da100","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"bc8caecd08e64c6b99b50ea894d5d342","code_challenge":"eVbXWDpihnev-d7VUFPR8mG1UJm_C5eikh-ynMuMEhE","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 00:33:46.113 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 00:33:46.113 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 00:33:46.118 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"4a5790bf-81b9-450d-8ad2-eea5026bc63c","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****572a","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIJ:00000005","TimeStamp":"2019-04-27T22:33:46.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:33:46.119 +02:00 [INF] Authorize endpoint response
{"SubjectId":"4a5790bf-81b9-450d-8ad2-eea5026bc63c","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"bc8caecd08e64c6b99b50ea894d5d342","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 00:33:46.791 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:33:46.791 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:33:46.792 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:33:46.793 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:33:46.793 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:33:46.793 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:33:46.793 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:33:46.794 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:33:46.794 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:33:46.794 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:33:46.794 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:33:46.794 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:33:46.794 +02:00 [DBG] Start discovery request
2019-04-28 00:33:46.794 +02:00 [DBG] Start discovery request
2019-04-28 00:33:46.968 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 00:33:46.968 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:33:46.968 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:33:46.968 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 00:33:46.969 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 00:33:46.969 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 00:33:46.969 +02:00 [DBG] Start token request.
2019-04-28 00:33:46.969 +02:00 [DBG] Start client validation
2019-04-28 00:33:46.969 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 00:33:46.969 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 00:33:46.972 +02:00 [DBG] client id without secret found
2019-04-28 00:33:46.973 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 00:33:46.973 +02:00 [DBG] Secret id found: frontStore
2019-04-28 00:33:46.973 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:33:46.973 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 00:33:46.973 +02:00 [DBG] Client validation success
2019-04-28 00:33:46.973 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBB27ICCIJ:00000007","TimeStamp":"2019-04-27T22:33:46.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 00:33:46.973 +02:00 [DBG] Start token request validation
2019-04-28 00:33:46.973 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 00:33:46.974 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:33:46.974 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:33:46.974 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:33:46.974 +02:00 [DBG] Rendering check session result
2019-04-28 00:33:46.986 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 00:33:47.239 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 00:33:47.240 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"11f8ed7944e203c4afabaa0d1e8d93e107f6161d75ea90da1a1e1dc0bafa572a","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"11f8ed7944e203c4afabaa0d1e8d93e107f6161d75ea90da1a1e1dc0bafa572a","redirect_uri":"http://localhost:8080/callback","code_verifier":"8eb9a489060c42ee87eb165e5c4b68cc66c1750a71024c67b069299b9c400680c012c7a6ea9c4609bf4ad72b8b1f7605","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 00:33:47.240 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:33:47.240 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 00:33:47.240 +02:00 [DBG] Getting claims for access token for subject: 4a5790bf-81b9-450d-8ad2-eea5026bc63c
2019-04-28 00:33:47.524 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:33:47.524 +02:00 [DBG] Getting claims for identity token for subject: 4a5790bf-81b9-450d-8ad2-eea5026bc63c and client: frontStore
2019-04-28 00:33:47.524 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 00:33:47.528 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****QA1A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****CG9g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIJ:00000007","TimeStamp":"2019-04-27T22:33:47.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:33:47.528 +02:00 [DBG] Token request success.
2019-04-28 00:33:47.540 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:33:47.541 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:33:47.541 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:33:47.547 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:33:47.547 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:33:47.547 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:33:47.547 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 00:33:47.548 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 00:33:47.548 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 00:33:47.548 +02:00 [DBG] Start userinfo request
2019-04-28 00:33:47.548 +02:00 [DBG] Bearer token found in header
2019-04-28 00:33:47.550 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:33:47.550 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:33:47.780 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 00:33:47.781 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556404427,"exp":1556404757,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"4a5790bf-81b9-450d-8ad2-eea5026bc63c","auth_time":1556403864,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 00:33:47.781 +02:00 [DBG] Creating userinfo response
2019-04-28 00:33:47.781 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:33:47.781 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:33:47.781 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 00:33:47.781 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:33:48.009 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 00:33:48.009 +02:00 [DBG] End userinfo request
2019-04-28 00:33:48.024 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:33:48.024 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:33:48.024 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:33:48.025 +02:00 [DBG] Rendering check session result
2019-04-28 00:33:48.888 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:33:48.889 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:33:48.889 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:33:48.889 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:33:48.890 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:33:48.890 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:33:48.890 +02:00 [DBG] Start discovery request
2019-04-28 00:33:49.050 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:33:49.050 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:33:49.050 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:33:49.050 +02:00 [DBG] Rendering check session result
2019-04-28 00:33:50.179 +02:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-28 00:33:50.179 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-28 00:33:50.180 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-28 00:33:50.180 +02:00 [DBG] Processing signout request for 4a5790bf-81b9-450d-8ad2-eea5026bc63c
2019-04-28 00:33:50.180 +02:00 [DBG] Start end session request validation
2019-04-28 00:33:50.180 +02:00 [DBG] Start identity token validation
2019-04-28 00:33:50.180 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:33:50.180 +02:00 [DBG] Client found: frontStore / Front Store Client
2019-04-28 00:33:50.414 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 00:33:50.414 +02:00 [DBG] Token validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556404427,"exp":1556404727,"iss":"http://localhost:5000","aud":"frontStore","iat":1556404427,"at_hash":"LoEK5z0F8oyCY6ENVtrv4g","sid":"6fabdd888075880f9e7b03561c2da100","sub":"4a5790bf-81b9-450d-8ad2-eea5026bc63c","auth_time":1556403864,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 00:33:50.414 +02:00 [INF] End session request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","SubjectId":"4a5790bf-81b9-450d-8ad2-eea5026bc63c","PostLogOutUri":"http://localhost:8080","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjY4NjEzN2E5NzllNzI0MWY1MzczZmM2YWUzZWNiZTE5IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NTY0MDQ0MjcsImV4cCI6MTU1NjQwNDcyNywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoiZnJvbnRTdG9yZSIsImlhdCI6MTU1NjQwNDQyNywiYXRfaGFzaCI6IkxvRUs1ejBGOG95Q1k2RU5WdHJ2NGciLCJzaWQiOiI2ZmFiZGQ4ODgwNzU4ODBmOWU3YjAzNTYxYzJkYTEwMCIsInN1YiI6IjRhNTc5MGJmLTgxYjktNDUwZC04YWQyLWVlYTUwMjZiYzYzYyIsImF1dGhfdGltZSI6MTU1NjQwMzg2NCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.TCyVqKzsnS4HgVFMjtbkrUgb89QdHByFOXBNh6IZK9yuoxBjwTvU1pR9QnIkndZrpSMJ1Ug0-X7JSTasZbsCLnOzyLUCe90dCC1hWJM8w3sSYZDcwaIP2NkycsDOyEYa3BPQlkYrEG2Yc9sidKbJN8bmoI0x6bh3kBYJDhUmZeAsgOBBrU7H9X1PZSeYN1b5plRqDFpzZZMVB6HZDaCDjhJ7acpFIJ7RBDtrXvOwu6y-eC-oHyEfhIcFkggo9nSqBPL5XEJksrUm27sBBe7ozFINi5lmjHp7Vmy8hvpbWTl5l4OA43oW72MMFUBEQvTzzHTCiy16RKBKb5kCA2QA1A","post_logout_redirect_uri":"http://localhost:8080"},"$type":"EndSessionRequestValidationLog"}
2019-04-28 00:33:50.414 +02:00 [DBG] Success validating end session request from frontStore
2019-04-28 00:33:50.424 +02:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-28 00:33:50.424 +02:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-28 00:33:50.424 +02:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-28 00:33:50.425 +02:00 [INF] {"SubjectId":"4a5790bf-81b9-450d-8ad2-eea5026bc63c","DisplayName":"Bob Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLMBB27ICCIK:00000006","TimeStamp":"2019-04-27T22:33:50.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-28 00:33:50.625 +02:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-28 00:33:50.626 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-28 00:33:50.626 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-28 00:33:50.626 +02:00 [DBG] Processing signout callback request
2019-04-28 00:33:50.626 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:33:50.627 +02:00 [DBG] No client front-channel logout URLs
2019-04-28 00:33:50.627 +02:00 [DBG] No client back-channel logout URLs
2019-04-28 00:33:50.627 +02:00 [INF] Successful signout callback.
2019-04-28 00:33:50.627 +02:00 [DBG] No client front-channel iframe urls
2019-04-28 00:33:50.627 +02:00 [DBG] No client back-channel iframe urls
2019-04-28 00:33:54.002 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:33:54.002 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:33:54.002 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:33:54.003 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:33:54.003 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:33:54.004 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:33:54.005 +02:00 [DBG] Start discovery request
2019-04-28 00:33:54.026 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 00:33:54.028 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 00:33:54.028 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 00:33:54.028 +02:00 [DBG] Start authorize request
2019-04-28 00:33:54.028 +02:00 [DBG] No user present in authorize request
2019-04-28 00:33:54.029 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:33:54.029 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:33:54.029 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:33:54.029 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:33:54.031 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"c406135687cc4cbebbbd8628ce84d35c","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"c406135687cc4cbebbbd8628ce84d35c","code_challenge":"6YkbbOr4RjeuEdlfs02sZF3dojMFlAppQpL3-RX5Dks","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 00:33:54.032 +02:00 [INF] Showing login: User is not authenticated
2019-04-28 00:33:54.046 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:33:54.046 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:33:54.046 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:33:54.047 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:33:54.047 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:00.177 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 00:34:00.179 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:34:00.179 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:00.179 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:34:00.179 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:34:00.426 +02:00 [WRN] Invalid password for user de3f25c8-246c-4061-bfa6-86c6698172fe.
2019-04-28 00:34:00.427 +02:00 [WRN] User de3f25c8-246c-4061-bfa6-86c6698172fe failed to provide the correct password.
2019-04-28 00:34:00.700 +02:00 [INF] {"Username":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLMBB27ICCIM:00000004","TimeStamp":"2019-04-27T22:34:00.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-04-28 00:34:00.702 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:34:00.702 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:00.702 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:34:00.703 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:34:00.704 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:03.350 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 00:34:03.352 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:34:03.352 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:03.352 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:34:03.352 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:34:03.593 +02:00 [WRN] Invalid password for user de3f25c8-246c-4061-bfa6-86c6698172fe.
2019-04-28 00:34:03.594 +02:00 [WRN] User de3f25c8-246c-4061-bfa6-86c6698172fe failed to provide the correct password.
2019-04-28 00:34:03.790 +02:00 [INF] {"Username":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLMBB27ICCIL:00000006","TimeStamp":"2019-04-27T22:34:03.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-04-28 00:34:03.791 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:34:03.791 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:03.791 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:34:03.791 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:34:03.791 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:10.832 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 00:34:10.834 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:34:10.834 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:10.834 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:34:10.835 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:34:11.445 +02:00 [DBG] Augmenting SignInContext
2019-04-28 00:34:11.445 +02:00 [DBG] Adding idp claim with value: local
2019-04-28 00:34:11.445 +02:00 [DBG] Adding amr claim with value: pwd
2019-04-28 00:34:11.445 +02:00 [DBG] Adding auth_time claim with value: 1556404451
2019-04-28 00:34:11.445 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-28 00:34:11.684 +02:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLMBB27ICCIM:00000007","TimeStamp":"2019-04-27T22:34:11.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-28 00:34:11.685 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:11.694 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-28 00:34:11.694 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-28 00:34:11.694 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-28 00:34:11.694 +02:00 [DBG] Start authorize callback request
2019-04-28 00:34:11.694 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:34:11.694 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:34:11.694 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:11.694 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:34:11.694 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:34:11.695 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"c406135687cc4cbebbbd8628ce84d35c","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ca876990df3c7ad79c74ad46d5eab987","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"c406135687cc4cbebbbd8628ce84d35c","code_challenge":"6YkbbOr4RjeuEdlfs02sZF3dojMFlAppQpL3-RX5Dks","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 00:34:12.022 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 00:34:12.022 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 00:34:12.027 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****9b5d","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIL:00000008","TimeStamp":"2019-04-27T22:34:12.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:34:12.027 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"c406135687cc4cbebbbd8628ce84d35c","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 00:34:12.027 +02:00 [DBG] Augmenting SignInContext
2019-04-28 00:34:12.028 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-28 00:34:13.056 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:34:13.056 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:34:13.057 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:34:13.058 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:34:13.058 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:34:13.058 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:34:13.059 +02:00 [DBG] Start discovery request
2019-04-28 00:34:13.176 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 00:34:13.176 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:34:13.176 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:34:13.177 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 00:34:13.178 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 00:34:13.178 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 00:34:13.178 +02:00 [DBG] Start token request.
2019-04-28 00:34:13.178 +02:00 [DBG] Start client validation
2019-04-28 00:34:13.178 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 00:34:13.178 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 00:34:13.180 +02:00 [DBG] client id without secret found
2019-04-28 00:34:13.180 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 00:34:13.180 +02:00 [DBG] Secret id found: frontStore
2019-04-28 00:34:13.181 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:13.181 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 00:34:13.181 +02:00 [DBG] Client validation success
2019-04-28 00:34:13.181 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBB27ICCIK:00000010","TimeStamp":"2019-04-27T22:34:13.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 00:34:13.181 +02:00 [DBG] Start token request validation
2019-04-28 00:34:13.181 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 00:34:13.224 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 00:34:13.515 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 00:34:13.515 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"9fffc2a7f2fb49a4aeca7a00bed1605b03ddd2648e41f6aa3c5ef7dafde69b5d","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"9fffc2a7f2fb49a4aeca7a00bed1605b03ddd2648e41f6aa3c5ef7dafde69b5d","redirect_uri":"http://localhost:8080/callback","code_verifier":"f99ba9d9d4474e4bbeba6ebeaf2efb6271546a1566a64007b8ae169a8c6e3aa6a62ed77045504eadb9a6aaf517d6f8c9","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 00:34:13.515 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:13.516 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 00:34:13.516 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:34:13.814 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:13.815 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 00:34:13.815 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 00:34:13.819 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****AXfw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****FUiA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIK:00000010","TimeStamp":"2019-04-27T22:34:13.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:34:13.819 +02:00 [DBG] Token request success.
2019-04-28 00:34:13.832 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:34:13.832 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:34:13.832 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:34:13.840 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:34:13.840 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:34:13.840 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:34:13.841 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 00:34:13.841 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 00:34:13.841 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 00:34:13.841 +02:00 [DBG] Start userinfo request
2019-04-28 00:34:13.842 +02:00 [DBG] Bearer token found in header
2019-04-28 00:34:13.844 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:13.844 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:34:14.216 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 00:34:14.218 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556404453,"exp":1556404783,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556404451,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 00:34:14.219 +02:00 [DBG] Creating userinfo response
2019-04-28 00:34:14.219 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:34:14.219 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:34:14.219 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 00:34:14.219 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:34:14.469 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 00:34:14.469 +02:00 [DBG] End userinfo request
2019-04-28 00:34:14.495 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:34:14.496 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:34:14.496 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:34:14.496 +02:00 [DBG] Rendering check session result
2019-04-28 00:34:15.206 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:34:15.208 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:34:15.208 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:34:15.208 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:34:15.208 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:34:15.208 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:34:15.209 +02:00 [DBG] Start discovery request
2019-04-28 00:34:15.367 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:34:15.367 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:34:15.367 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:34:15.368 +02:00 [DBG] Rendering check session result
2019-04-28 00:35:55.041 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:35:55.060 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:35:55.060 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:35:55.060 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:35:55.061 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:35:55.061 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:35:55.061 +02:00 [DBG] Start discovery request
2019-04-28 00:35:55.240 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:35:55.240 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:35:55.240 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:35:55.241 +02:00 [DBG] Rendering check session result
2019-04-28 00:35:59.561 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:35:59.562 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:35:59.562 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:35:59.562 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:35:59.562 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:35:59.562 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:35:59.562 +02:00 [DBG] Start discovery request
2019-04-28 00:35:59.720 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:35:59.720 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:35:59.720 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:35:59.720 +02:00 [DBG] Rendering check session result
2019-04-28 00:36:07.555 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:36:07.555 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:36:07.555 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:36:07.555 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:36:07.555 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:36:07.556 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:36:07.556 +02:00 [DBG] Start discovery request
2019-04-28 00:36:07.693 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:36:07.693 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:36:07.693 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:36:07.693 +02:00 [DBG] Rendering check session result
2019-04-28 00:36:22.524 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:36:22.524 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:36:22.525 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:36:22.526 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:36:22.528 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:36:22.529 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:36:22.530 +02:00 [DBG] Start discovery request
2019-04-28 00:36:22.655 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:36:22.656 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:36:22.656 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:36:22.656 +02:00 [DBG] Rendering check session result
2019-04-28 00:37:14.624 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:37:14.625 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:37:14.625 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:37:14.627 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:37:14.628 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:37:14.628 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:37:14.629 +02:00 [DBG] Start discovery request
2019-04-28 00:37:14.762 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:37:14.762 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:37:14.762 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:37:14.762 +02:00 [DBG] Rendering check session result
2019-04-28 00:37:27.455 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:37:27.455 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:37:27.455 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:37:27.456 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:37:27.456 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:37:27.456 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:37:27.456 +02:00 [DBG] Start discovery request
2019-04-28 00:37:27.654 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:37:27.654 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:37:27.654 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:37:27.654 +02:00 [DBG] Rendering check session result
2019-04-28 00:37:59.611 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:37:59.611 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:37:59.611 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:37:59.611 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:37:59.611 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:37:59.611 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:37:59.612 +02:00 [DBG] Start discovery request
2019-04-28 00:37:59.747 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:37:59.747 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:37:59.747 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:37:59.748 +02:00 [DBG] Rendering check session result
2019-04-28 00:38:02.402 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:38:02.402 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:38:02.403 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:38:02.404 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:38:02.405 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:38:02.405 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:38:02.405 +02:00 [DBG] Start discovery request
2019-04-28 00:38:02.578 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:38:02.578 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:38:02.579 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:38:02.579 +02:00 [DBG] Rendering check session result
2019-04-28 00:40:00.676 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:40:00.676 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:40:00.676 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:40:00.676 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:40:00.678 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:40:00.678 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:40:00.679 +02:00 [DBG] Start discovery request
2019-04-28 00:40:00.796 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:40:00.796 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:40:00.797 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:40:00.797 +02:00 [DBG] Rendering check session result
2019-04-28 00:40:09.622 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 00:40:09.622 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 00:40:09.622 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 00:40:09.622 +02:00 [DBG] Start authorize request
2019-04-28 00:40:09.623 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:40:09.623 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:40:09.623 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:40:09.623 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:40:09.623 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:40:09.623 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"5f6c49f49ef747d19fb40057abc19a63","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ca876990df3c7ad79c74ad46d5eab987","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"5f6c49f49ef747d19fb40057abc19a63","code_challenge":"5H0mhlr6yzp4QzQPmkYs2dDOgpS4vwSSvSe818HBnyA","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 00:40:10.042 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 00:40:10.043 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 00:40:10.051 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****c320","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIO:00000003","TimeStamp":"2019-04-27T22:40:10.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:40:10.051 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"5f6c49f49ef747d19fb40057abc19a63","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 00:40:11.137 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:40:11.137 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:40:11.139 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:40:11.140 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:40:11.140 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:40:11.140 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:40:11.140 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:40:11.140 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:40:11.140 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:40:11.140 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:40:11.140 +02:00 [DBG] Start discovery request
2019-04-28 00:40:11.141 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:40:11.141 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:40:11.141 +02:00 [DBG] Start discovery request
2019-04-28 00:40:11.315 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 00:40:11.316 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:40:11.316 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:40:11.316 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 00:40:11.316 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 00:40:11.316 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 00:40:11.316 +02:00 [DBG] Start token request.
2019-04-28 00:40:11.316 +02:00 [DBG] Start client validation
2019-04-28 00:40:11.316 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 00:40:11.317 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 00:40:11.317 +02:00 [DBG] client id without secret found
2019-04-28 00:40:11.317 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 00:40:11.317 +02:00 [DBG] Secret id found: frontStore
2019-04-28 00:40:11.317 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:40:11.317 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 00:40:11.317 +02:00 [DBG] Client validation success
2019-04-28 00:40:11.317 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBB27ICCIP:00000002","TimeStamp":"2019-04-27T22:40:11.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 00:40:11.318 +02:00 [DBG] Start token request validation
2019-04-28 00:40:11.318 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 00:40:11.318 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:40:11.318 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:40:11.318 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:40:11.318 +02:00 [DBG] Rendering check session result
2019-04-28 00:40:11.355 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 00:40:11.585 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 00:40:11.585 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"91d2bad43d1f5a2188c518b64ba32915e63fff299154113f2db05794e2fdc320","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"91d2bad43d1f5a2188c518b64ba32915e63fff299154113f2db05794e2fdc320","redirect_uri":"http://localhost:8080/callback","code_verifier":"dd6def427bef4d0d86b8e3510762a2b1b1b6b89aacc24a9b9b6b47930815e8647a74f93055c84efa8742aea0e03a25da","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 00:40:11.585 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:40:11.586 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 00:40:11.586 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:40:11.642 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:40:11.642 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 00:40:11.642 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 00:40:11.645 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****YR0w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****UqbQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIP:00000002","TimeStamp":"2019-04-27T22:40:11.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:40:11.645 +02:00 [DBG] Token request success.
2019-04-28 00:40:11.656 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:40:11.656 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:40:11.656 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:40:11.662 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:40:11.663 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:40:11.663 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:40:11.663 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 00:40:11.663 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 00:40:11.664 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 00:40:11.664 +02:00 [DBG] Start userinfo request
2019-04-28 00:40:11.664 +02:00 [DBG] Bearer token found in header
2019-04-28 00:40:11.666 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:40:11.666 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:40:11.673 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 00:40:11.674 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556404811,"exp":1556405141,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556404451,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 00:40:11.674 +02:00 [DBG] Creating userinfo response
2019-04-28 00:40:11.674 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:40:11.674 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:40:11.674 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 00:40:11.674 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:40:11.684 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 00:40:11.684 +02:00 [DBG] End userinfo request
2019-04-28 00:40:11.727 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:40:11.727 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:40:11.727 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:40:11.727 +02:00 [DBG] Rendering check session result
2019-04-28 00:40:12.521 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:40:12.521 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:40:12.522 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:40:12.522 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:40:12.523 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:40:12.523 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:40:12.523 +02:00 [DBG] Start discovery request
2019-04-28 00:40:12.665 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:40:12.665 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:40:12.665 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:40:12.665 +02:00 [DBG] Rendering check session result
2019-04-28 00:43:41.713 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:43:41.713 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:43:41.713 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:43:41.714 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:43:41.714 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:43:41.714 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:43:41.714 +02:00 [DBG] Start discovery request
2019-04-28 00:43:41.830 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:43:41.830 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:43:41.830 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:43:41.830 +02:00 [DBG] Rendering check session result
2019-04-28 00:43:52.245 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:43:52.245 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:43:52.245 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:43:52.246 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:43:52.246 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:43:52.246 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:43:52.246 +02:00 [DBG] Start discovery request
2019-04-28 00:43:52.368 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:43:52.369 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:43:52.369 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:43:52.369 +02:00 [DBG] Rendering check session result
2019-04-28 00:44:04.471 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:44:04.471 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:44:04.471 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:44:04.471 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:44:04.472 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:44:04.472 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:44:04.472 +02:00 [DBG] Start discovery request
2019-04-28 00:44:04.590 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:44:04.590 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:44:04.590 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:44:04.590 +02:00 [DBG] Rendering check session result
2019-04-28 00:45:04.523 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:45:04.523 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:45:04.523 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:45:04.524 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:45:04.524 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:45:04.524 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:45:04.524 +02:00 [DBG] Start discovery request
2019-04-28 00:45:04.630 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:45:04.630 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:45:04.630 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:45:04.630 +02:00 [DBG] Rendering check session result
2019-04-28 00:45:08.099 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:45:08.099 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:45:08.099 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:45:08.099 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:45:08.100 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:45:08.100 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:45:08.100 +02:00 [DBG] Start discovery request
2019-04-28 00:45:08.242 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:45:08.242 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:45:08.242 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:45:08.242 +02:00 [DBG] Rendering check session result
2019-04-28 00:45:50.552 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:45:50.552 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:45:50.552 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:45:50.553 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:45:50.553 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:45:50.553 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:45:50.553 +02:00 [DBG] Start discovery request
2019-04-28 00:45:50.702 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:45:50.702 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:45:50.702 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:45:50.702 +02:00 [DBG] Rendering check session result
2019-04-28 00:46:25.914 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:46:25.914 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:46:25.915 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:46:25.915 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:46:25.915 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:46:25.915 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:46:25.915 +02:00 [DBG] Start discovery request
2019-04-28 00:46:26.079 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:46:26.079 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:46:26.079 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:46:26.079 +02:00 [DBG] Rendering check session result
2019-04-28 00:46:36.793 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 00:46:36.793 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 00:46:36.793 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 00:46:36.794 +02:00 [DBG] Start authorize request
2019-04-28 00:46:36.794 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:46:36.794 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:46:36.794 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:46:36.795 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:46:36.795 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:46:36.795 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"9fcf8802741a44ecae28235a5169b8ca","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ca876990df3c7ad79c74ad46d5eab987","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"9fcf8802741a44ecae28235a5169b8ca","code_challenge":"em7hiGRzbhkimCh-uqMkhiuMok5JkyLAfYZUpiBtpco","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 00:46:37.304 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 00:46:37.304 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 00:46:37.309 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****dedc","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIQ:0000000F","TimeStamp":"2019-04-27T22:46:37.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:46:37.310 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"9fcf8802741a44ecae28235a5169b8ca","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 00:46:38.352 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:46:38.354 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:46:38.355 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:46:38.355 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:46:38.355 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:46:38.355 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:46:38.355 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:46:38.356 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:46:38.355 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:46:38.356 +02:00 [DBG] Start discovery request
2019-04-28 00:46:38.357 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:46:38.358 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:46:38.358 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:46:38.358 +02:00 [DBG] Start discovery request
2019-04-28 00:46:38.460 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 00:46:38.460 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:46:38.460 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:46:38.461 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 00:46:38.461 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 00:46:38.461 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 00:46:38.461 +02:00 [DBG] Start token request.
2019-04-28 00:46:38.461 +02:00 [DBG] Start client validation
2019-04-28 00:46:38.461 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 00:46:38.462 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 00:46:38.462 +02:00 [DBG] client id without secret found
2019-04-28 00:46:38.462 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 00:46:38.462 +02:00 [DBG] Secret id found: frontStore
2019-04-28 00:46:38.462 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:46:38.462 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 00:46:38.462 +02:00 [DBG] Client validation success
2019-04-28 00:46:38.462 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBB27ICCIQ:00000011","TimeStamp":"2019-04-27T22:46:38.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 00:46:38.462 +02:00 [DBG] Start token request validation
2019-04-28 00:46:38.463 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 00:46:38.472 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:46:38.472 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:46:38.472 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:46:38.473 +02:00 [DBG] Rendering check session result
2019-04-28 00:46:38.484 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 00:46:38.797 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 00:46:38.798 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"1ef3253d87223c9ff7864a8d198d130014d8aed0bcc75f3c70842120a038dedc","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"1ef3253d87223c9ff7864a8d198d130014d8aed0bcc75f3c70842120a038dedc","redirect_uri":"http://localhost:8080/callback","code_verifier":"d70df8f75d504f12974564c4968b4f94b4cad748df2e4a37b68cb2f2128e589f379da958980c459ea84ba5fd3250c6e0","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 00:46:38.799 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:46:38.799 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 00:46:38.799 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:46:38.845 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:46:38.845 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 00:46:38.846 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 00:46:38.849 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****Fz7g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****d4TA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIQ:00000011","TimeStamp":"2019-04-27T22:46:38.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:46:38.849 +02:00 [DBG] Token request success.
2019-04-28 00:46:38.860 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:46:38.860 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:46:38.860 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:46:38.869 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:46:38.870 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:46:38.870 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:46:38.870 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 00:46:38.870 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 00:46:38.870 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 00:46:38.870 +02:00 [DBG] Start userinfo request
2019-04-28 00:46:38.870 +02:00 [DBG] Bearer token found in header
2019-04-28 00:46:38.874 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:46:38.874 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:46:38.882 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 00:46:38.882 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556405198,"exp":1556405528,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556404451,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 00:46:38.882 +02:00 [DBG] Creating userinfo response
2019-04-28 00:46:38.882 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:46:38.883 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:46:38.883 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 00:46:38.883 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:46:38.925 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 00:46:38.925 +02:00 [DBG] End userinfo request
2019-04-28 00:46:38.936 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:46:38.936 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:46:38.936 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:46:38.936 +02:00 [DBG] Rendering check session result
2019-04-28 00:46:39.811 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:46:39.811 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:46:39.811 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:46:39.811 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:46:39.812 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:46:39.812 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:46:39.812 +02:00 [DBG] Start discovery request
2019-04-28 00:46:39.955 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:46:39.955 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:46:39.956 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:46:39.956 +02:00 [DBG] Rendering check session result
2019-04-28 00:48:34.366 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:48:34.366 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:48:34.367 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:48:34.367 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:48:34.367 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:48:34.367 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:48:34.368 +02:00 [DBG] Start discovery request
2019-04-28 00:48:34.467 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:48:34.467 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:48:34.467 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:48:34.467 +02:00 [DBG] Rendering check session result
2019-04-28 00:49:03.797 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:49:03.798 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:49:03.798 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:49:03.798 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:49:03.799 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:49:03.800 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:49:03.800 +02:00 [DBG] Start discovery request
2019-04-28 00:49:03.945 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:49:03.945 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:49:03.945 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:49:03.945 +02:00 [DBG] Rendering check session result
2019-04-28 00:50:35.152 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:50:35.152 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:50:35.152 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:50:35.154 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:50:35.157 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:50:35.157 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:50:35.158 +02:00 [DBG] Start discovery request
2019-04-28 00:50:35.360 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:50:35.360 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:50:35.360 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:50:35.360 +02:00 [DBG] Rendering check session result
2019-04-28 00:53:13.382 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:53:13.382 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:53:13.382 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:53:13.385 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:53:13.387 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:53:13.390 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:53:13.390 +02:00 [DBG] Start discovery request
2019-04-28 00:53:13.528 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:53:13.528 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:53:13.528 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:53:13.528 +02:00 [DBG] Rendering check session result
2019-04-28 00:54:06.965 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-04-28 00:54:06.966 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-04-28 00:54:06.966 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-04-28 00:54:06.966 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:54:06.966 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:54:06.966 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:54:06.966 +02:00 [DBG] Start discovery request
2019-04-28 00:54:26.757 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 00:54:26.757 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 00:54:26.758 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 00:54:26.758 +02:00 [DBG] Start authorize request
2019-04-28 00:54:26.758 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:54:26.758 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:54:26.758 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:26.758 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:54:26.759 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:54:26.759 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"696a60e39a404ecc99c89b94d495b73d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ca876990df3c7ad79c74ad46d5eab987","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"696a60e39a404ecc99c89b94d495b73d","code_challenge":"PZAmQBfI3f8896kyduXnmibq3keoiMP4sESQY2UkOjw","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 00:54:27.156 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 00:54:27.157 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 00:54:27.162 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****2f79","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIU:00000004","TimeStamp":"2019-04-27T22:54:27.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:54:27.162 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"696a60e39a404ecc99c89b94d495b73d","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 00:54:28.275 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:54:28.275 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:54:28.275 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:54:28.276 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:54:28.277 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:54:28.277 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:54:28.277 +02:00 [DBG] Start discovery request
2019-04-28 00:54:28.278 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:54:28.279 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:54:28.279 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:54:28.279 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:54:28.280 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:54:28.281 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:54:28.281 +02:00 [DBG] Start discovery request
2019-04-28 00:54:28.405 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 00:54:28.406 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:54:28.406 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:54:28.406 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 00:54:28.406 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 00:54:28.407 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 00:54:28.407 +02:00 [DBG] Start token request.
2019-04-28 00:54:28.407 +02:00 [DBG] Start client validation
2019-04-28 00:54:28.407 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 00:54:28.407 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 00:54:28.407 +02:00 [DBG] client id without secret found
2019-04-28 00:54:28.407 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 00:54:28.407 +02:00 [DBG] Secret id found: frontStore
2019-04-28 00:54:28.408 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:28.408 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 00:54:28.408 +02:00 [DBG] Client validation success
2019-04-28 00:54:28.408 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBB27ICCIU:00000006","TimeStamp":"2019-04-27T22:54:28.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 00:54:28.408 +02:00 [DBG] Start token request validation
2019-04-28 00:54:28.408 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 00:54:28.457 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:54:28.457 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:54:28.458 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:54:28.458 +02:00 [DBG] Rendering check session result
2019-04-28 00:54:28.487 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 00:54:28.493 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 00:54:28.493 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"a2cc5f9941246bb08a148f9ae0665acefcf76406509d9c7352818e9e183c2f79","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"a2cc5f9941246bb08a148f9ae0665acefcf76406509d9c7352818e9e183c2f79","redirect_uri":"http://localhost:8080/callback","code_verifier":"038f68e5f64e452c8592e87519a2d34028390d3090a04197bdb3f8393c1e908d903e9f7662fb4737a6e403720d205649","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 00:54:28.493 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:28.493 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 00:54:28.494 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:54:28.530 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:28.531 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 00:54:28.531 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 00:54:28.534 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****VA9w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****tuTg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIU:00000006","TimeStamp":"2019-04-27T22:54:28.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:54:28.535 +02:00 [DBG] Token request success.
2019-04-28 00:54:28.630 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:54:28.630 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:54:28.630 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:54:28.683 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:54:28.683 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:54:28.683 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:54:28.684 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 00:54:28.687 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 00:54:28.688 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 00:54:28.688 +02:00 [DBG] Start userinfo request
2019-04-28 00:54:28.688 +02:00 [DBG] Bearer token found in header
2019-04-28 00:54:28.691 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:28.691 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:28.727 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 00:54:28.727 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556405668,"exp":1556405998,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556404451,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 00:54:28.727 +02:00 [DBG] Creating userinfo response
2019-04-28 00:54:28.727 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:54:28.727 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:54:28.728 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 00:54:28.728 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:54:28.743 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 00:54:28.743 +02:00 [DBG] End userinfo request
2019-04-28 00:54:28.790 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:54:28.790 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:54:28.791 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:54:28.791 +02:00 [DBG] Rendering check session result
2019-04-28 00:54:29.553 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:54:29.554 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:54:29.554 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:54:29.555 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:54:29.555 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:54:29.555 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:54:29.555 +02:00 [DBG] Start discovery request
2019-04-28 00:54:29.697 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:54:29.697 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:54:29.697 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:54:29.697 +02:00 [DBG] Rendering check session result
2019-04-28 00:54:31.723 +02:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-28 00:54:31.723 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-28 00:54:31.723 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-28 00:54:31.723 +02:00 [DBG] Processing signout request for de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:54:31.723 +02:00 [DBG] Start end session request validation
2019-04-28 00:54:31.723 +02:00 [DBG] Start identity token validation
2019-04-28 00:54:31.724 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:31.724 +02:00 [DBG] Client found: frontStore / Front Store Client
2019-04-28 00:54:31.938 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 00:54:31.938 +02:00 [DBG] Token validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556405668,"exp":1556405968,"iss":"http://localhost:5000","aud":"frontStore","iat":1556405668,"at_hash":"P8_U0xuDb5JooH5gYm9v5Q","sid":"ca876990df3c7ad79c74ad46d5eab987","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556404451,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 00:54:31.939 +02:00 [INF] End session request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","PostLogOutUri":"http://localhost:8080","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjY4NjEzN2E5NzllNzI0MWY1MzczZmM2YWUzZWNiZTE5IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NTY0MDU2NjgsImV4cCI6MTU1NjQwNTk2OCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoiZnJvbnRTdG9yZSIsImlhdCI6MTU1NjQwNTY2OCwiYXRfaGFzaCI6IlA4X1UweHVEYjVKb29INWdZbTl2NVEiLCJzaWQiOiJjYTg3Njk5MGRmM2M3YWQ3OWM3NGFkNDZkNWVhYjk4NyIsInN1YiI6ImRlM2YyNWM4LTI0NmMtNDA2MS1iZmE2LTg2YzY2OTgxNzJmZSIsImF1dGhfdGltZSI6MTU1NjQwNDQ1MSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.pqB85SEYZr26k12Xmf23Ra5SQFy4t9hyKxeVm-O9JcW7WTl8_z4BKX7EYP2a2BuDgDVSLDoO5T5uSWEME3xGMglhj7sjjRZDgF-Dd0AM1Oa9C5pbCRhq-9co3vAGgPfBDgzvPu7yWBbrQrQoYc3CoaOYFKEaevY84HwryszK7jixTGqpR07S36jz3ZCApiQ0nqqU8rEB_UDh-pgYyDM_U4mUGiC6rouHKcdqoUuBpK3DBebR2LfH1puNp9m8CktPXjQJf0fNhOI1VzrOf7ITOPsVbd6mNWsb5mK_xxoEez1AdRZMDfBfgWahn_jtotqvRuvtmi7suNj6ONrbyqVA9w","post_logout_redirect_uri":"http://localhost:8080"},"$type":"EndSessionRequestValidationLog"}
2019-04-28 00:54:31.939 +02:00 [DBG] Success validating end session request from frontStore
2019-04-28 00:54:31.946 +02:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-28 00:54:31.946 +02:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-28 00:54:31.946 +02:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-28 00:54:31.946 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLMBB27ICCIV:00000006","TimeStamp":"2019-04-27T22:54:31.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-28 00:54:32.114 +02:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-28 00:54:32.114 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-28 00:54:32.115 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-28 00:54:32.115 +02:00 [DBG] Processing signout callback request
2019-04-28 00:54:32.115 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:32.115 +02:00 [DBG] No client front-channel logout URLs
2019-04-28 00:54:32.115 +02:00 [DBG] No client back-channel logout URLs
2019-04-28 00:54:32.115 +02:00 [INF] Successful signout callback.
2019-04-28 00:54:32.116 +02:00 [DBG] No client front-channel iframe urls
2019-04-28 00:54:32.116 +02:00 [DBG] No client back-channel iframe urls
2019-04-28 00:54:36.569 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:54:36.569 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:54:36.569 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:54:36.569 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:54:36.570 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:54:36.570 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:54:36.570 +02:00 [DBG] Start discovery request
2019-04-28 00:54:36.589 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 00:54:36.589 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 00:54:36.589 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 00:54:36.589 +02:00 [DBG] Start authorize request
2019-04-28 00:54:36.589 +02:00 [DBG] No user present in authorize request
2019-04-28 00:54:36.589 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:54:36.590 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:36.590 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:54:36.590 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:54:36.590 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"c9d3ceaf448548eeb63fc23a8a8b12f1","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"c9d3ceaf448548eeb63fc23a8a8b12f1","code_challenge":"bm2mSzn2-C6TJIGErJ1xbgMlWN7qkpkaVE8bWXu2luU","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 00:54:36.590 +02:00 [INF] Showing login: User is not authenticated
2019-04-28 00:54:36.604 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:54:36.604 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:36.604 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:54:36.604 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:54:36.604 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:43.860 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 00:54:43.861 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:54:43.861 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:43.861 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:54:43.862 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:54:44.083 +02:00 [DBG] Augmenting SignInContext
2019-04-28 00:54:44.083 +02:00 [DBG] Adding idp claim with value: local
2019-04-28 00:54:44.083 +02:00 [DBG] Adding amr claim with value: pwd
2019-04-28 00:54:44.083 +02:00 [DBG] Adding auth_time claim with value: 1556405684
2019-04-28 00:54:44.083 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-28 00:54:44.086 +02:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLMBB27ICCJ0:00000004","TimeStamp":"2019-04-27T22:54:44.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-28 00:54:44.087 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:44.095 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-28 00:54:44.095 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-28 00:54:44.095 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-28 00:54:44.095 +02:00 [DBG] Start authorize callback request
2019-04-28 00:54:44.095 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:54:44.096 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 00:54:44.096 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:44.096 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 00:54:44.096 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 00:54:44.096 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"c9d3ceaf448548eeb63fc23a8a8b12f1","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9e269bd464a2be615b55761f96387466","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"c9d3ceaf448548eeb63fc23a8a8b12f1","code_challenge":"bm2mSzn2-C6TJIGErJ1xbgMlWN7qkpkaVE8bWXu2luU","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 00:54:44.105 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 00:54:44.105 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 00:54:44.112 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****1103","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIV:0000000B","TimeStamp":"2019-04-27T22:54:44.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:54:44.112 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"c9d3ceaf448548eeb63fc23a8a8b12f1","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 00:54:44.113 +02:00 [DBG] Augmenting SignInContext
2019-04-28 00:54:44.113 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-28 00:54:45.023 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:54:45.023 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:54:45.023 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:54:45.023 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:54:45.023 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:54:45.023 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:54:45.024 +02:00 [DBG] Start discovery request
2019-04-28 00:54:45.162 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 00:54:45.163 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:54:45.163 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:54:45.163 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 00:54:45.164 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 00:54:45.164 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 00:54:45.164 +02:00 [DBG] Start token request.
2019-04-28 00:54:45.164 +02:00 [DBG] Start client validation
2019-04-28 00:54:45.164 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 00:54:45.164 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 00:54:45.165 +02:00 [DBG] client id without secret found
2019-04-28 00:54:45.166 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 00:54:45.166 +02:00 [DBG] Secret id found: frontStore
2019-04-28 00:54:45.166 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:45.166 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 00:54:45.166 +02:00 [DBG] Client validation success
2019-04-28 00:54:45.166 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBB27ICCIU:0000000F","TimeStamp":"2019-04-27T22:54:45.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 00:54:45.166 +02:00 [DBG] Start token request validation
2019-04-28 00:54:45.166 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 00:54:45.209 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 00:54:45.438 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 00:54:45.438 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"094e4fdd7f10cf8b54c8cc38eb438e8033c3199347946981524f27936b351103","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"094e4fdd7f10cf8b54c8cc38eb438e8033c3199347946981524f27936b351103","redirect_uri":"http://localhost:8080/callback","code_verifier":"564a79eced00493ca55f5fbf412961df53edc19957de433e92ae2fc0ba49619fb0da135f69014bf9b75a43c5a3383009","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 00:54:45.438 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:45.438 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 00:54:45.438 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 00:54:45.681 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:45.681 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 00:54:45.681 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 00:54:45.685 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****NKWQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****MCmA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBB27ICCIU:0000000F","TimeStamp":"2019-04-27T22:54:45.0000000Z","ProcessId":76568,"LocalIpAddress":"127.0.0.1:22158","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 00:54:45.685 +02:00 [DBG] Token request success.
2019-04-28 00:54:45.695 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:54:45.695 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:54:45.695 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:54:45.704 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 00:54:45.704 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:54:45.704 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:54:45.704 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 00:54:45.705 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 00:54:45.705 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 00:54:45.705 +02:00 [DBG] Start userinfo request
2019-04-28 00:54:45.705 +02:00 [DBG] Bearer token found in header
2019-04-28 00:54:45.707 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:45.708 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 00:54:45.937 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 00:54:45.937 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556405685,"exp":1556406015,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556405684,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 00:54:45.937 +02:00 [DBG] Creating userinfo response
2019-04-28 00:54:45.937 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:54:45.938 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:54:45.938 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 00:54:45.938 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 00:54:45.970 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 00:54:45.970 +02:00 [DBG] End userinfo request
2019-04-28 00:54:45.988 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:54:45.988 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:54:45.988 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:54:45.988 +02:00 [DBG] Rendering check session result
2019-04-28 00:54:46.828 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 00:54:46.828 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 00:54:46.828 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 00:54:46.829 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:54:46.829 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:54:46.829 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:54:46.829 +02:00 [DBG] Start discovery request
2019-04-28 00:54:46.990 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 00:54:46.990 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 00:54:46.990 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 00:54:46.990 +02:00 [DBG] Rendering check session result
2019-04-28 00:57:39.379 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-04-28 00:57:39.380 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-04-28 00:57:39.380 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-04-28 00:57:39.380 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 00:57:39.380 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 00:57:39.380 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 00:57:39.380 +02:00 [DBG] Start discovery request
2019-04-28 01:03:35.256 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-28 01:03:35.342 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-28 01:03:35.345 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-28 01:03:35.345 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-28 01:03:35.345 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-28 01:03:35.345 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-28 01:03:35.345 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-28 01:03:35.728 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 01:03:35.736 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 01:03:35.736 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 01:03:35.758 +02:00 [DBG] Login Url: /Account/Login
2019-04-28 01:03:35.759 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-28 01:03:35.759 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-28 01:03:35.759 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-28 01:03:35.759 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-28 01:03:35.759 +02:00 [DBG] Error Url: /home/error
2019-04-28 01:03:35.759 +02:00 [DBG] Error Id Parameter: errorId
2019-04-28 01:03:35.778 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 01:03:35.778 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 01:03:35.870 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 01:03:35.870 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 01:03:35.871 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 01:03:35.871 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 01:03:35.875 +02:00 [DBG] Start discovery request
2019-04-28 01:03:35.875 +02:00 [DBG] Start discovery request
2019-04-28 01:03:36.054 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 01:03:36.056 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 01:03:36.056 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 01:03:36.058 +02:00 [DBG] Rendering check session result
2019-04-28 01:03:36.093 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-28 01:03:36.095 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-28 01:03:36.096 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-28 01:03:36.120 +02:00 [DBG] Start key discovery request
2019-04-28 01:03:52.238 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-28 01:03:52.320 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-28 01:03:52.325 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-28 01:03:52.325 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-28 01:03:52.326 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-28 01:03:52.335 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-28 01:03:52.335 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-28 01:03:53.135 +02:00 [DBG] Login Url: /Account/Login
2019-04-28 01:03:53.146 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-28 01:03:53.146 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-28 01:03:53.146 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-28 01:03:53.146 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-28 01:03:53.146 +02:00 [DBG] Error Url: /home/error
2019-04-28 01:03:53.146 +02:00 [DBG] Error Id Parameter: errorId
2019-04-28 01:04:33.975 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 01:04:33.987 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 01:04:33.987 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 01:04:33.993 +02:00 [DBG] Start authorize request
2019-04-28 01:04:34.002 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 01:04:34.008 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 01:04:34.024 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 01:04:34.028 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 01:04:34.067 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 01:04:34.086 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"0e78a08ff8744d098e6e0a7e5fe5fded","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9e269bd464a2be615b55761f96387466","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"0e78a08ff8744d098e6e0a7e5fe5fded","code_challenge":"fAigLIg5bkrrE2x3YQg80hc-ip9p9H89LJhFr5snK7I","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 01:04:34.906 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-28 01:04:34.906 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-28 01:04:34.906 +02:00 [INF] Showing consent: User has not yet consented
2019-04-28 01:04:34.964 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 01:04:34.965 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 01:04:34.965 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 01:04:34.965 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 01:04:34.968 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 01:04:39.357 +02:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 01:04:39.403 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 01:04:39.403 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 01:04:39.403 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 01:04:39.403 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 01:04:39.419 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RequestedScopes":["openid","profile","api1"],"GrantedScopes":["openid","profile","api1"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLMBCIF0B64H:00000006","TimeStamp":"2019-04-27T23:04:39.0000000Z","ProcessId":80768,"LocalIpAddress":"127.0.0.1:11582","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-04-28 01:04:39.438 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 01:04:39.682 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-28 01:04:39.685 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-28 01:04:39.685 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-28 01:04:39.697 +02:00 [DBG] Start authorize callback request
2019-04-28 01:04:39.707 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 01:04:39.708 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 01:04:39.708 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 01:04:39.708 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 01:04:39.708 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 01:04:39.708 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"0e78a08ff8744d098e6e0a7e5fe5fded","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9e269bd464a2be615b55761f96387466","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"0e78a08ff8744d098e6e0a7e5fe5fded","code_challenge":"fAigLIg5bkrrE2x3YQg80hc-ip9p9H89LJhFr5snK7I","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 01:04:39.723 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-28 01:04:39.723 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-28 01:04:39.738 +02:00 [INF] User consented to scopes: ["openid","profile","api1"]
2019-04-28 01:04:39.741 +02:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1"]
2019-04-28 01:04:39.746 +02:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 01:04:39.791 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 01:04:39.826 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****310d","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBCIF0B64H:00000008","TimeStamp":"2019-04-27T23:04:39.0000000Z","ProcessId":80768,"LocalIpAddress":"127.0.0.1:11582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 01:04:39.828 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"0e78a08ff8744d098e6e0a7e5fe5fded","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 01:04:41.037 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 01:04:41.037 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 01:04:41.042 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 01:04:41.042 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 01:04:41.042 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 01:04:41.042 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 01:04:41.046 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 01:04:41.047 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 01:04:41.049 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 01:04:41.049 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 01:04:41.054 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 01:04:41.054 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 01:04:41.055 +02:00 [DBG] Start discovery request
2019-04-28 01:04:41.055 +02:00 [DBG] Start discovery request
2019-04-28 01:04:41.224 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 01:04:41.225 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 01:04:41.226 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 01:04:41.226 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 01:04:41.238 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 01:04:41.240 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 01:04:41.240 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 01:04:41.242 +02:00 [DBG] Rendering check session result
2019-04-28 01:04:41.247 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 01:04:41.247 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 01:04:41.350 +02:00 [DBG] Start token request.
2019-04-28 01:04:41.365 +02:00 [DBG] Start client validation
2019-04-28 01:04:41.379 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 01:04:41.390 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 01:04:41.391 +02:00 [DBG] client id without secret found
2019-04-28 01:04:41.392 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 01:04:41.392 +02:00 [DBG] Secret id found: frontStore
2019-04-28 01:04:41.392 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 01:04:41.392 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 01:04:41.392 +02:00 [DBG] Client validation success
2019-04-28 01:04:41.393 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBCIF0B64J:00000008","TimeStamp":"2019-04-27T23:04:41.0000000Z","ProcessId":80768,"LocalIpAddress":"127.0.0.1:11582","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 01:04:41.413 +02:00 [DBG] Start token request validation
2019-04-28 01:04:41.437 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 01:04:41.477 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 01:04:41.557 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 01:04:41.562 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"b1cb10581054d159ff8ec4ba86da873fee40010288b4f9e2bf7ddd3c42c2310d","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"b1cb10581054d159ff8ec4ba86da873fee40010288b4f9e2bf7ddd3c42c2310d","redirect_uri":"http://localhost:8080/callback","code_verifier":"33c8c82c115c4aff8f1902f6d65b790f455710e09258492bbe7788d205ad7b7ed0b18960511743f08aec80db09510a9c","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 01:04:41.585 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 01:04:41.599 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 01:04:41.601 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 01:04:41.926 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 01:04:41.936 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 01:04:41.937 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 01:04:41.943 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****EKKA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****NiyA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBCIF0B64J:00000008","TimeStamp":"2019-04-27T23:04:41.0000000Z","ProcessId":80768,"LocalIpAddress":"127.0.0.1:11582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 01:04:41.945 +02:00 [DBG] Token request success.
2019-04-28 01:04:41.963 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 01:04:41.964 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 01:04:41.964 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 01:04:41.971 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 01:04:41.971 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 01:04:41.972 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 01:04:41.972 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 01:04:41.973 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 01:04:41.974 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 01:04:41.981 +02:00 [DBG] Start userinfo request
2019-04-28 01:04:41.986 +02:00 [DBG] Bearer token found in header
2019-04-28 01:04:42.043 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 01:04:42.048 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 01:04:42.057 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 01:04:42.059 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556406281,"exp":1556406371,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556405684,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 01:04:42.069 +02:00 [DBG] Creating userinfo response
2019-04-28 01:04:42.074 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 01:04:42.079 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 01:04:42.082 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 01:04:42.082 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 01:04:42.095 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 01:04:42.095 +02:00 [DBG] End userinfo request
2019-04-28 01:04:42.113 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 01:04:42.113 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 01:04:42.113 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 01:04:42.113 +02:00 [DBG] Rendering check session result
2019-04-28 01:04:42.929 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 01:04:43.197 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 01:04:43.197 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 01:04:43.197 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 01:04:43.197 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 01:04:43.199 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 01:04:43.199 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 01:04:43.199 +02:00 [DBG] Start discovery request
2019-04-28 01:04:43.401 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 01:04:43.402 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 01:04:43.402 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 01:04:43.402 +02:00 [DBG] Rendering check session result
2019-04-28 01:04:44.024 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 01:05:00.035 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-04-28 01:05:00.036 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-04-28 01:05:00.036 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-04-28 01:05:00.036 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 01:05:00.036 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 01:05:00.036 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 01:05:00.036 +02:00 [DBG] Start discovery request
2019-04-28 01:06:11.385 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 01:06:11.385 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 01:06:11.385 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 01:06:11.385 +02:00 [DBG] Start discovery request
2019-04-28 01:07:17.677 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-04-28 01:07:17.688 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-04-28 01:07:17.688 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-04-28 01:07:17.688 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 01:07:17.688 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 01:07:17.688 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 01:07:17.688 +02:00 [DBG] Start discovery request
2019-04-28 01:08:48.849 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 01:08:48.849 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 01:08:48.849 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 01:08:48.850 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 01:08:48.850 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 01:08:48.850 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 01:08:48.851 +02:00 [DBG] Start discovery request
2019-04-28 01:08:48.967 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 01:08:48.967 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 01:08:48.967 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 01:08:48.968 +02:00 [DBG] Rendering check session result
2019-04-28 12:33:35.391 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 12:33:35.403 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 12:33:35.403 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 12:33:35.404 +02:00 [DBG] Start authorize request
2019-04-28 12:33:35.406 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 12:33:35.406 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 12:33:35.407 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:33:35.407 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 12:33:35.407 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 12:33:35.408 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"3ffbeea4dc90424dbf52e8e9e6c4fb04","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9e269bd464a2be615b55761f96387466","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"3ffbeea4dc90424dbf52e8e9e6c4fb04","code_challenge":"XVxetR8Q1KWl3H1edM17BwCs2Bo6gLbpYZUw6V9LulE","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 12:33:35.434 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 12:33:35.435 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 12:33:35.457 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****721b","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBCIF0B64N:00000001","TimeStamp":"2019-04-28T10:33:35.0000000Z","ProcessId":80768,"LocalIpAddress":"127.0.0.1:11582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 12:33:35.457 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"3ffbeea4dc90424dbf52e8e9e6c4fb04","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 12:33:36.421 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 12:33:36.421 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 12:33:36.421 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:33:36.421 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:33:36.422 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:33:36.422 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:33:36.422 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:33:36.422 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:33:36.422 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:33:36.422 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:33:36.422 +02:00 [DBG] Start discovery request
2019-04-28 12:33:36.422 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:33:36.423 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:33:36.423 +02:00 [DBG] Start discovery request
2019-04-28 12:33:36.541 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 12:33:36.541 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:33:36.541 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:33:36.542 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 12:33:36.542 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 12:33:36.542 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 12:33:36.542 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 12:33:36.542 +02:00 [DBG] Rendering check session result
2019-04-28 12:33:36.583 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 12:33:36.583 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 12:33:36.584 +02:00 [DBG] Start token request.
2019-04-28 12:33:36.584 +02:00 [DBG] Start client validation
2019-04-28 12:33:36.584 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 12:33:36.584 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 12:33:36.586 +02:00 [DBG] client id without secret found
2019-04-28 12:33:36.586 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 12:33:36.586 +02:00 [DBG] Secret id found: frontStore
2019-04-28 12:33:36.586 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:33:36.586 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 12:33:36.586 +02:00 [DBG] Client validation success
2019-04-28 12:33:36.587 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBCIF0B64O:00000002","TimeStamp":"2019-04-28T10:33:36.0000000Z","ProcessId":80768,"LocalIpAddress":"127.0.0.1:11582","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 12:33:36.587 +02:00 [DBG] Start token request validation
2019-04-28 12:33:36.587 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 12:33:36.606 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 12:33:36.865 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 12:33:36.867 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"1ea025f68a4a7fc8a166c50a15f747d00c78e7b450469fcedd051989e302721b","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"1ea025f68a4a7fc8a166c50a15f747d00c78e7b450469fcedd051989e302721b","redirect_uri":"http://localhost:8080/callback","code_verifier":"7a06dc6920e54ad89fdbe9c4737fde5e0b2a983566af4403b2dd77f1fe142cc5d4bf8d086e27467eacb3df660fd52aa3","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 12:33:36.869 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:33:36.869 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 12:33:36.869 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 12:33:37.321 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:33:37.321 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 12:33:37.321 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 12:33:37.324 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****00Bw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aEqw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBCIF0B64O:00000002","TimeStamp":"2019-04-28T10:33:37.0000000Z","ProcessId":80768,"LocalIpAddress":"127.0.0.1:11582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 12:33:37.324 +02:00 [DBG] Token request success.
2019-04-28 12:33:37.336 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 12:33:37.336 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:33:37.336 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:33:37.345 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 12:33:37.345 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:33:37.345 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:33:37.345 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 12:33:37.347 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 12:33:37.347 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 12:33:37.347 +02:00 [DBG] Start userinfo request
2019-04-28 12:33:37.347 +02:00 [DBG] Bearer token found in header
2019-04-28 12:33:37.356 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:33:37.356 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:33:37.586 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 12:33:37.586 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556447617,"exp":1556447707,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556405684,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 12:33:37.587 +02:00 [DBG] Creating userinfo response
2019-04-28 12:33:37.587 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 12:33:37.587 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 12:33:37.587 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 12:33:37.587 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 12:33:37.625 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 12:33:37.625 +02:00 [DBG] End userinfo request
2019-04-28 12:33:37.642 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 12:33:37.643 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 12:33:37.644 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 12:33:37.644 +02:00 [DBG] Rendering check session result
2019-04-28 12:33:38.510 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 12:33:38.510 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:33:38.510 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:33:38.511 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:33:38.511 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:33:38.511 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:33:38.511 +02:00 [DBG] Start discovery request
2019-04-28 12:33:38.658 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 12:33:38.658 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 12:33:38.658 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 12:33:38.658 +02:00 [DBG] Rendering check session result
2019-04-28 12:35:04.749 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-04-28 12:35:04.749 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-04-28 12:35:04.749 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-04-28 12:35:04.749 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:35:04.750 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:35:04.750 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:35:04.750 +02:00 [DBG] Start discovery request
2019-04-28 12:39:22.156 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 12:39:22.156 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:39:22.156 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:39:22.157 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:39:22.181 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:39:22.181 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:39:22.181 +02:00 [DBG] Start discovery request
2019-04-28 12:39:22.370 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 12:39:22.371 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 12:39:22.371 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 12:39:22.371 +02:00 [DBG] Rendering check session result
2019-04-28 12:39:57.166 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-04-28 12:39:57.166 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-04-28 12:39:57.166 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-04-28 12:39:57.167 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:39:57.167 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:39:57.167 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:39:57.167 +02:00 [DBG] Start discovery request
2019-04-28 12:42:06.980 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 12:42:06.989 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 12:42:06.990 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 12:42:06.990 +02:00 [DBG] Start authorize request
2019-04-28 12:42:06.990 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 12:42:06.990 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 12:42:06.991 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:42:06.991 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 12:42:06.991 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 12:42:06.991 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"083449e0d9194a33b5aab58435879400","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9e269bd464a2be615b55761f96387466","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"083449e0d9194a33b5aab58435879400","code_challenge":"eK1ma6UMCI2kcnts_KyinYYRf_87sFHGWBTWuPpdt0g","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 12:42:07.459 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 12:42:07.459 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 12:42:07.467 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****329c","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBCIF0B64R:00000001","TimeStamp":"2019-04-28T10:42:07.0000000Z","ProcessId":80768,"LocalIpAddress":"127.0.0.1:11582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 12:42:07.468 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"083449e0d9194a33b5aab58435879400","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 12:42:08.211 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 12:42:08.211 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 12:42:08.211 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:42:08.211 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:42:08.211 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:42:08.212 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:42:08.212 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:42:08.213 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:42:08.213 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:42:08.213 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:42:08.213 +02:00 [DBG] Start discovery request
2019-04-28 12:42:08.215 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:42:08.215 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:42:08.215 +02:00 [DBG] Start discovery request
2019-04-28 12:42:08.383 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 12:42:08.383 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:42:08.384 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:42:08.384 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 12:42:08.384 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 12:42:08.384 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 12:42:08.384 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 12:42:08.384 +02:00 [DBG] Rendering check session result
2019-04-28 12:42:08.384 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 12:42:08.384 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 12:42:08.384 +02:00 [DBG] Start token request.
2019-04-28 12:42:08.384 +02:00 [DBG] Start client validation
2019-04-28 12:42:08.384 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 12:42:08.384 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 12:42:08.459 +02:00 [DBG] client id without secret found
2019-04-28 12:42:08.459 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 12:42:08.459 +02:00 [DBG] Secret id found: frontStore
2019-04-28 12:42:08.459 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:42:08.459 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 12:42:08.459 +02:00 [DBG] Client validation success
2019-04-28 12:42:08.459 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBCIF0B64R:00000003","TimeStamp":"2019-04-28T10:42:08.0000000Z","ProcessId":80768,"LocalIpAddress":"127.0.0.1:11582","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 12:42:08.459 +02:00 [DBG] Start token request validation
2019-04-28 12:42:08.460 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 12:42:08.473 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 12:42:08.725 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 12:42:08.726 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"2b45da4818a55088020dddff556233d3a4b16fbbd06d4437a7ea3f4bf4a1329c","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"2b45da4818a55088020dddff556233d3a4b16fbbd06d4437a7ea3f4bf4a1329c","redirect_uri":"http://localhost:8080/callback","code_verifier":"b373b5d1de364f00a3f2a5496e1058a20e03eb00b38f4d5ab415c29f21ad9730ee819d3061224c5c9a801ccd2b4e81f6","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 12:42:08.726 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:42:08.726 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 12:42:08.726 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 12:42:08.775 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:42:08.775 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 12:42:08.776 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 12:42:08.779 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****rIaQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****W9Qw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBCIF0B64R:00000003","TimeStamp":"2019-04-28T10:42:08.0000000Z","ProcessId":80768,"LocalIpAddress":"127.0.0.1:11582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 12:42:08.779 +02:00 [DBG] Token request success.
2019-04-28 12:42:08.789 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 12:42:08.789 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:42:08.789 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:42:08.795 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 12:42:08.796 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:42:08.796 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:42:08.796 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 12:42:08.797 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 12:42:08.797 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 12:42:08.797 +02:00 [DBG] Start userinfo request
2019-04-28 12:42:08.797 +02:00 [DBG] Bearer token found in header
2019-04-28 12:42:08.800 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:42:08.800 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:42:09.056 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 12:42:09.056 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556448128,"exp":1556448218,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556405684,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 12:42:09.056 +02:00 [DBG] Creating userinfo response
2019-04-28 12:42:09.056 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 12:42:09.056 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 12:42:09.057 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 12:42:09.057 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 12:42:09.089 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 12:42:09.090 +02:00 [DBG] End userinfo request
2019-04-28 12:42:09.107 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 12:42:09.108 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 12:42:09.108 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 12:42:09.108 +02:00 [DBG] Rendering check session result
2019-04-28 12:42:10.068 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 12:42:10.069 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:42:10.069 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:42:10.069 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:42:10.069 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:42:10.070 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:42:10.070 +02:00 [DBG] Start discovery request
2019-04-28 12:42:10.250 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 12:42:10.250 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 12:42:10.250 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 12:42:10.250 +02:00 [DBG] Rendering check session result
2019-04-28 12:44:21.991 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-04-28 12:44:21.991 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-04-28 12:44:21.991 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-04-28 12:44:21.992 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:44:21.992 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:44:21.993 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:44:21.993 +02:00 [DBG] Start discovery request
2019-04-28 12:50:04.194 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-28 12:50:04.270 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-28 12:50:04.274 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-28 12:50:04.274 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-28 12:50:04.274 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-28 12:50:04.274 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-28 12:50:04.274 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-28 12:50:05.552 +02:00 [DBG] Login Url: /Account/Login
2019-04-28 12:50:05.556 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-28 12:50:05.556 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-28 12:50:05.556 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-28 12:50:05.556 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-28 12:50:05.556 +02:00 [DBG] Error Url: /home/error
2019-04-28 12:50:05.556 +02:00 [DBG] Error Id Parameter: errorId
2019-04-28 12:51:01.316 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:51:01.320 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:51:01.320 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:51:01.323 +02:00 [DBG] Start discovery request
2019-04-28 12:51:01.472 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-28 12:51:01.473 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-28 12:51:01.473 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-28 12:51:01.476 +02:00 [DBG] Start key discovery request
2019-04-28 12:52:21.329 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-28 12:52:21.387 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-28 12:52:21.392 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-28 12:52:21.392 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-28 12:52:21.393 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-28 12:52:21.393 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-28 12:52:21.393 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-28 12:52:22.328 +02:00 [DBG] Login Url: /Account/Login
2019-04-28 12:52:22.331 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-28 12:52:22.331 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-28 12:52:22.331 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-28 12:52:22.332 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-28 12:52:22.332 +02:00 [DBG] Error Url: /home/error
2019-04-28 12:52:22.332 +02:00 [DBG] Error Id Parameter: errorId
2019-04-28 12:55:15.422 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-28 12:55:15.515 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-28 12:55:15.519 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-28 12:55:15.520 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-28 12:55:15.520 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-28 12:55:15.520 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-28 12:55:15.520 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-28 12:55:16.685 +02:00 [DBG] Login Url: /Account/Login
2019-04-28 12:55:16.690 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-28 12:55:16.690 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-28 12:55:16.690 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-28 12:55:16.690 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-28 12:55:16.691 +02:00 [DBG] Error Url: /home/error
2019-04-28 12:55:16.691 +02:00 [DBG] Error Id Parameter: errorId
2019-04-28 12:58:56.545 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-28 12:58:56.596 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-28 12:58:56.599 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-28 12:58:56.600 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-28 12:58:56.600 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-28 12:58:56.600 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-28 12:58:56.600 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-28 12:58:57.219 +02:00 [DBG] Login Url: /Account/Login
2019-04-28 12:58:57.225 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-28 12:58:57.225 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-28 12:58:57.225 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-28 12:58:57.225 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-28 12:58:57.225 +02:00 [DBG] Error Url: /home/error
2019-04-28 12:58:57.226 +02:00 [DBG] Error Id Parameter: errorId
2019-04-28 12:59:07.906 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:59:07.910 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:59:07.910 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:59:07.914 +02:00 [DBG] Start discovery request
2019-04-28 12:59:08.024 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-28 12:59:08.025 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-28 12:59:08.025 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-28 12:59:08.028 +02:00 [DBG] Start key discovery request
2019-04-28 12:59:10.213 +02:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-28 12:59:10.216 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-28 12:59:10.217 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-28 12:59:10.232 +02:00 [DBG] Processing signout request for de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 12:59:10.241 +02:00 [DBG] Start end session request validation
2019-04-28 12:59:10.248 +02:00 [DBG] Start identity token validation
2019-04-28 12:59:10.296 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:59:10.296 +02:00 [DBG] Client found: frontStore / Front Store Client
2019-04-28 12:59:11.278 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 12:59:11.280 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 12:59:11.286 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 12:59:11.287 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 12:59:11.295 +02:00 [DBG] Start authorize request
2019-04-28 12:59:11.301 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 12:59:11.304 +02:00 [DBG] Token validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556448128,"exp":1556448158,"iss":"http://localhost:5000","aud":"frontStore","iat":1556448128,"at_hash":"r2QHJ_HUafd-iPDuZ_QT8w","sid":"9e269bd464a2be615b55761f96387466","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556405684,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 12:59:11.306 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 12:59:11.313 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:59:11.321 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 12:59:11.330 +02:00 [INF] End session request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","PostLogOutUri":"http://localhost:8080","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjY4NjEzN2E5NzllNzI0MWY1MzczZmM2YWUzZWNiZTE5IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NTY0NDgxMjgsImV4cCI6MTU1NjQ0ODE1OCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoiZnJvbnRTdG9yZSIsImlhdCI6MTU1NjQ0ODEyOCwiYXRfaGFzaCI6InIyUUhKX0hVYWZkLWlQRHVaX1FUOHciLCJzaWQiOiI5ZTI2OWJkNDY0YTJiZTYxNWI1NTc2MWY5NjM4NzQ2NiIsInN1YiI6ImRlM2YyNWM4LTI0NmMtNDA2MS1iZmE2LTg2YzY2OTgxNzJmZSIsImF1dGhfdGltZSI6MTU1NjQwNTY4NCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.locbB_pwuSZ5mUek3FOoJegk03ipLzRX72otKW_6hmGarXpiKu7t1Khdg2JVZXoOGXuecs-RaN0OJPBNTwAkDZVJ7jmPTjbudr6pc7z6HZeJ0hbsOiais47tJ9hTVSni-u-6iBvlPtLJzk2gT1DZ31LTNKi2LKeaJOYbFxMhrbwQCtxU6ysrNv4mt-emX5e0JLKe1uBO-1fyVCQNXNVt3S-7MRqaD4fEiuzq7fa5pGU55FOkguO_WspZTUpx_HcTOWSljIVadAJxRZk2rmOMnj0DR6IeiVNLx8VRgX-eEYgbI2NI1nh-4ll2dloA4G8IQ18qLhghPumfamDqfJrIaQ","post_logout_redirect_uri":"http://localhost:8080"},"$type":"EndSessionRequestValidationLog"}
2019-04-28 12:59:11.331 +02:00 [DBG] Success validating end session request from frontStore
2019-04-28 12:59:11.356 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 12:59:11.367 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"041b430dbabd4de98795596e10ec37d3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9e269bd464a2be615b55761f96387466","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"041b430dbabd4de98795596e10ec37d3","code_challenge":"cXVDdp0hVS0t3ugaL39s9F3M6NnPSce6UiMMQ6B4UB0","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 12:59:11.416 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-28 12:59:11.416 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-28 12:59:11.417 +02:00 [INF] Showing consent: User has not yet consented
2019-04-28 12:59:11.499 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 12:59:11.499 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:59:11.499 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 12:59:11.499 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 12:59:11.501 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:59:15.085 +02:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 12:59:15.135 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 12:59:15.135 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:59:15.135 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 12:59:15.135 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 12:59:15.155 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RequestedScopes":["openid","profile","api1"],"GrantedScopes":["openid","profile","api1"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLMBP21E0UF6:00000002","TimeStamp":"2019-04-28T10:59:15.0000000Z","ProcessId":83208,"LocalIpAddress":"127.0.0.1:24457","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-04-28 12:59:15.171 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:59:15.517 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-28 12:59:15.518 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-28 12:59:15.518 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-28 12:59:15.533 +02:00 [DBG] Start authorize callback request
2019-04-28 12:59:15.548 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 12:59:15.548 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 12:59:15.549 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:59:15.549 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 12:59:15.549 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 12:59:15.549 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"041b430dbabd4de98795596e10ec37d3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9e269bd464a2be615b55761f96387466","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"041b430dbabd4de98795596e10ec37d3","code_challenge":"cXVDdp0hVS0t3ugaL39s9F3M6NnPSce6UiMMQ6B4UB0","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 12:59:15.805 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-28 12:59:15.805 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-28 12:59:15.810 +02:00 [INF] User consented to scopes: ["openid","profile","api1"]
2019-04-28 12:59:15.811 +02:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1"]
2019-04-28 12:59:15.815 +02:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 12:59:15.825 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 12:59:15.844 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****3014","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBP21E0UF3:00000008","TimeStamp":"2019-04-28T10:59:15.0000000Z","ProcessId":83208,"LocalIpAddress":"127.0.0.1:24457","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 12:59:15.845 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"041b430dbabd4de98795596e10ec37d3","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 12:59:16.601 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 12:59:16.605 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:59:16.606 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:59:16.610 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:59:16.610 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:59:16.611 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:59:16.611 +02:00 [DBG] Start discovery request
2019-04-28 12:59:16.750 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 12:59:16.751 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:59:16.751 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:59:16.753 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 12:59:16.763 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 12:59:16.763 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 12:59:16.782 +02:00 [DBG] Start token request.
2019-04-28 12:59:16.800 +02:00 [DBG] Start client validation
2019-04-28 12:59:16.814 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 12:59:16.823 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 12:59:16.832 +02:00 [DBG] client id without secret found
2019-04-28 12:59:16.833 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 12:59:16.833 +02:00 [DBG] Secret id found: frontStore
2019-04-28 12:59:16.833 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:59:16.833 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 12:59:16.833 +02:00 [DBG] Client validation success
2019-04-28 12:59:16.834 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBP21E0UF4:00000008","TimeStamp":"2019-04-28T10:59:16.0000000Z","ProcessId":83208,"LocalIpAddress":"127.0.0.1:24457","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 12:59:16.844 +02:00 [DBG] Start token request validation
2019-04-28 12:59:16.863 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 12:59:16.885 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 12:59:17.179 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 12:59:17.182 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"6a3d32d55af636303c1d475f31fb4e2ee59dd0e2e28d9ae4c28e3c08fb103014","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"6a3d32d55af636303c1d475f31fb4e2ee59dd0e2e28d9ae4c28e3c08fb103014","redirect_uri":"http://localhost:8080/callback","code_verifier":"51f8df8fb9364838a912afd769516c28459a8d4f679349c4a200cf65ae6d848a5b30576187414a63b2a178c201309c17","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 12:59:17.207 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:59:17.222 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 12:59:17.224 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 12:59:17.659 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:59:17.666 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 12:59:17.666 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 12:59:17.671 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****mj5g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****zyGg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBP21E0UF4:00000008","TimeStamp":"2019-04-28T10:59:17.0000000Z","ProcessId":83208,"LocalIpAddress":"127.0.0.1:24457","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 12:59:17.672 +02:00 [DBG] Token request success.
2019-04-28 12:59:17.687 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 12:59:17.687 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:59:17.687 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:59:17.704 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 12:59:17.704 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:59:17.704 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:59:17.704 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 12:59:17.706 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 12:59:17.706 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 12:59:17.714 +02:00 [DBG] Start userinfo request
2019-04-28 12:59:17.719 +02:00 [DBG] Bearer token found in header
2019-04-28 12:59:17.734 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:59:17.734 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 12:59:17.970 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 12:59:17.970 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556449157,"exp":1556449247,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556405684,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 12:59:17.977 +02:00 [DBG] Creating userinfo response
2019-04-28 12:59:17.979 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 12:59:17.982 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 12:59:17.989 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 12:59:17.989 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 12:59:18.245 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 12:59:18.245 +02:00 [DBG] End userinfo request
2019-04-28 12:59:18.278 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 12:59:18.279 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 12:59:18.279 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 12:59:18.281 +02:00 [DBG] Rendering check session result
2019-04-28 12:59:19.015 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 12:59:19.015 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 12:59:19.015 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 12:59:19.016 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:59:19.016 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:59:19.016 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:59:19.016 +02:00 [DBG] Start discovery request
2019-04-28 12:59:19.175 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 12:59:19.175 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 12:59:19.176 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 12:59:19.176 +02:00 [DBG] Rendering check session result
2019-04-28 12:59:50.594 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-04-28 12:59:50.595 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-04-28 12:59:50.595 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-04-28 12:59:50.595 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 12:59:50.596 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 12:59:50.597 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 12:59:50.597 +02:00 [DBG] Start discovery request
2019-04-28 13:00:47.985 +02:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-28 13:00:47.986 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-28 13:00:47.986 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-28 13:00:47.986 +02:00 [DBG] Processing signout request for de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:00:47.986 +02:00 [DBG] Start end session request validation
2019-04-28 13:00:47.986 +02:00 [DBG] Start identity token validation
2019-04-28 13:00:47.986 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:00:47.986 +02:00 [DBG] Client found: frontStore / Front Store Client
2019-04-28 13:00:48.248 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 13:00:48.248 +02:00 [DBG] Token validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556449157,"exp":1556449187,"iss":"http://localhost:5000","aud":"frontStore","iat":1556449157,"at_hash":"PUG7vFXgHj_BslsnIDKaEA","sid":"9e269bd464a2be615b55761f96387466","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556405684,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 13:00:48.249 +02:00 [INF] End session request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","PostLogOutUri":"http://localhost:8080","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjY4NjEzN2E5NzllNzI0MWY1MzczZmM2YWUzZWNiZTE5IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NTY0NDkxNTcsImV4cCI6MTU1NjQ0OTE4NywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoiZnJvbnRTdG9yZSIsImlhdCI6MTU1NjQ0OTE1NywiYXRfaGFzaCI6IlBVRzd2RlhnSGpfQnNsc25JREthRUEiLCJzaWQiOiI5ZTI2OWJkNDY0YTJiZTYxNWI1NTc2MWY5NjM4NzQ2NiIsInN1YiI6ImRlM2YyNWM4LTI0NmMtNDA2MS1iZmE2LTg2YzY2OTgxNzJmZSIsImF1dGhfdGltZSI6MTU1NjQwNTY4NCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.if5NQNF0y8FzwwYzFEQHEXrQbbAOymYUj-WdCRlcsed-kfSaj15IgOjoTn109lTdETEnqFyio8J4jkzCc3cGBID60qHM1CQayhpTsT6q4HROoX0POYCtPGXOiqQwQuBXWLypCF1kvjKdBI6kHdjLMWnx8bFzeqoMfq9JOXZmNPgu6n2GPlbfvmPHIO5SZQ8OEHXFVhHxaCk775fW71s7JjSui1oh3mbBVhR8D72PCzMYBr5TFD5ZgIlyvdEptm_7wqM0-PZV7-Da-FVDz3F2MZi9vymDVJyHWmevxX32TMmuxHdL7WiDIRTXOr2sG4k-gnkVNg_MJdc7A5_UFBmj5g","post_logout_redirect_uri":"http://localhost:8080"},"$type":"EndSessionRequestValidationLog"}
2019-04-28 13:00:48.249 +02:00 [DBG] Success validating end session request from frontStore
2019-04-28 13:00:48.326 +02:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-28 13:00:48.328 +02:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-28 13:00:48.328 +02:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-28 13:00:48.329 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLMBP21E0UF3:0000000C","TimeStamp":"2019-04-28T11:00:48.0000000Z","ProcessId":83208,"LocalIpAddress":"127.0.0.1:24457","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-28 13:00:48.532 +02:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-28 13:00:48.535 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-28 13:00:48.536 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-28 13:00:48.542 +02:00 [DBG] Processing signout callback request
2019-04-28 13:00:48.562 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:00:48.562 +02:00 [DBG] No client front-channel logout URLs
2019-04-28 13:00:48.562 +02:00 [DBG] No client back-channel logout URLs
2019-04-28 13:00:48.563 +02:00 [INF] Successful signout callback.
2019-04-28 13:00:48.563 +02:00 [DBG] No client front-channel iframe urls
2019-04-28 13:00:48.563 +02:00 [DBG] No client back-channel iframe urls
2019-04-28 13:03:57.675 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-28 13:03:57.702 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-28 13:03:57.705 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-28 13:03:57.705 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-28 13:03:57.705 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-28 13:03:57.705 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-28 13:03:57.705 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-28 13:03:58.114 +02:00 [DBG] Login Url: /Account/Login
2019-04-28 13:03:58.116 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-28 13:03:58.116 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-28 13:03:58.116 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-28 13:03:58.116 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-28 13:03:58.116 +02:00 [DBG] Error Url: /home/error
2019-04-28 13:03:58.116 +02:00 [DBG] Error Id Parameter: errorId
2019-04-28 13:03:58.134 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:03:58.181 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:03:58.181 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:03:58.184 +02:00 [DBG] Start discovery request
2019-04-28 13:05:07.624 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:05:07.634 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:05:07.634 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:05:07.636 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:05:07.645 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:05:07.645 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:05:07.645 +02:00 [DBG] Start discovery request
2019-04-28 13:05:07.686 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 13:05:07.697 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 13:05:07.698 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 13:05:07.707 +02:00 [DBG] Start authorize request
2019-04-28 13:05:07.714 +02:00 [DBG] No user present in authorize request
2019-04-28 13:05:07.721 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:05:07.735 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:07.740 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:05:07.777 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:05:07.792 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"50ad21be60e44424b7a662f9c7f067ea","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"50ad21be60e44424b7a662f9c7f067ea","code_challenge":"qUg--2xPyRx7NGUBloE0FjD6FXb4uVGYytHZf4qXjzk","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:05:07.811 +02:00 [INF] Showing login: User is not authenticated
2019-04-28 13:05:07.923 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:05:07.923 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:07.923 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:05:07.924 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:05:07.926 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:13.276 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 13:05:13.361 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:05:13.361 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:13.362 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:05:13.362 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:05:13.381 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:13.690 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-28 13:05:13.693 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-28 13:05:13.694 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-28 13:05:13.703 +02:00 [DBG] Start authorize callback request
2019-04-28 13:05:13.715 +02:00 [DBG] No user present in authorize request
2019-04-28 13:05:13.715 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:05:13.715 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:13.716 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:05:13.717 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:05:13.717 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"50ad21be60e44424b7a662f9c7f067ea","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"50ad21be60e44424b7a662f9c7f067ea","code_challenge":"qUg--2xPyRx7NGUBloE0FjD6FXb4uVGYytHZf4qXjzk","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:05:13.718 +02:00 [INF] Error: User denied consent
2019-04-28 13:05:13.724 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"50ad21be60e44424b7a662f9c7f067ea","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"50ad21be60e44424b7a662f9c7f067ea","code_challenge":"qUg--2xPyRx7NGUBloE0FjD6FXb4uVGYytHZf4qXjzk","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:05:13.742 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLMBP4R5KBG9:00000004","TimeStamp":"2019-04-28T11:05:13.0000000Z","ProcessId":74100,"LocalIpAddress":"127.0.0.1:7378","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-04-28 13:05:23.061 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:05:23.061 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:05:23.061 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:05:23.061 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:05:23.062 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:05:23.062 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:05:23.062 +02:00 [DBG] Start discovery request
2019-04-28 13:05:23.108 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 13:05:23.109 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 13:05:23.109 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 13:05:23.109 +02:00 [DBG] Start authorize request
2019-04-28 13:05:23.109 +02:00 [DBG] No user present in authorize request
2019-04-28 13:05:23.109 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:05:23.109 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:23.109 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:05:23.110 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:05:23.110 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"eeef9b47a8714cf9a3255cd9d29ad07d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"eeef9b47a8714cf9a3255cd9d29ad07d","code_challenge":"vqifFZaZL9rx5irir46VXx5y6B_gxk5qvEoIANlAQbo","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:05:23.110 +02:00 [INF] Showing login: User is not authenticated
2019-04-28 13:05:23.144 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:05:23.145 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:23.145 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:05:23.145 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:05:23.145 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:28.999 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 13:05:29.001 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:05:29.001 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:29.001 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:05:29.002 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:05:29.763 +02:00 [DBG] Augmenting SignInContext
2019-04-28 13:05:29.766 +02:00 [DBG] Adding idp claim with value: local
2019-04-28 13:05:29.766 +02:00 [DBG] Adding amr claim with value: pwd
2019-04-28 13:05:29.767 +02:00 [DBG] Adding auth_time claim with value: 1556449529
2019-04-28 13:05:29.775 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-28 13:05:29.782 +02:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLMBP4R5KBG9:00000006","TimeStamp":"2019-04-28T11:05:29.0000000Z","ProcessId":74100,"LocalIpAddress":"127.0.0.1:7378","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-28 13:05:29.783 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:29.801 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-28 13:05:29.801 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-28 13:05:29.801 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-28 13:05:29.802 +02:00 [DBG] Start authorize callback request
2019-04-28 13:05:29.802 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:05:29.802 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:05:29.802 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:29.802 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:05:29.802 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:05:29.802 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"eeef9b47a8714cf9a3255cd9d29ad07d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2b9f736e187aacbf93aa1fea8c08fa29","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"eeef9b47a8714cf9a3255cd9d29ad07d","code_challenge":"vqifFZaZL9rx5irir46VXx5y6B_gxk5qvEoIANlAQbo","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:05:29.848 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-28 13:05:29.848 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-28 13:05:29.848 +02:00 [INF] Showing consent: User has not yet consented
2019-04-28 13:05:29.869 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:05:29.870 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:29.870 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:05:29.870 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:05:29.870 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:31.752 +02:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 13:05:31.778 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:05:31.779 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:31.779 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:05:31.780 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:05:31.782 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RequestedScopes":["openid","profile","api1"],"GrantedScopes":["openid","profile","api1"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLMBP4R5KBGB:0000000A","TimeStamp":"2019-04-28T11:05:31.0000000Z","ProcessId":74100,"LocalIpAddress":"127.0.0.1:7378","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-04-28 13:05:31.784 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:32.073 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-28 13:05:32.074 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-28 13:05:32.075 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-28 13:05:32.075 +02:00 [DBG] Start authorize callback request
2019-04-28 13:05:32.080 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:05:32.080 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:05:32.081 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:32.081 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:05:32.081 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:05:32.081 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"eeef9b47a8714cf9a3255cd9d29ad07d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2b9f736e187aacbf93aa1fea8c08fa29","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"eeef9b47a8714cf9a3255cd9d29ad07d","code_challenge":"vqifFZaZL9rx5irir46VXx5y6B_gxk5qvEoIANlAQbo","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:05:32.095 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-28 13:05:32.095 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-28 13:05:32.107 +02:00 [INF] User consented to scopes: ["openid","profile","api1"]
2019-04-28 13:05:32.110 +02:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1"]
2019-04-28 13:05:32.116 +02:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:05:32.144 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 13:05:32.178 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****d13b","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBP4R5KBG9:0000000A","TimeStamp":"2019-04-28T11:05:32.0000000Z","ProcessId":74100,"LocalIpAddress":"127.0.0.1:7378","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:05:32.180 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"eeef9b47a8714cf9a3255cd9d29ad07d","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 13:05:32.202 +02:00 [DBG] Augmenting SignInContext
2019-04-28 13:05:32.203 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-28 13:05:33.165 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:05:33.165 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:05:33.165 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:05:33.166 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:05:33.166 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:05:33.166 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:05:33.166 +02:00 [DBG] Start discovery request
2019-04-28 13:05:33.287 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 13:05:33.287 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:05:33.287 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:05:33.288 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 13:05:33.293 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 13:05:33.293 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 13:05:33.306 +02:00 [DBG] Start token request.
2019-04-28 13:05:33.319 +02:00 [DBG] Start client validation
2019-04-28 13:05:33.326 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 13:05:33.333 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 13:05:33.334 +02:00 [DBG] client id without secret found
2019-04-28 13:05:33.335 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 13:05:33.335 +02:00 [DBG] Secret id found: frontStore
2019-04-28 13:05:33.335 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:33.335 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 13:05:33.335 +02:00 [DBG] Client validation success
2019-04-28 13:05:33.336 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBP4R5KBG8:0000000F","TimeStamp":"2019-04-28T11:05:33.0000000Z","ProcessId":74100,"LocalIpAddress":"127.0.0.1:7378","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 13:05:33.351 +02:00 [DBG] Start token request validation
2019-04-28 13:05:33.371 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 13:05:33.403 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 13:05:33.415 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 13:05:33.420 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"3a26a6c5a4f3f8bdabfdfef87235c18b7a43813c0eead4101e1beb31afe8d13b","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"3a26a6c5a4f3f8bdabfdfef87235c18b7a43813c0eead4101e1beb31afe8d13b","redirect_uri":"http://localhost:8080/callback","code_verifier":"1d5a7d4848114793b34af553fe036dc3a589900360e1429dafb8862301cf0dfeadc8b18c0a24428b8091e79147b00d42","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 13:05:33.438 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:33.448 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 13:05:33.449 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:05:33.534 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:33.541 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 13:05:33.542 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 13:05:33.547 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****znIw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vT5A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBP4R5KBG8:0000000F","TimeStamp":"2019-04-28T11:05:33.0000000Z","ProcessId":74100,"LocalIpAddress":"127.0.0.1:7378","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:05:33.548 +02:00 [DBG] Token request success.
2019-04-28 13:05:33.560 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:05:33.561 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:05:33.561 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:05:33.567 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:05:33.567 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:05:33.567 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:05:33.567 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 13:05:33.568 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 13:05:33.568 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 13:05:33.574 +02:00 [DBG] Start userinfo request
2019-04-28 13:05:33.578 +02:00 [DBG] Bearer token found in header
2019-04-28 13:05:33.658 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:33.663 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:05:33.697 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 13:05:33.699 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556449533,"exp":1556449623,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556449529,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 13:05:33.710 +02:00 [DBG] Creating userinfo response
2019-04-28 13:05:33.716 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:05:33.721 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:05:33.724 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 13:05:33.724 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:05:33.739 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 13:05:33.739 +02:00 [DBG] End userinfo request
2019-04-28 13:05:33.758 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:05:33.758 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:05:33.759 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:05:33.761 +02:00 [DBG] Rendering check session result
2019-04-28 13:05:34.626 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:05:34.626 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:05:34.626 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:05:34.626 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:05:34.627 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:05:34.627 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:05:34.627 +02:00 [DBG] Start discovery request
2019-04-28 13:05:34.804 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:05:34.805 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:05:34.805 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:05:34.805 +02:00 [DBG] Rendering check session result
2019-04-28 13:05:45.569 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:05:45.570 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:05:45.571 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:05:45.571 +02:00 [DBG] Start discovery request
2019-04-28 13:05:45.686 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-28 13:05:45.686 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-28 13:05:45.686 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-28 13:05:45.691 +02:00 [DBG] Start key discovery request
2019-04-28 13:06:03.596 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:06:03.596 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:06:03.597 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:06:03.597 +02:00 [DBG] Start discovery request
2019-04-28 13:06:03.708 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-28 13:06:03.709 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-28 13:06:03.709 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-28 13:06:03.709 +02:00 [DBG] Start key discovery request
2019-04-28 13:06:23.110 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:06:23.110 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:06:23.110 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:06:23.110 +02:00 [DBG] Start discovery request
2019-04-28 13:06:42.841 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:06:42.841 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:06:42.841 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:06:42.841 +02:00 [DBG] Start discovery request
2019-04-28 13:06:49.091 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-28 13:06:49.091 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-28 13:06:49.091 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-28 13:06:49.091 +02:00 [DBG] Start key discovery request
2019-04-28 13:06:56.441 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:06:56.441 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:06:56.441 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:06:56.441 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:06:56.441 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:06:56.441 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:06:56.441 +02:00 [DBG] Start discovery request
2019-04-28 13:06:56.634 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:06:56.634 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:06:56.635 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:06:56.637 +02:00 [DBG] Rendering check session result
2019-04-28 13:07:48.965 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-04-28 13:07:48.978 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-04-28 13:07:48.979 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-04-28 13:07:48.991 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:07:48.998 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:07:48.998 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:07:48.998 +02:00 [DBG] Start discovery request
2019-04-28 13:10:20.752 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-28 13:10:20.830 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-28 13:10:20.835 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-28 13:10:20.835 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-28 13:10:20.835 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-28 13:10:20.835 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-28 13:10:20.835 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-28 13:10:22.248 +02:00 [DBG] Login Url: /Account/Login
2019-04-28 13:10:22.254 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-28 13:10:22.255 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-28 13:10:22.255 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-28 13:10:22.255 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-28 13:10:22.255 +02:00 [DBG] Error Url: /home/error
2019-04-28 13:10:22.255 +02:00 [DBG] Error Id Parameter: errorId
2019-04-28 13:10:28.377 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:10:28.382 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:10:28.383 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:10:28.386 +02:00 [DBG] Start discovery request
2019-04-28 13:10:28.603 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-28 13:10:28.604 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-28 13:10:28.604 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-28 13:10:28.609 +02:00 [DBG] Start key discovery request
2019-04-28 13:14:39.519 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-28 13:14:39.577 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-28 13:14:39.582 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-28 13:14:39.582 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-28 13:14:39.582 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-28 13:14:39.582 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-28 13:14:39.582 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-28 13:14:40.274 +02:00 [DBG] Login Url: /Account/Login
2019-04-28 13:14:40.278 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-28 13:14:40.278 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-28 13:14:40.278 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-28 13:14:40.278 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-28 13:14:40.278 +02:00 [DBG] Error Url: /home/error
2019-04-28 13:14:40.278 +02:00 [DBG] Error Id Parameter: errorId
2019-04-28 13:14:46.455 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:14:46.461 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:14:46.461 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:14:46.466 +02:00 [DBG] Start discovery request
2019-04-28 13:14:46.612 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-28 13:14:46.613 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-28 13:14:46.613 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-28 13:14:46.616 +02:00 [DBG] Start key discovery request
2019-04-28 13:19:05.453 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:19:05.459 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:19:05.459 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:19:05.462 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:19:05.464 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:19:05.464 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:19:05.464 +02:00 [DBG] Start discovery request
2019-04-28 13:19:05.758 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:19:05.759 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:19:05.759 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:19:05.761 +02:00 [DBG] Rendering check session result
2019-04-28 13:19:22.016 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 13:19:22.019 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 13:19:22.019 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 13:19:22.023 +02:00 [DBG] Start authorize request
2019-04-28 13:19:22.033 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:19:22.038 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:19:22.053 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:19:22.058 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:19:22.085 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:19:22.098 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"a2e7bf76734240e7a49fac4be2bc6648","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2b9f736e187aacbf93aa1fea8c08fa29","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"a2e7bf76734240e7a49fac4be2bc6648","code_challenge":"JJ_V_gfwRfHNM0d4n5SNYx6In3wDNqrVFF6GXREK_uM","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:19:22.959 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-28 13:19:22.959 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-28 13:19:22.959 +02:00 [INF] Showing consent: User has not yet consented
2019-04-28 13:19:23.054 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:19:23.055 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:19:23.055 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:19:23.056 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:19:23.058 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:19:25.068 +02:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 13:19:25.134 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:19:25.135 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:19:25.135 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:19:25.135 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:19:25.157 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RequestedScopes":["openid","profile","api1"],"GrantedScopes":["openid","profile","api1"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLMBPAQFK7SJ:00000002","TimeStamp":"2019-04-28T11:19:25.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-04-28 13:19:25.176 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:19:25.527 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-28 13:19:25.529 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-28 13:19:25.529 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-28 13:19:25.543 +02:00 [DBG] Start authorize callback request
2019-04-28 13:19:25.559 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:19:25.559 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:19:25.560 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:19:25.561 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:19:25.561 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:19:25.561 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"a2e7bf76734240e7a49fac4be2bc6648","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2b9f736e187aacbf93aa1fea8c08fa29","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"a2e7bf76734240e7a49fac4be2bc6648","code_challenge":"JJ_V_gfwRfHNM0d4n5SNYx6In3wDNqrVFF6GXREK_uM","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:19:25.610 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-28 13:19:25.610 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-28 13:19:25.620 +02:00 [INF] User consented to scopes: ["openid","profile","api1"]
2019-04-28 13:19:25.625 +02:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1"]
2019-04-28 13:19:25.632 +02:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:19:25.661 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 13:19:25.695 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****61c3","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBPAQFK7SJ:00000004","TimeStamp":"2019-04-28T11:19:25.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:19:25.701 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"a2e7bf76734240e7a49fac4be2bc6648","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 13:19:26.797 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:19:26.799 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:19:26.799 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:19:26.797 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:19:26.799 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:19:26.799 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:19:26.799 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:19:26.799 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:19:26.800 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:19:26.800 +02:00 [DBG] Start discovery request
2019-04-28 13:19:26.800 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:19:26.800 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:19:26.800 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:19:26.800 +02:00 [DBG] Start discovery request
2019-04-28 13:19:26.939 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 13:19:26.940 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:19:26.942 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:19:26.943 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 13:19:26.955 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:19:26.955 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:19:26.955 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:19:26.955 +02:00 [DBG] Rendering check session result
2019-04-28 13:19:26.958 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 13:19:26.958 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 13:19:27.002 +02:00 [DBG] Start token request.
2019-04-28 13:19:27.156 +02:00 [DBG] Start client validation
2019-04-28 13:19:27.168 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 13:19:27.177 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 13:19:27.193 +02:00 [DBG] client id without secret found
2019-04-28 13:19:27.194 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 13:19:27.195 +02:00 [DBG] Secret id found: frontStore
2019-04-28 13:19:27.195 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:19:27.195 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 13:19:27.195 +02:00 [DBG] Client validation success
2019-04-28 13:19:27.197 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBPAQFK7SK:00000005","TimeStamp":"2019-04-28T11:19:27.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 13:19:27.213 +02:00 [DBG] Start token request validation
2019-04-28 13:19:27.239 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 13:19:27.263 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 13:19:27.278 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 13:19:27.290 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"3ca9815ef7ca3d81739f4a7ecef8b7047cb5dd3c3d4126a3e8a7d4f3915261c3","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"3ca9815ef7ca3d81739f4a7ecef8b7047cb5dd3c3d4126a3e8a7d4f3915261c3","redirect_uri":"http://localhost:8080/callback","code_verifier":"c9a37239578942628caf0ac84ad919a9b9583d6ea69d4adda1502dd539b2da823599953139d74968a6bf88071f42f79b","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 13:19:27.318 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:19:27.333 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 13:19:27.334 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:19:27.764 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:19:27.775 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 13:19:27.775 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 13:19:27.782 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****128Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****sM3Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBPAQFK7SK:00000005","TimeStamp":"2019-04-28T11:19:27.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:19:27.783 +02:00 [DBG] Token request success.
2019-04-28 13:19:27.804 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:19:27.804 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:19:27.805 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:19:27.812 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:19:27.812 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:19:27.812 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:19:27.812 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 13:19:27.816 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 13:19:27.816 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 13:19:27.828 +02:00 [DBG] Start userinfo request
2019-04-28 13:19:27.832 +02:00 [DBG] Bearer token found in header
2019-04-28 13:19:27.891 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:19:27.894 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:19:27.901 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 13:19:27.902 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556450367,"exp":1556450457,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556449529,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 13:19:27.911 +02:00 [DBG] Creating userinfo response
2019-04-28 13:19:27.915 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:19:27.917 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:19:27.952 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 13:19:27.952 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:19:27.981 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 13:19:27.982 +02:00 [DBG] End userinfo request
2019-04-28 13:19:28.000 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:19:28.000 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:19:28.000 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:19:28.000 +02:00 [DBG] Rendering check session result
2019-04-28 13:19:28.925 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:19:28.925 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:19:28.925 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:19:28.925 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:19:28.926 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:19:28.926 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:19:28.926 +02:00 [DBG] Start discovery request
2019-04-28 13:19:29.123 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:19:29.123 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:19:29.123 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:19:29.123 +02:00 [DBG] Rendering check session result
2019-04-28 13:20:58.375 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-04-28 13:20:58.377 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-04-28 13:20:58.389 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-04-28 13:20:58.397 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:20:58.403 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:20:58.403 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:20:58.403 +02:00 [DBG] Start discovery request
2019-04-28 13:21:36.080 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:21:36.080 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:21:36.080 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:21:36.080 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:21:36.081 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:21:36.081 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:21:36.081 +02:00 [DBG] Start discovery request
2019-04-28 13:21:36.440 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:21:36.441 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:21:36.441 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:21:36.441 +02:00 [DBG] Rendering check session result
2019-04-28 13:21:38.217 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 13:21:38.218 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 13:21:38.218 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 13:21:38.218 +02:00 [DBG] Start authorize request
2019-04-28 13:21:38.218 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:21:38.218 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:21:38.218 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:21:38.218 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:21:38.218 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:21:38.219 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"89887a3093b9445d9b214a715f2cc71c","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2b9f736e187aacbf93aa1fea8c08fa29","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"89887a3093b9445d9b214a715f2cc71c","code_challenge":"w5IgT1WXYPQqj9BctzFzmi3g69nEhk0b_kPvfnw_lvc","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:21:38.256 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 13:21:38.256 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 13:21:38.272 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****b54d","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBPAQFK7SL:00000004","TimeStamp":"2019-04-28T11:21:38.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:21:38.273 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"89887a3093b9445d9b214a715f2cc71c","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 13:21:39.018 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:21:39.018 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:21:39.018 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:21:39.018 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:21:39.031 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:21:39.031 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:21:39.031 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:21:39.032 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:21:39.032 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:21:39.032 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:21:39.038 +02:00 [DBG] Start discovery request
2019-04-28 13:21:39.040 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:21:39.041 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:21:39.041 +02:00 [DBG] Start discovery request
2019-04-28 13:21:39.166 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 13:21:39.166 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:21:39.166 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:21:39.167 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:21:39.167 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 13:21:39.167 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:21:39.167 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:21:39.167 +02:00 [DBG] Rendering check session result
2019-04-28 13:21:39.167 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 13:21:39.168 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 13:21:39.168 +02:00 [DBG] Start token request.
2019-04-28 13:21:39.168 +02:00 [DBG] Start client validation
2019-04-28 13:21:39.168 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 13:21:39.168 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 13:21:39.168 +02:00 [DBG] client id without secret found
2019-04-28 13:21:39.168 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 13:21:39.168 +02:00 [DBG] Secret id found: frontStore
2019-04-28 13:21:39.169 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:21:39.169 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 13:21:39.169 +02:00 [DBG] Client validation success
2019-04-28 13:21:39.169 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBPAQFK7SM:00000002","TimeStamp":"2019-04-28T11:21:39.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 13:21:39.169 +02:00 [DBG] Start token request validation
2019-04-28 13:21:39.169 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 13:21:39.184 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 13:21:39.196 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 13:21:39.196 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"6d6e464f55744a8b3047c9e63154ebf55395e50dc7a843d3d15b2a83b9f5b54d","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"6d6e464f55744a8b3047c9e63154ebf55395e50dc7a843d3d15b2a83b9f5b54d","redirect_uri":"http://localhost:8080/callback","code_verifier":"45a9e0d024c544739420d468cc82fd1be8bb3dfd01b644878770e63c322be57c72e4fc7fe6194fb69e08a26756724af6","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 13:21:39.197 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:21:39.197 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 13:21:39.197 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:21:39.257 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:21:39.258 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 13:21:39.258 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 13:21:39.262 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****s1cw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****0YtQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBPAQFK7SM:00000002","TimeStamp":"2019-04-28T11:21:39.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:21:39.262 +02:00 [DBG] Token request success.
2019-04-28 13:21:39.294 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:21:39.295 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:21:39.295 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:21:39.446 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:21:39.446 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:21:39.446 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:21:39.447 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 13:21:39.447 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 13:21:39.447 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 13:21:39.447 +02:00 [DBG] Start userinfo request
2019-04-28 13:21:39.447 +02:00 [DBG] Bearer token found in header
2019-04-28 13:21:39.450 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:21:39.450 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:21:39.462 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 13:21:39.470 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556450499,"exp":1556450589,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556449529,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 13:21:39.470 +02:00 [DBG] Creating userinfo response
2019-04-28 13:21:39.470 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:21:39.471 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:21:39.471 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 13:21:39.471 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:21:39.477 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 13:21:39.478 +02:00 [DBG] End userinfo request
2019-04-28 13:21:39.538 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:21:39.538 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:21:39.538 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:21:39.538 +02:00 [DBG] Rendering check session result
2019-04-28 13:21:40.730 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:21:40.731 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:21:40.731 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:21:40.731 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:21:40.732 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:21:40.732 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:21:40.732 +02:00 [DBG] Start discovery request
2019-04-28 13:21:40.905 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:21:40.905 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:21:40.905 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:21:40.906 +02:00 [DBG] Rendering check session result
2019-04-28 13:25:12.167 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:25:12.168 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:25:12.168 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:25:12.168 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:25:12.169 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:25:12.170 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:25:12.170 +02:00 [DBG] Start discovery request
2019-04-28 13:25:12.388 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:25:12.388 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:25:12.388 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:25:12.388 +02:00 [DBG] Rendering check session result
2019-04-28 13:25:20.412 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 13:25:20.412 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 13:25:20.412 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 13:25:20.412 +02:00 [DBG] Start authorize request
2019-04-28 13:25:20.413 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:25:20.413 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:25:20.414 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:25:20.414 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:25:20.415 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:25:20.416 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"d54cdd54573d41d99560e8641844cc1e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2b9f736e187aacbf93aa1fea8c08fa29","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"d54cdd54573d41d99560e8641844cc1e","code_challenge":"Higa_jtXTq7MO3bAd-tiSUzwDh_TuXMJuhZWeAtNOUc","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:25:20.430 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 13:25:20.430 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 13:25:20.442 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****a58e","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBPAQFK7SN:00000003","TimeStamp":"2019-04-28T11:25:20.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:25:20.442 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"d54cdd54573d41d99560e8641844cc1e","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 13:25:21.445 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:25:21.453 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:25:21.453 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:25:21.453 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:25:21.453 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:25:21.453 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:25:21.453 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:25:21.453 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:25:21.453 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:25:21.453 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:25:21.454 +02:00 [DBG] Start discovery request
2019-04-28 13:25:21.453 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:25:21.454 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:25:21.454 +02:00 [DBG] Start discovery request
2019-04-28 13:25:21.581 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 13:25:21.581 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:25:21.581 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:25:21.582 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 13:25:21.582 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 13:25:21.582 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 13:25:21.582 +02:00 [DBG] Start token request.
2019-04-28 13:25:21.582 +02:00 [DBG] Start client validation
2019-04-28 13:25:21.583 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 13:25:21.583 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 13:25:21.584 +02:00 [DBG] client id without secret found
2019-04-28 13:25:21.584 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 13:25:21.584 +02:00 [DBG] Secret id found: frontStore
2019-04-28 13:25:21.584 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:25:21.585 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 13:25:21.585 +02:00 [DBG] Client validation success
2019-04-28 13:25:21.596 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBPAQFK7SO:00000002","TimeStamp":"2019-04-28T11:25:21.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 13:25:21.598 +02:00 [DBG] Start token request validation
2019-04-28 13:25:21.598 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 13:25:21.622 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 13:25:21.653 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:25:21.653 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 13:25:21.653 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:25:21.653 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:25:21.653 +02:00 [DBG] Rendering check session result
2019-04-28 13:25:21.654 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"2c3099e127b318a4a003ebe02dfc788e860bf368305c5253b69fe76787b9a58e","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"2c3099e127b318a4a003ebe02dfc788e860bf368305c5253b69fe76787b9a58e","redirect_uri":"http://localhost:8080/callback","code_verifier":"78985a5dc25a4c64a0e8672589a6a0b40ec4a638a44f40f4a7030fe127c3c5d2f06639cae99a470f90546fa589221b70","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 13:25:21.654 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:25:21.654 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 13:25:21.654 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:25:21.708 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:25:21.708 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 13:25:21.708 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 13:25:21.712 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****PnoQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****zGaw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBPAQFK7SO:00000002","TimeStamp":"2019-04-28T11:25:21.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:25:21.712 +02:00 [DBG] Token request success.
2019-04-28 13:25:21.729 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:25:21.729 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:25:21.729 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:25:21.840 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:25:21.840 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:25:21.840 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:25:21.841 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 13:25:21.842 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 13:25:21.842 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 13:25:21.842 +02:00 [DBG] Start userinfo request
2019-04-28 13:25:21.843 +02:00 [DBG] Bearer token found in header
2019-04-28 13:25:21.845 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:25:21.845 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:25:21.852 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 13:25:21.852 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556450721,"exp":1556450811,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556449529,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 13:25:21.852 +02:00 [DBG] Creating userinfo response
2019-04-28 13:25:21.853 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:25:21.853 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:25:21.853 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 13:25:21.853 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:25:21.859 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 13:25:21.859 +02:00 [DBG] End userinfo request
2019-04-28 13:25:21.899 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:25:21.899 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:25:21.899 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:25:21.899 +02:00 [DBG] Rendering check session result
2019-04-28 13:25:23.146 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:25:23.147 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:25:23.147 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:25:23.147 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:25:23.147 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:25:23.147 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:25:23.148 +02:00 [DBG] Start discovery request
2019-04-28 13:25:23.338 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:25:23.338 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:25:23.338 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:25:23.338 +02:00 [DBG] Rendering check session result
2019-04-28 13:26:40.478 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:26:40.478 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:26:40.478 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:26:40.478 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:26:40.478 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:26:40.479 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:26:40.479 +02:00 [DBG] Start discovery request
2019-04-28 13:26:40.790 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:26:40.790 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:26:40.790 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:26:40.791 +02:00 [DBG] Rendering check session result
2019-04-28 13:26:42.820 +02:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-28 13:26:42.821 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-28 13:26:42.821 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-28 13:26:42.826 +02:00 [DBG] Processing signout request for de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:26:42.834 +02:00 [DBG] Start end session request validation
2019-04-28 13:26:42.839 +02:00 [DBG] Start identity token validation
2019-04-28 13:26:42.841 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:26:42.841 +02:00 [DBG] Client found: frontStore / Front Store Client
2019-04-28 13:26:43.095 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 13:26:43.095 +02:00 [DBG] Token validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556450721,"exp":1556450751,"iss":"http://localhost:5000","aud":"frontStore","iat":1556450721,"at_hash":"1HWiVCEnsi0lBA-FTQtWKQ","sid":"2b9f736e187aacbf93aa1fea8c08fa29","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556449529,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 13:26:43.099 +02:00 [INF] End session request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","PostLogOutUri":"http://localhost:8080","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjY4NjEzN2E5NzllNzI0MWY1MzczZmM2YWUzZWNiZTE5IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NTY0NTA3MjEsImV4cCI6MTU1NjQ1MDc1MSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoiZnJvbnRTdG9yZSIsImlhdCI6MTU1NjQ1MDcyMSwiYXRfaGFzaCI6IjFIV2lWQ0Vuc2kwbEJBLUZUUXRXS1EiLCJzaWQiOiIyYjlmNzM2ZTE4N2FhY2JmOTNhYTFmZWE4YzA4ZmEyOSIsInN1YiI6ImRlM2YyNWM4LTI0NmMtNDA2MS1iZmE2LTg2YzY2OTgxNzJmZSIsImF1dGhfdGltZSI6MTU1NjQ0OTUyOSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.g0bvA-c3k7G3-PeRKm0xiwsjp_AoUsmLmo9yquTctm72J-5olaP6uZK9O2Em4mNpWMJIG27s2PpwWdyUVKUlNdxPp3svlKJHdE8mGs4QlzIxNVzUkgGmdzMd5vgswU_et-szCvhWhURWFfFDj7ALP5llANb4qvHtvA89BPBmDdi9sorfsaOmO8jUauWTY5IeZ1rTf6bHobrc3BU9QUSCIk7BSWxFuMgLJZgA91m-kZc_kJHCfWp7Cot9F8bNW_Mr3VwwBFXQ5j8Oqp2Ss0SPMlp-ZUvnhaZ09k9k5OqmyUeuMsTl-PmK-JdEfNsyY5bnOXc-955fe-WMQeYJKLPnoQ","post_logout_redirect_uri":"http://localhost:8080"},"$type":"EndSessionRequestValidationLog"}
2019-04-28 13:26:43.101 +02:00 [DBG] Success validating end session request from frontStore
2019-04-28 13:26:43.173 +02:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-28 13:26:43.174 +02:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-28 13:26:43.174 +02:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-28 13:26:43.175 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLMBPAQFK7SP:00000004","TimeStamp":"2019-04-28T11:26:43.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-28 13:26:43.417 +02:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-28 13:26:43.419 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-28 13:26:43.420 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-28 13:26:43.426 +02:00 [DBG] Processing signout callback request
2019-04-28 13:26:43.446 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:26:43.446 +02:00 [DBG] No client front-channel logout URLs
2019-04-28 13:26:43.446 +02:00 [DBG] No client back-channel logout URLs
2019-04-28 13:26:43.446 +02:00 [INF] Successful signout callback.
2019-04-28 13:26:43.446 +02:00 [DBG] No client front-channel iframe urls
2019-04-28 13:26:43.446 +02:00 [DBG] No client back-channel iframe urls
2019-04-28 13:27:09.454 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:27:09.454 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:27:09.455 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:27:09.455 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:27:09.455 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:27:09.455 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:27:09.455 +02:00 [DBG] Start discovery request
2019-04-28 13:27:09.491 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 13:27:09.491 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 13:27:09.491 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 13:27:09.491 +02:00 [DBG] Start authorize request
2019-04-28 13:27:09.492 +02:00 [DBG] No user present in authorize request
2019-04-28 13:27:09.492 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:27:09.492 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:27:09.492 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:27:09.493 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:27:09.493 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"4e8206dbdf1b419289280cc9b55db405","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"4e8206dbdf1b419289280cc9b55db405","code_challenge":"mAv5D1P75R5QyzlqPAZ0bxJptYLU067zE1PnEd71EvE","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:27:09.493 +02:00 [INF] Showing login: User is not authenticated
2019-04-28 13:27:09.522 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:27:09.522 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:27:09.522 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:27:09.523 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:27:09.525 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:27:15.655 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 13:27:15.674 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:27:15.675 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:27:15.675 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:27:15.675 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:27:16.023 +02:00 [DBG] Augmenting SignInContext
2019-04-28 13:27:16.025 +02:00 [DBG] Adding idp claim with value: local
2019-04-28 13:27:16.026 +02:00 [DBG] Adding amr claim with value: pwd
2019-04-28 13:27:16.026 +02:00 [DBG] Adding auth_time claim with value: 1556450836
2019-04-28 13:27:16.033 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-28 13:27:16.319 +02:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLMBPAQFK7SQ:00000004","TimeStamp":"2019-04-28T11:27:16.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-28 13:27:16.319 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:27:16.341 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-28 13:27:16.341 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-28 13:27:16.341 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-28 13:27:16.341 +02:00 [DBG] Start authorize callback request
2019-04-28 13:27:16.342 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:27:16.342 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:27:16.342 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:27:16.342 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:27:16.342 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:27:16.342 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"4e8206dbdf1b419289280cc9b55db405","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"4e8206dbdf1b419289280cc9b55db405","code_challenge":"mAv5D1P75R5QyzlqPAZ0bxJptYLU067zE1PnEd71EvE","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:27:16.676 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 13:27:16.676 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 13:27:16.682 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****7610","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBPAQFK7SS:00000005","TimeStamp":"2019-04-28T11:27:16.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:27:16.683 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"4e8206dbdf1b419289280cc9b55db405","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 13:27:16.688 +02:00 [DBG] Augmenting SignInContext
2019-04-28 13:27:16.688 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-28 13:27:17.886 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:27:17.886 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:27:17.887 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:27:17.887 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:27:17.887 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:27:17.887 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:27:17.887 +02:00 [DBG] Start discovery request
2019-04-28 13:27:18.024 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 13:27:18.024 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:27:18.025 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:27:18.025 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 13:27:18.025 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 13:27:18.025 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 13:27:18.025 +02:00 [DBG] Start token request.
2019-04-28 13:27:18.026 +02:00 [DBG] Start client validation
2019-04-28 13:27:18.026 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 13:27:18.026 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 13:27:18.027 +02:00 [DBG] client id without secret found
2019-04-28 13:27:18.027 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 13:27:18.027 +02:00 [DBG] Secret id found: frontStore
2019-04-28 13:27:18.028 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:27:18.028 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 13:27:18.028 +02:00 [DBG] Client validation success
2019-04-28 13:27:18.028 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBPAQFK7SP:0000000A","TimeStamp":"2019-04-28T11:27:18.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 13:27:18.029 +02:00 [DBG] Start token request validation
2019-04-28 13:27:18.029 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 13:27:18.051 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 13:27:18.336 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 13:27:18.336 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"e5f5e449f126f631ccb568ba2b5272b7f2574c4fc456ae3e44a8bed113837610","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"e5f5e449f126f631ccb568ba2b5272b7f2574c4fc456ae3e44a8bed113837610","redirect_uri":"http://localhost:8080/callback","code_verifier":"bc5bfef9a2e3491bb92718cb4363adb632ace9bdb9c74ca58c002d096ae38e8127d4f2b6aff94d9d907849cdf028f267","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 13:27:18.336 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:27:18.336 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 13:27:18.336 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:27:18.369 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:27:18.369 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 13:27:18.369 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 13:27:18.373 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****N0ug","$type":"Token"},{"TokenType":"access_token","TokenValue":"****5uHg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBPAQFK7SP:0000000A","TimeStamp":"2019-04-28T11:27:18.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:27:18.373 +02:00 [DBG] Token request success.
2019-04-28 13:27:18.386 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:27:18.386 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:27:18.386 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:27:18.400 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:27:18.400 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:27:18.400 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:27:18.400 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 13:27:18.401 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 13:27:18.401 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 13:27:18.401 +02:00 [DBG] Start userinfo request
2019-04-28 13:27:18.401 +02:00 [DBG] Bearer token found in header
2019-04-28 13:27:18.404 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:27:18.404 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:27:18.782 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 13:27:18.783 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556450838,"exp":1556450928,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 13:27:18.783 +02:00 [DBG] Creating userinfo response
2019-04-28 13:27:18.783 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:27:18.783 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:27:18.783 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 13:27:18.784 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:27:19.153 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 13:27:19.153 +02:00 [DBG] End userinfo request
2019-04-28 13:27:19.168 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:27:19.168 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:27:19.169 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:27:19.169 +02:00 [DBG] Rendering check session result
2019-04-28 13:27:20.272 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:27:20.272 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:27:20.272 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:27:20.272 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:27:20.273 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:27:20.273 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:27:20.273 +02:00 [DBG] Start discovery request
2019-04-28 13:27:20.442 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:27:20.442 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:27:20.442 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:27:20.442 +02:00 [DBG] Rendering check session result
2019-04-28 13:28:56.694 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-04-28 13:28:56.705 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-04-28 13:28:56.705 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-04-28 13:28:56.713 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:28:56.723 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:28:56.730 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:28:56.730 +02:00 [DBG] Start discovery request
2019-04-28 13:29:36.299 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:29:36.299 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:29:36.299 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:29:36.300 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:29:36.300 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:29:36.300 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:29:36.300 +02:00 [DBG] Start discovery request
2019-04-28 13:29:36.478 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:29:36.479 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:29:36.479 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:29:36.480 +02:00 [DBG] Rendering check session result
2019-04-28 13:30:46.026 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 13:30:46.030 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 13:30:46.030 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 13:30:46.030 +02:00 [DBG] Start authorize request
2019-04-28 13:30:46.030 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:30:46.031 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:30:46.031 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:30:46.031 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:30:46.031 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:30:46.031 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"cd8dc3c4d86143c5adb020fca668faea","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"cd8dc3c4d86143c5adb020fca668faea","code_challenge":"ym3iCTH0pYv7A0iWcsA4FtI7ld3rCl9MBiq4biHb350","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:30:46.335 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 13:30:46.335 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 13:30:46.342 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****5355","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBPAQFK7SU:00000001","TimeStamp":"2019-04-28T11:30:46.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:30:46.342 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"cd8dc3c4d86143c5adb020fca668faea","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 13:30:47.383 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:30:47.383 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:30:47.397 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:30:47.397 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:30:47.397 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:30:47.397 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:30:47.398 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:30:47.398 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:30:47.398 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:30:47.398 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:30:47.399 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:30:47.398 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:30:47.399 +02:00 [DBG] Start discovery request
2019-04-28 13:30:47.399 +02:00 [DBG] Start discovery request
2019-04-28 13:30:47.528 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 13:30:47.529 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:30:47.529 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:30:47.529 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:30:47.529 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:30:47.529 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:30:47.529 +02:00 [DBG] Rendering check session result
2019-04-28 13:30:47.529 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 13:30:47.530 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 13:30:47.530 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 13:30:47.530 +02:00 [DBG] Start token request.
2019-04-28 13:30:47.530 +02:00 [DBG] Start client validation
2019-04-28 13:30:47.530 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 13:30:47.530 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 13:30:47.531 +02:00 [DBG] client id without secret found
2019-04-28 13:30:47.531 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 13:30:47.531 +02:00 [DBG] Secret id found: frontStore
2019-04-28 13:30:47.531 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:30:47.531 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 13:30:47.531 +02:00 [DBG] Client validation success
2019-04-28 13:30:47.531 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBPAQFK7SV:00000002","TimeStamp":"2019-04-28T11:30:47.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 13:30:47.532 +02:00 [DBG] Start token request validation
2019-04-28 13:30:47.532 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 13:30:47.560 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 13:30:47.942 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 13:30:47.943 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"9cb188896c284ff3097b099b2b34cf586efed83f566f32eee4315f855af95355","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"9cb188896c284ff3097b099b2b34cf586efed83f566f32eee4315f855af95355","redirect_uri":"http://localhost:8080/callback","code_verifier":"fce540fa059443f49f57607014bac3cfa74c4628374847beb0900c770c3f5473f4adba773f7743cabc5aa1bd8f18bee4","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 13:30:47.943 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:30:47.943 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 13:30:47.943 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:30:48.609 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:30:48.609 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 13:30:48.609 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 13:30:48.612 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****cIPQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****96oA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBPAQFK7SV:00000002","TimeStamp":"2019-04-28T11:30:48.0000000Z","ProcessId":85660,"LocalIpAddress":"127.0.0.1:33358","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:30:48.612 +02:00 [DBG] Token request success.
2019-04-28 13:30:48.621 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:30:48.622 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:30:48.622 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:30:48.629 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:30:48.629 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:30:48.630 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:30:48.630 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 13:30:48.630 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 13:30:48.630 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 13:30:48.630 +02:00 [DBG] Start userinfo request
2019-04-28 13:30:48.630 +02:00 [DBG] Bearer token found in header
2019-04-28 13:30:48.633 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:30:48.633 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:30:48.851 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 13:30:48.852 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556451048,"exp":1556451138,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 13:30:48.852 +02:00 [DBG] Creating userinfo response
2019-04-28 13:30:48.852 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:30:48.852 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:30:48.852 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 13:30:48.852 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:30:49.109 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 13:30:49.109 +02:00 [DBG] End userinfo request
2019-04-28 13:30:49.132 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:30:49.132 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:30:49.132 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:30:49.132 +02:00 [DBG] Rendering check session result
2019-04-28 13:30:49.863 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:30:49.863 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:30:49.863 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:30:49.864 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:30:49.864 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:30:49.865 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:30:49.865 +02:00 [DBG] Start discovery request
2019-04-28 13:30:50.049 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:30:50.049 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:30:50.049 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:30:50.049 +02:00 [DBG] Rendering check session result
2019-04-28 13:31:10.816 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-04-28 13:31:10.816 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-04-28 13:31:10.816 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-04-28 13:31:10.816 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:31:10.817 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:31:10.817 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:31:10.817 +02:00 [DBG] Start discovery request
2019-04-28 13:35:24.615 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:35:24.615 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:35:24.615 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:35:24.615 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:35:24.616 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:35:24.616 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:35:24.616 +02:00 [DBG] Start discovery request
2019-04-28 13:35:24.648 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:35:24.648 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:35:24.648 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:35:24.649 +02:00 [DBG] Rendering check session result
2019-04-28 13:36:16.386 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:36:16.386 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:36:16.387 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:36:16.387 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:36:16.387 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:36:16.388 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:36:16.388 +02:00 [DBG] Start discovery request
2019-04-28 13:36:16.544 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:36:16.544 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:36:16.544 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:36:16.544 +02:00 [DBG] Rendering check session result
2019-04-28 13:36:21.106 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:36:21.106 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:36:21.106 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:36:21.107 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:36:21.108 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:36:21.109 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:36:21.109 +02:00 [DBG] Start discovery request
2019-04-28 13:36:21.285 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:36:21.286 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:36:21.286 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:36:21.286 +02:00 [DBG] Rendering check session result
2019-04-28 13:36:27.090 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:36:27.091 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:36:27.091 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:36:27.091 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:36:27.091 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:36:27.091 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:36:27.092 +02:00 [DBG] Start discovery request
2019-04-28 13:36:27.146 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:36:27.146 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:36:27.146 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:36:27.146 +02:00 [DBG] Rendering check session result
2019-04-28 13:37:38.663 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:37:38.673 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:37:38.674 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:37:38.674 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:37:38.674 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:37:38.674 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:37:38.674 +02:00 [DBG] Start discovery request
2019-04-28 13:37:38.753 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:37:38.753 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:37:38.753 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:37:38.753 +02:00 [DBG] Rendering check session result
2019-04-28 13:39:19.355 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:39:19.355 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:39:19.355 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:39:19.355 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:39:19.356 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:39:19.356 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:39:19.356 +02:00 [DBG] Start discovery request
2019-04-28 13:39:19.408 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:39:19.408 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:39:19.408 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:39:19.408 +02:00 [DBG] Rendering check session result
2019-04-28 13:40:40.142 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:40:40.143 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:40:40.143 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:40:40.143 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:40:40.143 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:40:40.143 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:40:40.143 +02:00 [DBG] Start discovery request
2019-04-28 13:40:40.188 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:40:40.188 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:40:40.188 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:40:40.188 +02:00 [DBG] Rendering check session result
2019-04-28 13:40:48.701 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:40:48.702 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:40:48.702 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:40:48.703 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:40:48.704 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:40:48.704 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:40:48.704 +02:00 [DBG] Start discovery request
2019-04-28 13:40:48.729 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:40:48.729 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:40:48.729 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:40:48.730 +02:00 [DBG] Rendering check session result
2019-04-28 13:41:24.109 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:41:24.109 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:41:24.109 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:41:24.109 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:41:24.110 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:41:24.110 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:41:24.110 +02:00 [DBG] Start discovery request
2019-04-28 13:41:24.166 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:41:24.166 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:41:24.166 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:41:24.166 +02:00 [DBG] Rendering check session result
2019-04-28 13:42:10.417 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:42:10.418 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:42:10.418 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:42:10.418 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:42:10.418 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:42:10.419 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:42:10.419 +02:00 [DBG] Start discovery request
2019-04-28 13:42:10.650 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:42:10.651 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:42:10.651 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:42:10.651 +02:00 [DBG] Rendering check session result
2019-04-28 13:44:17.525 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:44:17.525 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:44:17.527 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:44:17.528 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:44:17.528 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:44:17.528 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:44:17.528 +02:00 [DBG] Start discovery request
2019-04-28 13:44:17.680 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:44:17.681 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:44:17.681 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:44:17.681 +02:00 [DBG] Rendering check session result
2019-04-28 13:44:43.731 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:44:43.731 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:44:43.731 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:44:43.734 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:44:43.735 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:44:43.735 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:44:43.736 +02:00 [DBG] Start discovery request
2019-04-28 13:44:44.021 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:44:44.021 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:44:44.021 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:44:44.021 +02:00 [DBG] Rendering check session result
2019-04-28 13:46:14.077 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:46:14.077 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:46:14.077 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:46:14.079 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:46:14.080 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:46:14.080 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:46:14.080 +02:00 [DBG] Start discovery request
2019-04-28 13:46:14.277 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:46:14.277 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:46:14.277 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:46:14.277 +02:00 [DBG] Rendering check session result
2019-04-28 13:48:21.051 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-28 13:48:21.112 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-28 13:48:21.118 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-28 13:48:21.119 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-28 13:48:21.119 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-28 13:48:21.119 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-28 13:48:21.119 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-28 13:48:22.404 +02:00 [DBG] Login Url: /Account/Login
2019-04-28 13:48:22.409 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-28 13:48:22.409 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-28 13:48:22.409 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-28 13:48:22.409 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-28 13:48:22.409 +02:00 [DBG] Error Url: /home/error
2019-04-28 13:48:22.409 +02:00 [DBG] Error Id Parameter: errorId
2019-04-28 13:51:48.417 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-28 13:51:48.455 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-28 13:51:48.459 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-28 13:51:48.459 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-28 13:51:48.459 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-28 13:51:48.459 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-28 13:51:48.459 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-28 13:51:48.807 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:51:48.813 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:51:48.813 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:51:48.842 +02:00 [DBG] Login Url: /Account/Login
2019-04-28 13:51:48.842 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-28 13:51:48.842 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-28 13:51:48.842 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-28 13:51:48.842 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-28 13:51:48.842 +02:00 [DBG] Error Url: /home/error
2019-04-28 13:51:48.842 +02:00 [DBG] Error Id Parameter: errorId
2019-04-28 13:51:48.860 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:51:48.929 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:51:48.929 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:51:48.933 +02:00 [DBG] Start discovery request
2019-04-28 13:51:49.027 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:51:49.028 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:51:49.028 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:51:49.030 +02:00 [DBG] Rendering check session result
2019-04-28 13:52:19.832 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:52:19.833 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:52:19.833 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:52:19.833 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:52:19.834 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:52:19.835 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:52:19.835 +02:00 [DBG] Start discovery request
2019-04-28 13:52:19.994 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:52:19.994 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:52:19.994 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:52:19.994 +02:00 [DBG] Rendering check session result
2019-04-28 13:52:58.849 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:52:58.850 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:52:58.850 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:52:58.850 +02:00 [DBG] Start discovery request
2019-04-28 13:52:58.936 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-28 13:52:58.936 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-28 13:52:58.937 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-28 13:52:58.940 +02:00 [DBG] Start key discovery request
2019-04-28 13:53:11.993 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 13:53:11.996 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 13:53:11.996 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 13:53:12.009 +02:00 [DBG] Start authorize request
2019-04-28 13:53:12.032 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:53:12.046 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:53:12.069 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:53:12.077 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:53:12.113 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:53:12.131 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"e84e6d61f8f541ab8a4cb3c2ceb10424","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"e84e6d61f8f541ab8a4cb3c2ceb10424","code_challenge":"k4Fa1cCVOfvYnGxtIFlsXFt_vMeRX_8WG8xAphqqo2c","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:53:13.003 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-28 13:53:13.003 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-28 13:53:13.003 +02:00 [INF] Showing consent: User has not yet consented
2019-04-28 13:53:13.088 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:53:13.088 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:53:13.088 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:53:13.088 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:53:13.090 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:53:14.662 +02:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 13:53:14.711 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:53:14.712 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:53:14.712 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:53:14.712 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:53:14.729 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RequestedScopes":["openid","profile","api1"],"GrantedScopes":["openid","profile","api1"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLMBPVIMLHPP:00000002","TimeStamp":"2019-04-28T11:53:14.0000000Z","ProcessId":88892,"LocalIpAddress":"127.0.0.1:38716","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-04-28 13:53:14.748 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:53:15.119 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-28 13:53:15.122 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-28 13:53:15.124 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-28 13:53:15.133 +02:00 [DBG] Start authorize callback request
2019-04-28 13:53:15.149 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:53:15.149 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:53:15.149 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:53:15.149 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:53:15.150 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:53:15.150 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"e84e6d61f8f541ab8a4cb3c2ceb10424","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"e84e6d61f8f541ab8a4cb3c2ceb10424","code_challenge":"k4Fa1cCVOfvYnGxtIFlsXFt_vMeRX_8WG8xAphqqo2c","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:53:15.172 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-28 13:53:15.175 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-28 13:53:15.188 +02:00 [INF] User consented to scopes: ["openid","profile","api1"]
2019-04-28 13:53:15.193 +02:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1"]
2019-04-28 13:53:15.198 +02:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:53:15.222 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 13:53:15.254 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****83ea","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBPVIMLHPO:00000004","TimeStamp":"2019-04-28T11:53:15.0000000Z","ProcessId":88892,"LocalIpAddress":"127.0.0.1:38716","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:53:15.256 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"e84e6d61f8f541ab8a4cb3c2ceb10424","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 13:53:16.324 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:53:16.324 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:53:16.325 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:53:16.325 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:53:16.325 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:53:16.325 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:53:16.325 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:53:16.325 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:53:16.325 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:53:16.326 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:53:16.326 +02:00 [DBG] Start discovery request
2019-04-28 13:53:16.326 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:53:16.326 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:53:16.326 +02:00 [DBG] Start discovery request
2019-04-28 13:53:16.448 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 13:53:16.448 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:53:16.448 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:53:16.448 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 13:53:16.448 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:53:16.449 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:53:16.449 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:53:16.449 +02:00 [DBG] Rendering check session result
2019-04-28 13:53:16.462 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 13:53:16.462 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 13:53:16.509 +02:00 [DBG] Start token request.
2019-04-28 13:53:16.522 +02:00 [DBG] Start client validation
2019-04-28 13:53:16.533 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 13:53:16.540 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 13:53:16.541 +02:00 [DBG] client id without secret found
2019-04-28 13:53:16.541 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 13:53:16.541 +02:00 [DBG] Secret id found: frontStore
2019-04-28 13:53:16.542 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:53:16.542 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 13:53:16.542 +02:00 [DBG] Client validation success
2019-04-28 13:53:16.542 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBPVIMLHPP:00000005","TimeStamp":"2019-04-28T11:53:16.0000000Z","ProcessId":88892,"LocalIpAddress":"127.0.0.1:38716","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 13:53:16.553 +02:00 [DBG] Start token request validation
2019-04-28 13:53:16.571 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 13:53:16.595 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 13:53:16.605 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 13:53:16.610 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"a5dd99afcb9c343b568d4bf6d44c2a74623e3ba6e3f4cbec4134f63286eb83ea","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"a5dd99afcb9c343b568d4bf6d44c2a74623e3ba6e3f4cbec4134f63286eb83ea","redirect_uri":"http://localhost:8080/callback","code_verifier":"1c9242b6029e4f94b4b8e803845dd80a4b8075dedd5b44b3964e28d3f2825dab7fd5bb75066a460a8462925713186d15","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 13:53:16.629 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:53:16.642 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 13:53:16.642 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:53:17.012 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:53:17.025 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 13:53:17.025 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 13:53:17.033 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****TjKA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****D_dg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBPVIMLHPP:00000005","TimeStamp":"2019-04-28T11:53:17.0000000Z","ProcessId":88892,"LocalIpAddress":"127.0.0.1:38716","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:53:17.034 +02:00 [DBG] Token request success.
2019-04-28 13:53:17.052 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:53:17.053 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:53:17.053 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:53:17.061 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:53:17.061 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:53:17.061 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:53:17.062 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 13:53:17.064 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 13:53:17.064 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 13:53:17.076 +02:00 [DBG] Start userinfo request
2019-04-28 13:53:17.081 +02:00 [DBG] Bearer token found in header
2019-04-28 13:53:17.174 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:53:17.178 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:53:17.199 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 13:53:17.202 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556452396,"exp":1556452486,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 13:53:17.214 +02:00 [DBG] Creating userinfo response
2019-04-28 13:53:17.221 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:53:17.239 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:53:17.252 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 13:53:17.252 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:53:17.281 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 13:53:17.282 +02:00 [DBG] End userinfo request
2019-04-28 13:53:18.100 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:53:18.100 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:53:18.100 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:53:18.101 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:53:18.101 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:53:18.101 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:53:18.101 +02:00 [DBG] Start discovery request
2019-04-28 13:53:18.273 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:53:18.273 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:53:18.274 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:53:18.274 +02:00 [DBG] Rendering check session result
2019-04-28 13:54:08.365 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 13:54:08.365 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 13:54:08.365 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 13:54:08.365 +02:00 [DBG] Start authorize request
2019-04-28 13:54:08.366 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:54:08.366 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:54:08.366 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:54:08.367 +02:00 [ERR] Invalid redirect_uri: http://localhost:8080/silentrenew
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"562287e5a51a46c09d34990dbdd35375","code_challenge":"6wjmCdy5dV_Si-gBjEyrLH3aD3tQ1fybfkuQrJ_6fhY","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:54:08.370 +02:00 [ERR] Request validation failed
2019-04-28 13:54:08.370 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"562287e5a51a46c09d34990dbdd35375","code_challenge":"6wjmCdy5dV_Si-gBjEyrLH3aD3tQ1fybfkuQrJ_6fhY","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:54:08.373 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLMBPVIMLHPN:00000010","TimeStamp":"2019-04-28T11:54:08.0000000Z","ProcessId":88892,"LocalIpAddress":"127.0.0.1:38716","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-04-28 13:56:48.000 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-04-28 13:56:48.054 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-28 13:56:48.058 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-28 13:56:48.058 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-28 13:56:48.058 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-28 13:56:48.058 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-28 13:56:48.058 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-28 13:56:48.765 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:56:48.786 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:56:48.787 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:56:48.831 +02:00 [DBG] Login Url: /Account/Login
2019-04-28 13:56:48.831 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-28 13:56:48.832 +02:00 [DBG] Logout Url: /Account/Logout
2019-04-28 13:56:48.832 +02:00 [DBG] ConsentUrl Url: /consent
2019-04-28 13:56:48.832 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-28 13:56:48.832 +02:00 [DBG] Error Url: /home/error
2019-04-28 13:56:48.832 +02:00 [DBG] Error Id Parameter: errorId
2019-04-28 13:56:48.888 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:56:49.602 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:56:49.602 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:56:49.607 +02:00 [DBG] Start discovery request
2019-04-28 13:56:50.001 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:56:50.002 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:56:50.002 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:56:50.003 +02:00 [DBG] Rendering check session result
2019-04-28 13:56:58.111 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:56:58.111 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:56:58.112 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:56:58.112 +02:00 [DBG] Start discovery request
2019-04-28 13:56:58.195 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-28 13:56:58.196 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-28 13:56:58.196 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-28 13:56:58.199 +02:00 [DBG] Start key discovery request
2019-04-28 13:57:02.995 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 13:57:03.005 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 13:57:03.006 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 13:57:03.020 +02:00 [DBG] Start authorize request
2019-04-28 13:57:03.033 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:57:03.039 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:57:03.057 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:57:03.063 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:57:03.091 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:57:03.103 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"b56cb51e277c40999b045244a768b5bb","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"b56cb51e277c40999b045244a768b5bb","code_challenge":"3_4OWPVnQ6swR1VpEsuGPQRg72a5V5jA_mXADcpLCqM","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:57:03.998 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-28 13:57:03.998 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-28 13:57:03.998 +02:00 [INF] Showing consent: User has not yet consented
2019-04-28 13:57:04.088 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:57:04.088 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:57:04.088 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:57:04.088 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:57:04.089 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:57:05.848 +02:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-28 13:57:05.899 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:57:05.899 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:57:05.900 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:57:05.900 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:57:05.936 +02:00 [INF] {"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RequestedScopes":["openid","profile","api1"],"GrantedScopes":["openid","profile","api1"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLMBQ2C1V0C0:00000002","TimeStamp":"2019-04-28T11:57:05.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-04-28 13:57:05.970 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:57:06.316 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-28 13:57:06.320 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-28 13:57:06.321 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-28 13:57:06.334 +02:00 [DBG] Start authorize callback request
2019-04-28 13:57:06.359 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:57:06.359 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:57:06.360 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:57:06.360 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:57:06.361 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:57:06.361 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"b56cb51e277c40999b045244a768b5bb","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"b56cb51e277c40999b045244a768b5bb","code_challenge":"3_4OWPVnQ6swR1VpEsuGPQRg72a5V5jA_mXADcpLCqM","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:57:06.389 +02:00 [DBG] user_consent grant with value: frontStore|de3f25c8-246c-4061-bfa6-86c6698172fe not found in store.
2019-04-28 13:57:06.389 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-28 13:57:06.400 +02:00 [INF] User consented to scopes: ["openid","profile","api1"]
2019-04-28 13:57:06.403 +02:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1"]
2019-04-28 13:57:06.410 +02:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:57:06.431 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 13:57:06.458 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****5b87","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0BU:00000007","TimeStamp":"2019-04-28T11:57:06.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:57:06.461 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"b56cb51e277c40999b045244a768b5bb","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 13:57:07.685 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:57:07.685 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:57:07.685 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:57:07.686 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:57:07.686 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:57:07.686 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:57:07.686 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:57:07.686 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:57:07.686 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:57:07.686 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:57:07.686 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:57:07.686 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:57:07.686 +02:00 [DBG] Start discovery request
2019-04-28 13:57:07.687 +02:00 [DBG] Start discovery request
2019-04-28 13:57:07.830 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 13:57:07.830 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:57:07.830 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:57:07.831 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 13:57:07.831 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:57:07.831 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:57:07.831 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:57:07.831 +02:00 [DBG] Rendering check session result
2019-04-28 13:57:07.838 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 13:57:07.838 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 13:57:07.851 +02:00 [DBG] Start token request.
2019-04-28 13:57:07.858 +02:00 [DBG] Start client validation
2019-04-28 13:57:07.866 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 13:57:07.871 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 13:57:07.873 +02:00 [DBG] client id without secret found
2019-04-28 13:57:07.874 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 13:57:07.874 +02:00 [DBG] Secret id found: frontStore
2019-04-28 13:57:07.874 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:57:07.874 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 13:57:07.874 +02:00 [DBG] Client validation success
2019-04-28 13:57:07.875 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C0:00000005","TimeStamp":"2019-04-28T11:57:07.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 13:57:07.891 +02:00 [DBG] Start token request validation
2019-04-28 13:57:07.906 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 13:57:07.929 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 13:57:07.942 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 13:57:07.948 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"49596cea7fb1ddccc00ec45c2fe0f4e80be6999a620125567035f269bb005b87","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"49596cea7fb1ddccc00ec45c2fe0f4e80be6999a620125567035f269bb005b87","redirect_uri":"http://localhost:8080/callback","code_verifier":"42a351a03d064770968a9f4f95256c36087d408cf3974101bc44e0c2557dc1b7ef0d65fbc325437ba9031b1a93456224","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 13:57:07.968 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:57:07.984 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 13:57:07.986 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:57:08.341 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:57:08.350 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 13:57:08.350 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 13:57:08.358 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****uzRg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****pNFQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C0:00000005","TimeStamp":"2019-04-28T11:57:08.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:57:08.364 +02:00 [DBG] Token request success.
2019-04-28 13:57:08.387 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:57:08.387 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:57:08.387 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:57:08.397 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:57:08.397 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:57:08.397 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:57:08.397 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 13:57:08.399 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 13:57:08.400 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 13:57:08.409 +02:00 [DBG] Start userinfo request
2019-04-28 13:57:08.414 +02:00 [DBG] Bearer token found in header
2019-04-28 13:57:08.508 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:57:08.512 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:57:08.522 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 13:57:08.525 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556452628,"exp":1556452718,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 13:57:08.536 +02:00 [DBG] Creating userinfo response
2019-04-28 13:57:08.541 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:57:08.544 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:57:08.548 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 13:57:08.548 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:57:08.562 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 13:57:08.562 +02:00 [DBG] End userinfo request
2019-04-28 13:57:09.573 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:57:09.573 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:57:09.573 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:57:09.574 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:57:09.575 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:57:09.576 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:57:09.580 +02:00 [DBG] Start discovery request
2019-04-28 13:57:09.755 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 13:57:09.755 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 13:57:09.755 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 13:57:09.755 +02:00 [DBG] Rendering check session result
2019-04-28 13:57:59.719 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 13:57:59.719 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 13:57:59.719 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 13:57:59.719 +02:00 [DBG] Start authorize request
2019-04-28 13:57:59.719 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:57:59.719 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:57:59.720 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:57:59.720 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:57:59.720 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:57:59.720 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"45ee368ac9304e189971c86f8edf259b","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"45ee368ac9304e189971c86f8edf259b","code_challenge":"TxwDRKIgE45m7LHKSvVAevhYqCZ3Da5_SIfmJHSyxZE","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:57:59.726 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 13:57:59.726 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 13:57:59.737 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****dadb","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0BT:00000009","TimeStamp":"2019-04-28T11:57:59.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:57:59.737 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"45ee368ac9304e189971c86f8edf259b","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 13:58:02.342 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:58:02.342 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:58:02.342 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:58:02.343 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:58:02.343 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:58:02.343 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:58:02.343 +02:00 [DBG] Start discovery request
2019-04-28 13:58:02.414 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 13:58:02.414 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:58:02.414 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:58:02.415 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 13:58:02.416 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 13:58:02.417 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 13:58:02.417 +02:00 [DBG] Start token request.
2019-04-28 13:58:02.417 +02:00 [DBG] Start client validation
2019-04-28 13:58:02.417 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 13:58:02.417 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 13:58:02.419 +02:00 [DBG] client id without secret found
2019-04-28 13:58:02.419 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 13:58:02.419 +02:00 [DBG] Secret id found: frontStore
2019-04-28 13:58:02.419 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:58:02.419 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 13:58:02.419 +02:00 [DBG] Client validation success
2019-04-28 13:58:02.420 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0BU:0000000A","TimeStamp":"2019-04-28T11:58:02.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 13:58:02.420 +02:00 [DBG] Start token request validation
2019-04-28 13:58:02.420 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 13:58:02.433 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 13:58:02.441 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 13:58:02.442 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"a81b383460f994f5bbd8136a3232e7a51b901208987f359165a9e8c962c3dadb","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"a81b383460f994f5bbd8136a3232e7a51b901208987f359165a9e8c962c3dadb","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"1a092bade7d7440a9c7de5042f54a68c074fabd9cd1b4ce095ead2fd4b947031b1de948ab96c4bcca3e6009c1b8f6b14","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 13:58:02.442 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:58:02.442 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 13:58:02.442 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:58:02.456 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:58:02.457 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 13:58:02.457 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 13:58:02.460 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****sAuQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Q4Yw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0BU:0000000A","TimeStamp":"2019-04-28T11:58:02.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:58:02.461 +02:00 [DBG] Token request success.
2019-04-28 13:58:02.495 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:58:02.495 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:58:02.495 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:58:02.502 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:58:02.502 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:58:02.502 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:58:02.503 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 13:58:02.503 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 13:58:02.503 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 13:58:02.503 +02:00 [DBG] Start userinfo request
2019-04-28 13:58:02.504 +02:00 [DBG] Bearer token found in header
2019-04-28 13:58:02.506 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:58:02.506 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:58:02.511 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 13:58:02.512 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556452682,"exp":1556452772,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 13:58:02.513 +02:00 [DBG] Creating userinfo response
2019-04-28 13:58:02.513 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:58:02.513 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:58:02.513 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 13:58:02.513 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:58:02.519 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 13:58:02.520 +02:00 [DBG] End userinfo request
2019-04-28 13:58:52.593 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 13:58:52.593 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 13:58:52.594 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 13:58:52.594 +02:00 [DBG] Start authorize request
2019-04-28 13:58:52.594 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:58:52.594 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 13:58:52.594 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:58:52.594 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 13:58:52.595 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 13:58:52.595 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"f756237e26724b9e87f6a2b41ecf0270","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"f756237e26724b9e87f6a2b41ecf0270","code_challenge":"VNexD9QeXhFQxA_nh-6TRA1k90LHAVi9_JRpILeDMHI","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 13:58:52.628 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 13:58:52.628 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 13:58:52.634 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****4f08","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0BV:0000000B","TimeStamp":"2019-04-28T11:58:52.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:58:52.634 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"f756237e26724b9e87f6a2b41ecf0270","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 13:58:53.895 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 13:58:53.895 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:58:53.896 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:58:53.896 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 13:58:53.896 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 13:58:53.896 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 13:58:53.896 +02:00 [DBG] Start discovery request
2019-04-28 13:58:53.933 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 13:58:53.933 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:58:53.933 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:58:53.934 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 13:58:53.934 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 13:58:53.934 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 13:58:53.934 +02:00 [DBG] Start token request.
2019-04-28 13:58:53.934 +02:00 [DBG] Start client validation
2019-04-28 13:58:53.934 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 13:58:53.934 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 13:58:53.935 +02:00 [DBG] client id without secret found
2019-04-28 13:58:53.935 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 13:58:53.935 +02:00 [DBG] Secret id found: frontStore
2019-04-28 13:58:53.935 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:58:53.935 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 13:58:53.935 +02:00 [DBG] Client validation success
2019-04-28 13:58:53.935 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C0:00000008","TimeStamp":"2019-04-28T11:58:53.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 13:58:53.935 +02:00 [DBG] Start token request validation
2019-04-28 13:58:53.935 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 13:58:53.948 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 13:58:53.953 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 13:58:53.954 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"7e4f4341beabe785c4fae04dff65ec7b039d7a4a6fca840a7e79160167a04f08","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"7e4f4341beabe785c4fae04dff65ec7b039d7a4a6fca840a7e79160167a04f08","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"8b5551aa7e3547c7966b8936bea18d5666c68c7afffa4827a1b7f427b5f5a17883b9f13ff34542f1b94baa72f0f8db7a","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 13:58:53.954 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:58:53.954 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 13:58:53.954 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 13:58:53.986 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:58:53.987 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 13:58:53.987 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 13:58:53.990 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****F58g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Ndug","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C0:00000008","TimeStamp":"2019-04-28T11:58:53.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 13:58:53.990 +02:00 [DBG] Token request success.
2019-04-28 13:58:53.996 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:58:53.997 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:58:53.997 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:58:54.007 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 13:58:54.007 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 13:58:54.007 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 13:58:54.007 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 13:58:54.007 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 13:58:54.008 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 13:58:54.008 +02:00 [DBG] Start userinfo request
2019-04-28 13:58:54.008 +02:00 [DBG] Bearer token found in header
2019-04-28 13:58:54.010 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:58:54.010 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 13:58:54.016 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 13:58:54.017 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556452733,"exp":1556452823,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 13:58:54.017 +02:00 [DBG] Creating userinfo response
2019-04-28 13:58:54.017 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:58:54.017 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:58:54.017 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 13:58:54.017 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 13:58:54.027 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 13:58:54.027 +02:00 [DBG] End userinfo request
2019-04-28 14:03:05.931 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:03:05.931 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:03:05.931 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:03:05.931 +02:00 [DBG] Rendering check session result
2019-04-28 14:04:21.614 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:04:21.615 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:04:21.615 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:04:21.615 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:04:21.616 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:04:21.616 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:04:21.616 +02:00 [DBG] Start discovery request
2019-04-28 14:04:21.831 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:04:21.831 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:04:21.832 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:04:21.832 +02:00 [DBG] Rendering check session result
2019-04-28 14:04:38.480 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:04:38.480 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:04:38.480 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:04:38.481 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:04:38.481 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:04:38.481 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:04:38.481 +02:00 [DBG] Start discovery request
2019-04-28 14:04:38.695 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:04:38.695 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:04:38.695 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:04:38.695 +02:00 [DBG] Rendering check session result
2019-04-28 14:05:13.649 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:05:13.649 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:05:13.649 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:05:13.650 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:05:13.650 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:05:13.650 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:05:13.650 +02:00 [DBG] Start discovery request
2019-04-28 14:05:13.901 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:05:13.901 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:05:13.901 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:05:13.901 +02:00 [DBG] Rendering check session result
2019-04-28 14:06:32.636 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:06:32.647 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:06:32.647 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:06:32.648 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:06:32.648 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:06:32.648 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:06:32.648 +02:00 [DBG] Start discovery request
2019-04-28 14:06:33.014 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:06:33.014 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:06:33.014 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:06:33.014 +02:00 [DBG] Rendering check session result
2019-04-28 14:06:51.259 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:06:51.259 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:06:51.259 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:06:51.260 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:06:51.260 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:06:51.260 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:06:51.261 +02:00 [DBG] Start discovery request
2019-04-28 14:06:51.532 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:06:51.533 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:06:51.534 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:06:51.534 +02:00 [DBG] Rendering check session result
2019-04-28 14:07:21.885 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:07:21.886 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:07:21.886 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:07:21.886 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:07:21.886 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:07:21.886 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:07:21.887 +02:00 [DBG] Start discovery request
2019-04-28 14:07:22.120 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:07:22.120 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:07:22.121 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:07:22.123 +02:00 [DBG] Rendering check session result
2019-04-28 14:07:23.069 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:07:23.073 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:07:23.074 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:07:23.074 +02:00 [DBG] Start authorize request
2019-04-28 14:07:23.074 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:07:23.074 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:07:23.074 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:07:23.074 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:07:23.074 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:07:23.075 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"8e1a7a8a563f46f1a8e6b4cbf1cf8d32","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"8e1a7a8a563f46f1a8e6b4cbf1cf8d32","code_challenge":"QgQe_BYBIdiOKfrlTwj69Wfjigh6AvA7z1yGsRDYP_o","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:07:23.689 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:07:23.689 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:07:23.695 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****e28b","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C3:00000007","TimeStamp":"2019-04-28T12:07:23.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:07:23.695 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"8e1a7a8a563f46f1a8e6b4cbf1cf8d32","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:07:26.085 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:07:26.085 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:07:26.085 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:07:26.085 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:07:26.086 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:07:26.086 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:07:26.086 +02:00 [DBG] Start discovery request
2019-04-28 14:07:26.133 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:07:26.133 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:07:26.134 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:07:26.134 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:07:26.134 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:07:26.134 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:07:26.134 +02:00 [DBG] Start token request.
2019-04-28 14:07:26.134 +02:00 [DBG] Start client validation
2019-04-28 14:07:26.134 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:07:26.135 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:07:26.135 +02:00 [DBG] client id without secret found
2019-04-28 14:07:26.135 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:07:26.135 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:07:26.135 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:07:26.135 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:07:26.135 +02:00 [DBG] Client validation success
2019-04-28 14:07:26.135 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C3:00000009","TimeStamp":"2019-04-28T12:07:26.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:07:26.136 +02:00 [DBG] Start token request validation
2019-04-28 14:07:26.136 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:07:26.151 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:07:26.157 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:07:26.157 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"6e1fc1780bb349b2c596469c89fc4991f1d55d7592ca3b7eb87ec8f8a9bce28b","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"6e1fc1780bb349b2c596469c89fc4991f1d55d7592ca3b7eb87ec8f8a9bce28b","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"5e1f7f95b3934f08be3f1c7b9fdd942c6c13a8da36fa4db39de7e1ae17fc00c648eb62705cad4d7b8d81ae05d3fdbf6a","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:07:26.157 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:07:26.157 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:07:26.157 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:07:26.190 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:07:26.190 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:07:26.190 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:07:26.193 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****vK_w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8YfA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C3:00000009","TimeStamp":"2019-04-28T12:07:26.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:07:26.193 +02:00 [DBG] Token request success.
2019-04-28 14:07:26.202 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:07:26.203 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:07:26.203 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:07:26.207 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:07:26.208 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:07:26.208 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:07:26.208 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:07:26.208 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:07:26.208 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:07:26.208 +02:00 [DBG] Start userinfo request
2019-04-28 14:07:26.208 +02:00 [DBG] Bearer token found in header
2019-04-28 14:07:26.211 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:07:26.211 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:07:26.215 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:07:26.215 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556453246,"exp":1556453336,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:07:26.215 +02:00 [DBG] Creating userinfo response
2019-04-28 14:07:26.215 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:07:26.216 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:07:26.216 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:07:26.216 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:07:26.223 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:07:26.223 +02:00 [DBG] End userinfo request
2019-04-28 14:08:04.141 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:08:04.142 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:08:04.142 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:08:04.142 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:08:04.143 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:08:04.143 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:08:04.146 +02:00 [DBG] Start discovery request
2019-04-28 14:08:04.388 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:08:04.388 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:08:04.388 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:08:04.388 +02:00 [DBG] Rendering check session result
2019-04-28 14:08:19.179 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:08:19.179 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:08:19.180 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:08:19.180 +02:00 [DBG] Start authorize request
2019-04-28 14:08:19.180 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:08:19.180 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:08:19.180 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:08:19.181 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:08:19.181 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:08:19.181 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"73e1018fa212423a8f079559736fa2a8","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"73e1018fa212423a8f079559736fa2a8","code_challenge":"nV0JPJAgh9q4rTO8YaOTa4egCvECK8ejpRIZ2cxj128","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:08:19.399 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:08:19.399 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:08:19.404 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****2ae5","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C3:0000000E","TimeStamp":"2019-04-28T12:08:19.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:08:19.404 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"73e1018fa212423a8f079559736fa2a8","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:08:20.655 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:08:20.655 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:08:20.655 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:08:20.656 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:08:20.656 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:08:20.656 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:08:20.656 +02:00 [DBG] Start discovery request
2019-04-28 14:08:20.719 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:08:20.720 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:08:20.720 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:08:20.720 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:08:20.721 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:08:20.721 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:08:20.721 +02:00 [DBG] Start token request.
2019-04-28 14:08:20.721 +02:00 [DBG] Start client validation
2019-04-28 14:08:20.721 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:08:20.721 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:08:20.722 +02:00 [DBG] client id without secret found
2019-04-28 14:08:20.722 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:08:20.723 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:08:20.723 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:08:20.723 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:08:20.723 +02:00 [DBG] Client validation success
2019-04-28 14:08:20.723 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C3:00000010","TimeStamp":"2019-04-28T12:08:20.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:08:20.723 +02:00 [DBG] Start token request validation
2019-04-28 14:08:20.723 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:08:20.744 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:08:20.775 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:08:20.775 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"7133c4ac9ebf73146ba1a675b86447f66768139dc90d8d7d99e2559c5ecd2ae5","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"7133c4ac9ebf73146ba1a675b86447f66768139dc90d8d7d99e2559c5ecd2ae5","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"b5ad4a6c1e864daf9f8249ac4c2a1d553508e9a6c3bf4a22a6b446d690c335a28f26f2dbc38a4004918a030b12b94588","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:08:20.775 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:08:20.776 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:08:20.776 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:08:20.818 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:08:20.818 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:08:20.818 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:08:20.821 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****Y7jA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****pCSQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C3:00000010","TimeStamp":"2019-04-28T12:08:20.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:08:20.821 +02:00 [DBG] Token request success.
2019-04-28 14:08:20.834 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:08:20.834 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:08:20.834 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:08:20.839 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:08:20.840 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:08:20.840 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:08:20.840 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:08:20.840 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:08:20.840 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:08:20.840 +02:00 [DBG] Start userinfo request
2019-04-28 14:08:20.840 +02:00 [DBG] Bearer token found in header
2019-04-28 14:08:20.842 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:08:20.842 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:08:20.848 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:08:20.848 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556453300,"exp":1556453390,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:08:20.848 +02:00 [DBG] Creating userinfo response
2019-04-28 14:08:20.848 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:08:20.849 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:08:20.849 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:08:20.849 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:08:20.855 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:08:20.855 +02:00 [DBG] End userinfo request
2019-04-28 14:08:58.233 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:08:58.233 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:08:58.233 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:08:58.234 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:08:58.234 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:08:58.235 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:08:58.236 +02:00 [DBG] Start discovery request
2019-04-28 14:08:58.500 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:08:58.500 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:08:58.501 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:08:58.501 +02:00 [DBG] Rendering check session result
2019-04-28 14:11:56.323 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:11:56.324 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:11:56.324 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:11:56.325 +02:00 [DBG] Rendering check session result
2019-04-28 14:11:57.117 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:11:57.118 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:11:57.119 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:11:57.120 +02:00 [DBG] Start authorize request
2019-04-28 14:11:57.120 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:11:57.121 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:11:57.121 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:11:57.121 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:11:57.122 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:11:57.122 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"b7f58b6de1a846e79a57ddb448a8f38f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"b7f58b6de1a846e79a57ddb448a8f38f","code_challenge":"R0InCvM6IrcDRALO3gagMWKItf9Agbj5GPUleuhv2fo","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:11:57.347 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:11:57.348 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:11:57.361 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****92d6","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C4:00000002","TimeStamp":"2019-04-28T12:11:57.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:11:57.361 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"b7f58b6de1a846e79a57ddb448a8f38f","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:11:58.484 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:11:58.484 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:11:58.484 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:11:58.485 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:11:58.485 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:11:58.486 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:11:58.486 +02:00 [DBG] Start discovery request
2019-04-28 14:11:58.515 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:11:58.515 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:11:58.515 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:11:58.516 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:11:58.516 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:11:58.516 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:11:58.516 +02:00 [DBG] Start token request.
2019-04-28 14:11:58.516 +02:00 [DBG] Start client validation
2019-04-28 14:11:58.516 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:11:58.516 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:11:58.517 +02:00 [DBG] client id without secret found
2019-04-28 14:11:58.517 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:11:58.518 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:11:58.518 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:11:58.518 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:11:58.518 +02:00 [DBG] Client validation success
2019-04-28 14:11:58.518 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C4:00000004","TimeStamp":"2019-04-28T12:11:58.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:11:58.518 +02:00 [DBG] Start token request validation
2019-04-28 14:11:58.518 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:11:58.543 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:11:58.548 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:11:58.548 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"9e31ef19a6db39da9e126a19b7c59403f86a6926a45ad39bf27f8954306292d6","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"9e31ef19a6db39da9e126a19b7c59403f86a6926a45ad39bf27f8954306292d6","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"d19b1a1674da45b8aac3b747e2dc5ccf16ce303845c1410392c822c293c39cab5e09378a7882487aaad5d86bd029c0f0","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:11:58.549 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:11:58.549 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:11:58.549 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:11:58.581 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:11:58.582 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:11:58.582 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:11:58.585 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****Oh6w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Lg9w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C4:00000004","TimeStamp":"2019-04-28T12:11:58.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:11:58.585 +02:00 [DBG] Token request success.
2019-04-28 14:11:58.596 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:11:58.596 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:11:58.596 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:11:58.603 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:11:58.603 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:11:58.603 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:11:58.603 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:11:58.604 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:11:58.604 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:11:58.604 +02:00 [DBG] Start userinfo request
2019-04-28 14:11:58.604 +02:00 [DBG] Bearer token found in header
2019-04-28 14:11:58.606 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:11:58.606 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:11:58.614 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:11:58.614 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556453518,"exp":1556453608,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:11:58.615 +02:00 [DBG] Creating userinfo response
2019-04-28 14:11:58.615 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:11:58.615 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:11:58.615 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:11:58.615 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:11:58.625 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:11:58.626 +02:00 [DBG] End userinfo request
2019-04-28 14:11:59.376 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:11:59.377 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:11:59.377 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:11:59.378 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:11:59.378 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:11:59.378 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:11:59.378 +02:00 [DBG] Start discovery request
2019-04-28 14:11:59.563 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:11:59.563 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:11:59.563 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:11:59.563 +02:00 [DBG] Rendering check session result
2019-04-28 14:12:49.008 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:12:49.009 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:12:49.009 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:12:49.009 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:12:49.010 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:12:49.010 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:12:49.010 +02:00 [DBG] Start discovery request
2019-04-28 14:12:49.344 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:12:49.344 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:12:49.345 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:12:49.345 +02:00 [DBG] Rendering check session result
2019-04-28 14:12:50.106 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:12:50.106 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:12:50.106 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:12:50.106 +02:00 [DBG] Start authorize request
2019-04-28 14:12:50.106 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:12:50.106 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:12:50.106 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:12:50.106 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:12:50.106 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:12:50.107 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"47f6a30c1a7b490fa1d32aacf18089cb","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"47f6a30c1a7b490fa1d32aacf18089cb","code_challenge":"FEzR8XwcxSNVPAixHogYwsF73OV_st9RtOkbVfuu3fs","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:12:50.145 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:12:50.145 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:12:50.153 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****6572","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C4:0000000B","TimeStamp":"2019-04-28T12:12:50.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:12:50.153 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"47f6a30c1a7b490fa1d32aacf18089cb","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:12:51.640 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:12:51.640 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:12:51.641 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:12:51.641 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:12:51.642 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:12:51.642 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:12:51.642 +02:00 [DBG] Start discovery request
2019-04-28 14:12:51.680 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:12:51.680 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:12:51.680 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:12:51.680 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:12:51.681 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:12:51.681 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:12:51.681 +02:00 [DBG] Start token request.
2019-04-28 14:12:51.681 +02:00 [DBG] Start client validation
2019-04-28 14:12:51.681 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:12:51.681 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:12:51.681 +02:00 [DBG] client id without secret found
2019-04-28 14:12:51.681 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:12:51.681 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:12:51.681 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:12:51.682 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:12:51.682 +02:00 [DBG] Client validation success
2019-04-28 14:12:51.682 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C4:0000000D","TimeStamp":"2019-04-28T12:12:51.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:12:51.682 +02:00 [DBG] Start token request validation
2019-04-28 14:12:51.682 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:12:51.697 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:12:51.710 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:12:51.710 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"b5462c1e4308f26e6e5eaec2b88b9714ababbdbab69be8a9779a0ab1f9926572","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"b5462c1e4308f26e6e5eaec2b88b9714ababbdbab69be8a9779a0ab1f9926572","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"e0251f05fb834e9d9e086f7b87d8f9f6b059932c146b4846ac8670f348218446e6d42e4f83774ddda94b4fa536ba8964","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:12:51.710 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:12:51.711 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:12:51.711 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:12:51.724 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:12:51.725 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:12:51.725 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:12:51.728 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****J-3w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****CjsQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C4:0000000D","TimeStamp":"2019-04-28T12:12:51.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:12:51.728 +02:00 [DBG] Token request success.
2019-04-28 14:12:51.762 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:12:51.762 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:12:51.762 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:12:51.780 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:12:51.792 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:12:51.792 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:12:51.793 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:12:51.793 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:12:51.793 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:12:51.793 +02:00 [DBG] Start userinfo request
2019-04-28 14:12:51.793 +02:00 [DBG] Bearer token found in header
2019-04-28 14:12:51.795 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:12:51.796 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:12:51.803 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:12:51.803 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556453571,"exp":1556453661,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:12:51.803 +02:00 [DBG] Creating userinfo response
2019-04-28 14:12:51.803 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:12:51.803 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:12:51.804 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:12:51.804 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:12:51.816 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:12:51.816 +02:00 [DBG] End userinfo request
2019-04-28 14:13:41.875 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:13:41.877 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:13:41.877 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:13:41.877 +02:00 [DBG] Start authorize request
2019-04-28 14:13:41.878 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:13:41.878 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:13:41.878 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:13:41.878 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:13:41.878 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:13:41.878 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"d666bde11baa42ca9a7b84de29162a7e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"d666bde11baa42ca9a7b84de29162a7e","code_challenge":"M8RQ5Q4MgBAtpIfZtyClNNL7HwA-fYNtBCNEJCJr1K8","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:13:41.919 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:13:41.919 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:13:41.925 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****9f37","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C4:00000010","TimeStamp":"2019-04-28T12:13:41.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:13:41.925 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"d666bde11baa42ca9a7b84de29162a7e","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:13:42.711 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:13:42.711 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:13:42.711 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:13:42.711 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:13:42.712 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:13:42.712 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:13:42.712 +02:00 [DBG] Start discovery request
2019-04-28 14:13:42.744 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:13:42.744 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:13:42.744 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:13:42.745 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:13:42.745 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:13:42.745 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:13:42.745 +02:00 [DBG] Start token request.
2019-04-28 14:13:42.745 +02:00 [DBG] Start client validation
2019-04-28 14:13:42.745 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:13:42.745 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:13:42.746 +02:00 [DBG] client id without secret found
2019-04-28 14:13:42.746 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:13:42.746 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:13:42.746 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:13:42.746 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:13:42.746 +02:00 [DBG] Client validation success
2019-04-28 14:13:42.747 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C4:00000012","TimeStamp":"2019-04-28T12:13:42.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:13:42.747 +02:00 [DBG] Start token request validation
2019-04-28 14:13:42.747 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:13:42.770 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:13:42.777 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:13:42.777 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"f5709a18591d3dd8a880e0944bb4b3843b7109856b43ea68cd2e18490bf79f37","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"f5709a18591d3dd8a880e0944bb4b3843b7109856b43ea68cd2e18490bf79f37","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"eb746f23ad2f41f09f0ebf2bd5c70671eaf70665bc1f41e09320dd94cc6a912e155de071c88a4534b5a9a1291fa016b4","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:13:42.778 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:13:42.778 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:13:42.778 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:13:42.797 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:13:42.797 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:13:42.797 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:13:42.800 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****J_BA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****saOg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C4:00000012","TimeStamp":"2019-04-28T12:13:42.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:13:42.800 +02:00 [DBG] Token request success.
2019-04-28 14:13:42.808 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:13:42.808 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:13:42.808 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:13:42.816 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:13:42.816 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:13:42.816 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:13:42.816 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:13:42.816 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:13:42.817 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:13:42.817 +02:00 [DBG] Start userinfo request
2019-04-28 14:13:42.817 +02:00 [DBG] Bearer token found in header
2019-04-28 14:13:42.819 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:13:42.819 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:13:42.824 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:13:42.824 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556453622,"exp":1556453712,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:13:42.824 +02:00 [DBG] Creating userinfo response
2019-04-28 14:13:42.824 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:13:42.824 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:13:42.824 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:13:42.824 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:13:42.832 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:13:42.832 +02:00 [DBG] End userinfo request
2019-04-28 14:15:51.476 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:15:51.476 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:15:51.477 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:15:51.477 +02:00 [DBG] Rendering check session result
2019-04-28 14:15:52.384 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:15:52.384 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:15:52.384 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:15:52.384 +02:00 [DBG] Start authorize request
2019-04-28 14:15:52.385 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:15:52.385 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:15:52.385 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:15:52.385 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:15:52.385 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:15:52.385 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"e1858607a67b4fc98797f04d86455a1a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"e1858607a67b4fc98797f04d86455a1a","code_challenge":"sS6cuZOaTn5mRVuAw5kpcHoBT106qRXFx7vIeDNxzps","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:15:52.433 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:15:52.433 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:15:52.439 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****23de","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000002","TimeStamp":"2019-04-28T12:15:52.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:15:52.439 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"e1858607a67b4fc98797f04d86455a1a","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:15:53.233 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:15:53.234 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:15:53.234 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:15:53.235 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:15:53.236 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:15:53.236 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:15:53.236 +02:00 [DBG] Start discovery request
2019-04-28 14:15:53.270 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:15:53.270 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:15:53.270 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:15:53.270 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:15:53.271 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:15:53.271 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:15:53.271 +02:00 [DBG] Start token request.
2019-04-28 14:15:53.271 +02:00 [DBG] Start client validation
2019-04-28 14:15:53.271 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:15:53.272 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:15:53.272 +02:00 [DBG] client id without secret found
2019-04-28 14:15:53.272 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:15:53.272 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:15:53.272 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:15:53.272 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:15:53.272 +02:00 [DBG] Client validation success
2019-04-28 14:15:53.272 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000004","TimeStamp":"2019-04-28T12:15:53.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:15:53.273 +02:00 [DBG] Start token request validation
2019-04-28 14:15:53.273 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:15:53.295 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:15:53.302 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:15:53.302 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"af0b06d5bea93e85f1fc87f8e0053e599c3c658922fe79ca95ed37d9bad823de","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"af0b06d5bea93e85f1fc87f8e0053e599c3c658922fe79ca95ed37d9bad823de","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"3134e4a8507949c89b80c0e2c00a1583dad29a4aef804a8a95d8d2a36672164b3cb88e0fa4a244ffb3a8a3b2956220d0","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:15:53.302 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:15:53.302 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:15:53.302 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:15:53.317 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:15:53.317 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:15:53.318 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:15:53.320 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****GZdQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****mSRg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000004","TimeStamp":"2019-04-28T12:15:53.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:15:53.321 +02:00 [DBG] Token request success.
2019-04-28 14:15:53.349 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:15:53.349 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:15:53.349 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:15:53.356 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:15:53.356 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:15:53.357 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:15:53.357 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:15:53.357 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:15:53.357 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:15:53.357 +02:00 [DBG] Start userinfo request
2019-04-28 14:15:53.357 +02:00 [DBG] Bearer token found in header
2019-04-28 14:15:53.360 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:15:53.360 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:15:53.366 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:15:53.366 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556453753,"exp":1556453843,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:15:53.366 +02:00 [DBG] Creating userinfo response
2019-04-28 14:15:53.367 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:15:53.367 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:15:53.367 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:15:53.367 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:15:53.373 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:15:53.374 +02:00 [DBG] End userinfo request
2019-04-28 14:16:43.426 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:16:43.426 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:16:43.426 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:16:43.427 +02:00 [DBG] Start authorize request
2019-04-28 14:16:43.427 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:16:43.427 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:16:43.427 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:16:43.427 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:16:43.429 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:16:43.429 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"d2fb93bf88f546389cc0236257944574","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"d2fb93bf88f546389cc0236257944574","code_challenge":"WYxVBFA1Ewtgh5LNCiNLhmBnuG-aEiFuN1KDsQpXL-Q","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:16:43.510 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:16:43.510 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:16:43.519 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****f5c4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000007","TimeStamp":"2019-04-28T12:16:43.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:16:43.520 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"d2fb93bf88f546389cc0236257944574","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:16:45.841 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:16:45.842 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:16:45.842 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:16:45.843 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:16:45.843 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:16:45.843 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:16:45.843 +02:00 [DBG] Start discovery request
2019-04-28 14:16:45.903 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:16:45.903 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:16:45.903 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:16:45.903 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:16:45.904 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:16:45.904 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:16:45.904 +02:00 [DBG] Start token request.
2019-04-28 14:16:45.904 +02:00 [DBG] Start client validation
2019-04-28 14:16:45.904 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:16:45.904 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:16:45.904 +02:00 [DBG] client id without secret found
2019-04-28 14:16:45.904 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:16:45.904 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:16:45.904 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:16:45.904 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:16:45.904 +02:00 [DBG] Client validation success
2019-04-28 14:16:45.905 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000009","TimeStamp":"2019-04-28T12:16:45.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:16:45.905 +02:00 [DBG] Start token request validation
2019-04-28 14:16:45.905 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:16:45.917 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:16:45.924 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:16:45.924 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"948d7df81ea681fe9a765ead493014293b160e07db3b258f9644af6d4405f5c4","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"948d7df81ea681fe9a765ead493014293b160e07db3b258f9644af6d4405f5c4","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"5d6bf4fe081f4c25a28ef0552c7c49021be92aeea78d4d27bc7bbc232b4681710afa8beda425420699de68affe4857f7","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:16:45.924 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:16:45.924 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:16:45.924 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:16:45.935 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:16:45.936 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:16:45.936 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:16:45.939 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****Gh_w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Tuvw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000009","TimeStamp":"2019-04-28T12:16:45.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:16:45.939 +02:00 [DBG] Token request success.
2019-04-28 14:16:45.946 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:16:45.946 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:16:45.946 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:16:45.952 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:16:45.952 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:16:45.952 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:16:45.952 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:16:45.952 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:16:45.953 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:16:45.953 +02:00 [DBG] Start userinfo request
2019-04-28 14:16:45.953 +02:00 [DBG] Bearer token found in header
2019-04-28 14:16:45.955 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:16:45.955 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:16:45.962 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:16:45.962 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556453805,"exp":1556453895,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:16:45.962 +02:00 [DBG] Creating userinfo response
2019-04-28 14:16:45.962 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:16:45.962 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:16:45.963 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:16:45.963 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:16:45.979 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:16:45.979 +02:00 [DBG] End userinfo request
2019-04-28 14:17:36.324 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:17:36.324 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:17:36.324 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:17:36.324 +02:00 [DBG] Start authorize request
2019-04-28 14:17:36.324 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:17:36.324 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:17:36.324 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:17:36.324 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:17:36.324 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:17:36.325 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"dfb6410455da449db5db5fdfef20ad0d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"dfb6410455da449db5db5fdfef20ad0d","code_challenge":"OwaqMyoQRFvkWjbi5DBuhjYKj8WpdhvBcDmREB18tGE","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:17:36.343 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:17:36.343 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:17:36.351 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****047c","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:0000000C","TimeStamp":"2019-04-28T12:17:36.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:17:36.351 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"dfb6410455da449db5db5fdfef20ad0d","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:17:38.795 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:17:38.795 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:17:38.795 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:17:38.796 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:17:38.796 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:17:38.796 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:17:38.796 +02:00 [DBG] Start discovery request
2019-04-28 14:17:38.860 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:17:38.861 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:17:38.861 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:17:38.861 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:17:38.862 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:17:38.862 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:17:38.862 +02:00 [DBG] Start token request.
2019-04-28 14:17:38.862 +02:00 [DBG] Start client validation
2019-04-28 14:17:38.862 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:17:38.862 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:17:38.862 +02:00 [DBG] client id without secret found
2019-04-28 14:17:38.862 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:17:38.862 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:17:38.863 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:17:38.863 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:17:38.863 +02:00 [DBG] Client validation success
2019-04-28 14:17:38.863 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:0000000E","TimeStamp":"2019-04-28T12:17:38.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:17:38.863 +02:00 [DBG] Start token request validation
2019-04-28 14:17:38.863 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:17:38.874 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:17:38.915 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:17:38.916 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"9176b98f337e9d2f255d2856f742dbd12064eedc4302df3afc9eca07fc3c047c","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"9176b98f337e9d2f255d2856f742dbd12064eedc4302df3afc9eca07fc3c047c","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"0fe52873dd234486ac9e2c8cbd00979dd85c803c2e28456797845a865cee3ea6f6a1cd85c77c457ab9ce09564c3402bb","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:17:38.916 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:17:38.916 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:17:38.916 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:17:38.927 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:17:38.928 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:17:38.928 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:17:38.931 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****EuTQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ln4A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:0000000E","TimeStamp":"2019-04-28T12:17:38.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:17:38.931 +02:00 [DBG] Token request success.
2019-04-28 14:17:38.942 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:17:38.942 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:17:38.942 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:17:38.949 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:17:38.949 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:17:38.949 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:17:38.950 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:17:38.950 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:17:38.950 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:17:38.950 +02:00 [DBG] Start userinfo request
2019-04-28 14:17:38.950 +02:00 [DBG] Bearer token found in header
2019-04-28 14:17:38.953 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:17:38.953 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:17:38.959 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:17:38.959 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556453858,"exp":1556453948,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:17:38.959 +02:00 [DBG] Creating userinfo response
2019-04-28 14:17:38.959 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:17:38.959 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:17:38.960 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:17:38.960 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:17:38.968 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:17:38.968 +02:00 [DBG] End userinfo request
2019-04-28 14:18:01.678 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:18:01.678 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:18:01.678 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:18:01.679 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:18:01.679 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:18:01.679 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:18:01.679 +02:00 [DBG] Start discovery request
2019-04-28 14:18:02.069 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:18:02.069 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:18:02.069 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:18:02.070 +02:00 [DBG] Rendering check session result
2019-04-28 14:18:23.399 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:18:23.399 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:18:23.400 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:18:23.401 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:18:23.401 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:18:23.401 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:18:23.402 +02:00 [DBG] Start discovery request
2019-04-28 14:18:23.773 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:18:23.773 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:18:23.773 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:18:23.773 +02:00 [DBG] Rendering check session result
2019-04-28 14:18:28.440 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:18:28.441 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:18:28.441 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:18:28.441 +02:00 [DBG] Start authorize request
2019-04-28 14:18:28.441 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:18:28.441 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:18:28.441 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:18:28.441 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:18:28.441 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:18:28.442 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"434fc69e14a441d0888c9d6237f9b108","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"434fc69e14a441d0888c9d6237f9b108","code_challenge":"fM8jTAdIaeiPTBk8Zm3H1yq96W3kpf0NL7IbxjUtX2Y","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:18:28.460 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:18:28.460 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:18:28.466 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****c683","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000015","TimeStamp":"2019-04-28T12:18:28.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:18:28.467 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"434fc69e14a441d0888c9d6237f9b108","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:18:29.646 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:18:29.646 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:18:29.646 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:18:29.647 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:18:29.647 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:18:29.647 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:18:29.647 +02:00 [DBG] Start discovery request
2019-04-28 14:18:29.685 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:18:29.685 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:18:29.685 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:18:29.686 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:18:29.686 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:18:29.686 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:18:29.686 +02:00 [DBG] Start token request.
2019-04-28 14:18:29.686 +02:00 [DBG] Start client validation
2019-04-28 14:18:29.686 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:18:29.686 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:18:29.687 +02:00 [DBG] client id without secret found
2019-04-28 14:18:29.687 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:18:29.687 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:18:29.687 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:18:29.687 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:18:29.687 +02:00 [DBG] Client validation success
2019-04-28 14:18:29.687 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000017","TimeStamp":"2019-04-28T12:18:29.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:18:29.688 +02:00 [DBG] Start token request validation
2019-04-28 14:18:29.688 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:18:29.699 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:18:29.704 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:18:29.705 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"e6bfa61fd2d861a21edcaf09bb8e4d623396e1de41e8986b25bf3f6dd77cc683","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"e6bfa61fd2d861a21edcaf09bb8e4d623396e1de41e8986b25bf3f6dd77cc683","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"f73974c209054ef6ab5ffcc6b6c15b3b66893367c040444c863e2470cb9cb64a8780d55f437942abaea0ca34b1ac07e7","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:18:29.705 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:18:29.705 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:18:29.705 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:18:29.716 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:18:29.716 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:18:29.716 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:18:29.719 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****5F5A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****dxkg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000017","TimeStamp":"2019-04-28T12:18:29.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:18:29.720 +02:00 [DBG] Token request success.
2019-04-28 14:18:29.729 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:18:29.729 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:18:29.729 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:18:29.735 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:18:29.735 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:18:29.735 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:18:29.736 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:18:29.736 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:18:29.736 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:18:29.736 +02:00 [DBG] Start userinfo request
2019-04-28 14:18:29.736 +02:00 [DBG] Bearer token found in header
2019-04-28 14:18:29.739 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:18:29.739 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:18:29.760 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:18:29.760 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556453909,"exp":1556453999,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:18:29.760 +02:00 [DBG] Creating userinfo response
2019-04-28 14:18:29.760 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:18:29.760 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:18:29.760 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:18:29.761 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:18:29.769 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:18:29.769 +02:00 [DBG] End userinfo request
2019-04-28 14:19:19.818 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:19:19.818 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:19:19.818 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:19:19.818 +02:00 [DBG] Start authorize request
2019-04-28 14:19:19.819 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:19:19.819 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:19:19.819 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:19:19.819 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:19:19.820 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:19:19.820 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"3761878f57b94fc4a926465d5c212c4a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"3761878f57b94fc4a926465d5c212c4a","code_challenge":"tSw44g1OT9VzhJdpQBwDaNMJKYuXMUS8lhjwNw6g0AQ","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:19:19.856 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:19:19.856 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:19:19.864 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****e132","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:0000001A","TimeStamp":"2019-04-28T12:19:19.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:19:19.864 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"3761878f57b94fc4a926465d5c212c4a","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:19:20.933 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:19:20.933 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:19:20.933 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:19:20.935 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:19:20.936 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:19:20.936 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:19:20.936 +02:00 [DBG] Start discovery request
2019-04-28 14:19:21.041 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:19:21.041 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:19:21.041 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:19:21.041 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:19:21.042 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:19:21.042 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:19:21.042 +02:00 [DBG] Start token request.
2019-04-28 14:19:21.042 +02:00 [DBG] Start client validation
2019-04-28 14:19:21.042 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:19:21.042 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:19:21.042 +02:00 [DBG] client id without secret found
2019-04-28 14:19:21.042 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:19:21.042 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:19:21.043 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:19:21.043 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:19:21.043 +02:00 [DBG] Client validation success
2019-04-28 14:19:21.043 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:0000001C","TimeStamp":"2019-04-28T12:19:21.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:19:21.043 +02:00 [DBG] Start token request validation
2019-04-28 14:19:21.043 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:19:21.064 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:19:21.074 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:19:21.074 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"241b24e94835ab80d7582bf0780cf188d4898cf6608b67cbae5aac543029e132","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"241b24e94835ab80d7582bf0780cf188d4898cf6608b67cbae5aac543029e132","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"9c4419aabe1d4829b27559f75426647df52c9a44ee96484f91fa4f6354488670aadb0900984344f9906102e52457c885","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:19:21.074 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:19:21.075 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:19:21.075 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:19:21.102 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:19:21.102 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:19:21.102 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:19:21.106 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****iu_g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****xw4g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:0000001C","TimeStamp":"2019-04-28T12:19:21.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:19:21.106 +02:00 [DBG] Token request success.
2019-04-28 14:19:21.137 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:19:21.139 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:19:21.139 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:19:21.161 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:19:21.161 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:19:21.161 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:19:21.161 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:19:21.162 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:19:21.162 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:19:21.162 +02:00 [DBG] Start userinfo request
2019-04-28 14:19:21.162 +02:00 [DBG] Bearer token found in header
2019-04-28 14:19:21.164 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:19:21.165 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:19:21.199 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:19:21.199 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556453961,"exp":1556454051,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:19:21.200 +02:00 [DBG] Creating userinfo response
2019-04-28 14:19:21.200 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:19:21.200 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:19:21.200 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:19:21.200 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:19:21.209 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:19:21.209 +02:00 [DBG] End userinfo request
2019-04-28 14:19:53.205 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:19:53.205 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:19:53.205 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:19:53.206 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:19:53.206 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:19:53.206 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:19:53.206 +02:00 [DBG] Start discovery request
2019-04-28 14:19:53.437 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:19:53.437 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:19:53.438 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:19:53.438 +02:00 [DBG] Rendering check session result
2019-04-28 14:20:11.695 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:20:11.695 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:20:11.695 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:20:11.695 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:20:11.696 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:20:11.696 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:20:11.696 +02:00 [DBG] Start discovery request
2019-04-28 14:20:11.957 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:20:11.958 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:20:11.958 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:20:11.960 +02:00 [DBG] Rendering check session result
2019-04-28 14:20:12.761 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:20:12.761 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:20:12.762 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:20:12.762 +02:00 [DBG] Start authorize request
2019-04-28 14:20:12.762 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:20:12.762 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:20:12.762 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:20:12.762 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:20:12.763 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:20:12.763 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"a16b81a105f64b439120593e4e8b0c7a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"a16b81a105f64b439120593e4e8b0c7a","code_challenge":"jW_fMwRi_4p_ZKFnTwuYLg2UC_e7HEKA9TW3CWh7X3k","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:20:12.776 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:20:12.777 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:20:12.792 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****dbeb","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000023","TimeStamp":"2019-04-28T12:20:12.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:20:12.793 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"a16b81a105f64b439120593e4e8b0c7a","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:20:14.084 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:20:14.084 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:20:14.084 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:20:14.084 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:20:14.086 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:20:14.086 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:20:14.086 +02:00 [DBG] Start discovery request
2019-04-28 14:20:14.140 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:20:14.140 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:20:14.140 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:20:14.140 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:20:14.141 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:20:14.141 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:20:14.141 +02:00 [DBG] Start token request.
2019-04-28 14:20:14.141 +02:00 [DBG] Start client validation
2019-04-28 14:20:14.141 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:20:14.141 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:20:14.142 +02:00 [DBG] client id without secret found
2019-04-28 14:20:14.142 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:20:14.142 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:20:14.142 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:20:14.142 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:20:14.142 +02:00 [DBG] Client validation success
2019-04-28 14:20:14.142 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000025","TimeStamp":"2019-04-28T12:20:14.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:20:14.142 +02:00 [DBG] Start token request validation
2019-04-28 14:20:14.142 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:20:14.155 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:20:14.164 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:20:14.164 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"5f34650bb2bf9bacc8309a4272c49298a636462402526b43153fb3b124efdbeb","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"5f34650bb2bf9bacc8309a4272c49298a636462402526b43153fb3b124efdbeb","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"5c1aa7f95baa425dbf5a39a7f2fcde718b506fe4264e4679804891653483053c8842574b01b343be9736993cd5adcbc3","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:20:14.164 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:20:14.164 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:20:14.164 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:20:14.177 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:20:14.178 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:20:14.178 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:20:14.181 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****VUvg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****2RhA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000025","TimeStamp":"2019-04-28T12:20:14.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:20:14.181 +02:00 [DBG] Token request success.
2019-04-28 14:20:14.200 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:20:14.201 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:20:14.201 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:20:14.215 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:20:14.215 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:20:14.215 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:20:14.215 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:20:14.216 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:20:14.216 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:20:14.216 +02:00 [DBG] Start userinfo request
2019-04-28 14:20:14.216 +02:00 [DBG] Bearer token found in header
2019-04-28 14:20:14.219 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:20:14.220 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:20:14.272 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:20:14.273 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454014,"exp":1556454104,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:20:14.273 +02:00 [DBG] Creating userinfo response
2019-04-28 14:20:14.273 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:20:14.273 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:20:14.273 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:20:14.273 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:20:14.288 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:20:14.288 +02:00 [DBG] End userinfo request
2019-04-28 14:20:25.468 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:20:25.468 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:20:25.468 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:20:25.470 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:20:25.472 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:20:25.472 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:20:25.473 +02:00 [DBG] Start discovery request
2019-04-28 14:20:25.588 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:20:25.588 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:20:25.588 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:20:25.588 +02:00 [DBG] Rendering check session result
2019-04-28 14:20:49.755 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:20:49.755 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:20:49.755 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:20:49.756 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:20:49.756 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:20:49.757 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:20:49.758 +02:00 [DBG] Start discovery request
2019-04-28 14:20:49.995 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:20:49.996 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:20:49.996 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:20:49.996 +02:00 [DBG] Rendering check session result
2019-04-28 14:21:04.804 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:21:04.806 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:21:04.806 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:21:04.806 +02:00 [DBG] Start authorize request
2019-04-28 14:21:04.806 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:21:04.806 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:21:04.807 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:21:04.807 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:21:04.808 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:21:04.808 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"cfb1a37f5b8c4553a9e18f1e1e3048c9","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"cfb1a37f5b8c4553a9e18f1e1e3048c9","code_challenge":"_28XcfdMSnVCFBZDgxvq4QgannFwL0KyU_chVwG4AWg","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:21:04.855 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:21:04.855 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:21:04.862 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****558d","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:0000002C","TimeStamp":"2019-04-28T12:21:04.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:21:04.862 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"cfb1a37f5b8c4553a9e18f1e1e3048c9","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:21:06.143 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:21:06.143 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:21:06.143 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:21:06.144 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:21:06.144 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:21:06.144 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:21:06.144 +02:00 [DBG] Start discovery request
2019-04-28 14:21:06.227 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:21:06.227 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:21:06.227 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:21:06.228 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:21:06.229 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:21:06.229 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:21:06.229 +02:00 [DBG] Start token request.
2019-04-28 14:21:06.229 +02:00 [DBG] Start client validation
2019-04-28 14:21:06.229 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:21:06.229 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:21:06.229 +02:00 [DBG] client id without secret found
2019-04-28 14:21:06.229 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:21:06.229 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:21:06.229 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:21:06.230 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:21:06.230 +02:00 [DBG] Client validation success
2019-04-28 14:21:06.230 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:0000002E","TimeStamp":"2019-04-28T12:21:06.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:21:06.230 +02:00 [DBG] Start token request validation
2019-04-28 14:21:06.230 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:21:06.253 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:21:06.259 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:21:06.260 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"363d5496dcec90101cd1f372f923f29b70d7ad2211465982f09fe9b0327d558d","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"363d5496dcec90101cd1f372f923f29b70d7ad2211465982f09fe9b0327d558d","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"a98453992099419eb701e4d544efd0857cd0531d8c1247beac6e88369857b55a99a880ca6242440e843ab1ab735b301e","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:21:06.260 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:21:06.260 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:21:06.260 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:21:06.279 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:21:06.279 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:21:06.279 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:21:06.282 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****YVPQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ZZQA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:0000002E","TimeStamp":"2019-04-28T12:21:06.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:21:06.283 +02:00 [DBG] Token request success.
2019-04-28 14:21:06.294 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:21:06.294 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:21:06.294 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:21:06.302 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:21:06.302 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:21:06.302 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:21:06.303 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:21:06.303 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:21:06.303 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:21:06.303 +02:00 [DBG] Start userinfo request
2019-04-28 14:21:06.303 +02:00 [DBG] Bearer token found in header
2019-04-28 14:21:06.306 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:21:06.306 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:21:06.310 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:21:06.310 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454066,"exp":1556454156,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:21:06.311 +02:00 [DBG] Creating userinfo response
2019-04-28 14:21:06.311 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:21:06.311 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:21:06.311 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:21:06.311 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:21:06.317 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:21:06.317 +02:00 [DBG] End userinfo request
2019-04-28 14:21:23.208 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:21:23.208 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:21:23.208 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:21:23.208 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:21:23.209 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:21:23.209 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:21:23.209 +02:00 [DBG] Start discovery request
2019-04-28 14:21:23.428 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:21:23.428 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:21:23.428 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:21:23.429 +02:00 [DBG] Rendering check session result
2019-04-28 14:21:58.330 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:21:58.330 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:21:58.330 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:21:58.330 +02:00 [DBG] Start authorize request
2019-04-28 14:21:58.330 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:21:58.331 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:21:58.331 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:21:58.331 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:21:58.331 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:21:58.331 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"adfd2780212046c0bd570912bbb8ca61","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"adfd2780212046c0bd570912bbb8ca61","code_challenge":"OlVP9DNZTyswVicLtqJgdgDBrhHktPNVdZmo5sXoXNw","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:21:58.340 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:21:58.340 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:21:58.346 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****cd1a","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000033","TimeStamp":"2019-04-28T12:21:58.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:21:58.346 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"adfd2780212046c0bd570912bbb8ca61","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:22:00.564 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:22:00.564 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:22:00.564 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:22:00.564 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:22:00.565 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:22:00.565 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:22:00.565 +02:00 [DBG] Start discovery request
2019-04-28 14:22:00.630 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:22:00.630 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:22:00.630 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:22:00.630 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:22:00.630 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:22:00.630 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:22:00.630 +02:00 [DBG] Start token request.
2019-04-28 14:22:00.631 +02:00 [DBG] Start client validation
2019-04-28 14:22:00.631 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:22:00.631 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:22:00.631 +02:00 [DBG] client id without secret found
2019-04-28 14:22:00.631 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:22:00.631 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:22:00.631 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:22:00.631 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:22:00.631 +02:00 [DBG] Client validation success
2019-04-28 14:22:00.631 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000035","TimeStamp":"2019-04-28T12:22:00.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:22:00.631 +02:00 [DBG] Start token request validation
2019-04-28 14:22:00.631 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:22:00.642 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:22:00.647 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:22:00.647 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"642fa22640a5e03cd77f64ec37bbff17d8c0bdc63f44a47d4d9fb3b89578cd1a","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"642fa22640a5e03cd77f64ec37bbff17d8c0bdc63f44a47d4d9fb3b89578cd1a","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"3ce34ad527f646b2bd5b2fc60780c70ba18794220c154f71a66e10be3c84e9cdbb3f1e21d9ba4ca49b5120fc6933ead6","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:22:00.647 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:22:00.648 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:22:00.648 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:22:00.660 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:22:00.660 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:22:00.660 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:22:00.663 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****y-ZQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****LV5A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000035","TimeStamp":"2019-04-28T12:22:00.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:22:00.663 +02:00 [DBG] Token request success.
2019-04-28 14:22:00.674 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:22:00.674 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:22:00.674 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:22:00.683 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:22:00.683 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:22:00.683 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:22:00.683 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:22:00.684 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:22:00.684 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:22:00.684 +02:00 [DBG] Start userinfo request
2019-04-28 14:22:00.684 +02:00 [DBG] Bearer token found in header
2019-04-28 14:22:00.686 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:22:00.686 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:22:00.700 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:22:00.700 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454120,"exp":1556454210,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:22:00.700 +02:00 [DBG] Creating userinfo response
2019-04-28 14:22:00.700 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:22:00.700 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:22:00.701 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:22:00.701 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:22:00.718 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:22:00.718 +02:00 [DBG] End userinfo request
2019-04-28 14:22:50.766 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:22:50.766 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:22:50.766 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:22:50.766 +02:00 [DBG] Start authorize request
2019-04-28 14:22:50.766 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:22:50.766 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:22:50.766 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:22:50.766 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:22:50.767 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:22:50.767 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"9d8bb35a7e0f4a498f57e84adfea85f8","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"9d8bb35a7e0f4a498f57e84adfea85f8","code_challenge":"93EEvjCEMPgR6S8AG2VLKPavnJcpeVJKysW_nIPgfGs","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:22:50.789 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:22:50.789 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:22:50.797 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****9db1","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C5:00000038","TimeStamp":"2019-04-28T12:22:50.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:22:50.797 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"9d8bb35a7e0f4a498f57e84adfea85f8","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:22:52.258 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:22:52.259 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:22:52.261 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:22:52.262 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:22:52.264 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:22:52.264 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:22:52.264 +02:00 [DBG] Start discovery request
2019-04-28 14:22:52.275 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:22:52.275 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:22:52.275 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:22:52.276 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:22:52.276 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:22:52.276 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:22:52.276 +02:00 [DBG] Start token request.
2019-04-28 14:22:52.276 +02:00 [DBG] Start client validation
2019-04-28 14:22:52.276 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:22:52.277 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:22:52.277 +02:00 [DBG] client id without secret found
2019-04-28 14:22:52.277 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:22:52.277 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:22:52.277 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:22:52.277 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:22:52.277 +02:00 [DBG] Client validation success
2019-04-28 14:22:52.277 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000001","TimeStamp":"2019-04-28T12:22:52.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:22:52.277 +02:00 [DBG] Start token request validation
2019-04-28 14:22:52.277 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:22:52.304 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:22:52.311 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:22:52.311 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"38f58320cc5a9a944b56b7107ad0bae041637f8d5d395b83ad5bd136a17f9db1","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"38f58320cc5a9a944b56b7107ad0bae041637f8d5d395b83ad5bd136a17f9db1","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"90442b9699594a89bc266df84a158016d219bd858af34bf0a00f151c9bc6ff6680f08de0977d4b28b7afed1555e072d2","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:22:52.311 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:22:52.312 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:22:52.312 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:22:52.335 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:22:52.336 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:22:52.336 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:22:52.339 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****etng","$type":"Token"},{"TokenType":"access_token","TokenValue":"****MsjQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000001","TimeStamp":"2019-04-28T12:22:52.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:22:52.339 +02:00 [DBG] Token request success.
2019-04-28 14:22:52.351 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:22:52.351 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:22:52.351 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:22:52.359 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:22:52.359 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:22:52.359 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:22:52.360 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:22:52.360 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:22:52.360 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:22:52.360 +02:00 [DBG] Start userinfo request
2019-04-28 14:22:52.360 +02:00 [DBG] Bearer token found in header
2019-04-28 14:22:52.363 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:22:52.363 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:22:52.367 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:22:52.367 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454172,"exp":1556454262,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:22:52.368 +02:00 [DBG] Creating userinfo response
2019-04-28 14:22:52.368 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:22:52.368 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:22:52.368 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:22:52.368 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:22:52.383 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:22:52.383 +02:00 [DBG] End userinfo request
2019-04-28 14:23:42.510 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:23:42.510 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:23:42.510 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:23:42.510 +02:00 [DBG] Start authorize request
2019-04-28 14:23:42.510 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:23:42.510 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:23:42.510 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:23:42.511 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:23:42.511 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:23:42.511 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"f252b27afa54466b9d22865d3202a3e2","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"f252b27afa54466b9d22865d3202a3e2","code_challenge":"P7MQRVwaWQPP33LaYcWH_-TGOaQc7ZEklTBig_Su8Zk","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:23:42.572 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:23:42.572 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:23:42.580 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****7ca4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000004","TimeStamp":"2019-04-28T12:23:42.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:23:42.580 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"f252b27afa54466b9d22865d3202a3e2","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:23:43.920 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:23:43.920 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:23:43.920 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:23:43.922 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:23:43.923 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:23:43.923 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:23:43.923 +02:00 [DBG] Start discovery request
2019-04-28 14:23:43.978 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:23:43.978 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:23:43.978 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:23:43.979 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:23:43.980 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:23:43.980 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:23:43.980 +02:00 [DBG] Start token request.
2019-04-28 14:23:43.980 +02:00 [DBG] Start client validation
2019-04-28 14:23:43.980 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:23:43.980 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:23:43.981 +02:00 [DBG] client id without secret found
2019-04-28 14:23:43.981 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:23:43.981 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:23:43.981 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:23:43.981 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:23:43.981 +02:00 [DBG] Client validation success
2019-04-28 14:23:43.981 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000006","TimeStamp":"2019-04-28T12:23:43.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:23:43.982 +02:00 [DBG] Start token request validation
2019-04-28 14:23:43.982 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:23:43.994 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:23:44.003 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:23:44.003 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"4cd0a65a34fa6731bfcb259e23c39def7b3f8250bf0599ad8ff56bad25a87ca4","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"4cd0a65a34fa6731bfcb259e23c39def7b3f8250bf0599ad8ff56bad25a87ca4","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"cd723a94bbb14f0887bd18be1bc811ef9d80b6107433441ba93fe057769963e692b4eba10dc34e08889eec49c5574fe2","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:23:44.004 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:23:44.004 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:23:44.004 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:23:44.020 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:23:44.020 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:23:44.020 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:23:44.023 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****MynQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****MZOA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000006","TimeStamp":"2019-04-28T12:23:44.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:23:44.023 +02:00 [DBG] Token request success.
2019-04-28 14:23:44.051 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:23:44.051 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:23:44.051 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:23:44.060 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:23:44.062 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:23:44.062 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:23:44.063 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:23:44.063 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:23:44.064 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:23:44.064 +02:00 [DBG] Start userinfo request
2019-04-28 14:23:44.064 +02:00 [DBG] Bearer token found in header
2019-04-28 14:23:44.066 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:23:44.067 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:23:44.074 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:23:44.074 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454224,"exp":1556454314,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:23:44.074 +02:00 [DBG] Creating userinfo response
2019-04-28 14:23:44.075 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:23:44.075 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:23:44.075 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:23:44.075 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:23:44.116 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:23:44.116 +02:00 [DBG] End userinfo request
2019-04-28 14:24:28.371 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:24:28.371 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:24:28.371 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:24:28.371 +02:00 [DBG] Start authorize request
2019-04-28 14:24:28.371 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:24:28.371 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:24:28.372 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:24:28.372 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:24:28.372 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:24:28.373 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"d1faf505a1914d13b39058d99a2d80bf","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile api1","state":"d1faf505a1914d13b39058d99a2d80bf","code_challenge":"AkwI5p__SRl9noO6TT_9fgLV52qftuSIjJr_5cRSPnM","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:24:28.400 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:24:28.401 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:24:28.413 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****f8ca","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000009","TimeStamp":"2019-04-28T12:24:28.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:24:28.413 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/callback","State":"d1faf505a1914d13b39058d99a2d80bf","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:24:29.525 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:24:29.525 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:24:29.537 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:24:29.537 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:24:29.538 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:24:29.538 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:24:29.538 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:24:29.538 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:24:29.538 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:24:29.538 +02:00 [DBG] Start discovery request
2019-04-28 14:24:29.538 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:24:29.539 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:24:29.539 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:24:29.539 +02:00 [DBG] Start discovery request
2019-04-28 14:24:29.642 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:24:29.657 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:24:29.657 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:24:29.657 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:24:29.657 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:24:29.657 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:24:29.657 +02:00 [DBG] Rendering check session result
2019-04-28 14:24:29.657 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:24:29.658 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:24:29.658 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:24:29.658 +02:00 [DBG] Start token request.
2019-04-28 14:24:29.658 +02:00 [DBG] Start client validation
2019-04-28 14:24:29.658 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:24:29.658 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:24:29.661 +02:00 [DBG] client id without secret found
2019-04-28 14:24:29.661 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:24:29.661 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:24:29.662 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:24:29.662 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:24:29.662 +02:00 [DBG] Client validation success
2019-04-28 14:24:29.662 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:0000000B","TimeStamp":"2019-04-28T12:24:29.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:24:29.662 +02:00 [DBG] Start token request validation
2019-04-28 14:24:29.662 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:24:29.678 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:24:29.703 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:24:29.703 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"46de4957feb3ee66c04abae7f4face946e4a6bee4b146d991fc6094cdea3f8ca","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"46de4957feb3ee66c04abae7f4face946e4a6bee4b146d991fc6094cdea3f8ca","redirect_uri":"http://localhost:8080/callback","code_verifier":"cdfbc94af168496f897bc98bfca564edf8864112b8504ab9a679f805bca58c72223186da952a46fc95a12b71ade94937","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:24:29.703 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:24:29.703 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:24:29.703 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:24:29.725 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:24:29.727 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:24:29.727 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:24:29.731 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****scdQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****J3kw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:0000000B","TimeStamp":"2019-04-28T12:24:29.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:24:29.731 +02:00 [DBG] Token request success.
2019-04-28 14:24:29.760 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:24:29.760 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:24:29.760 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:24:29.899 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:24:29.900 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:24:29.900 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:24:29.900 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:24:29.900 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:24:29.900 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:24:29.900 +02:00 [DBG] Start userinfo request
2019-04-28 14:24:29.901 +02:00 [DBG] Bearer token found in header
2019-04-28 14:24:29.903 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:24:29.904 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:24:29.915 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:24:29.916 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454269,"exp":1556454359,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:24:29.916 +02:00 [DBG] Creating userinfo response
2019-04-28 14:24:29.917 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:24:29.917 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:24:29.917 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:24:29.917 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:24:29.962 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:24:29.962 +02:00 [DBG] End userinfo request
2019-04-28 14:24:30.842 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:24:30.842 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:24:30.842 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:24:30.842 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:24:30.843 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:24:30.843 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:24:30.843 +02:00 [DBG] Start discovery request
2019-04-28 14:24:31.006 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:24:31.007 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:24:31.007 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:24:31.007 +02:00 [DBG] Rendering check session result
2019-04-28 14:25:20.885 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:25:20.885 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:25:20.886 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:25:20.886 +02:00 [DBG] Start authorize request
2019-04-28 14:25:20.887 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:25:20.887 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:25:20.887 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:25:20.888 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:25:20.889 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:25:20.889 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"2887f506ae124a3c932af15053c2c3a3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"2887f506ae124a3c932af15053c2c3a3","code_challenge":"AfMWC5934oeKtW5d3cY9hy9f8uV5sgweGDs6kAWkDVg","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:25:20.926 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:25:20.927 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:25:20.935 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****53e1","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000005","TimeStamp":"2019-04-28T12:25:20.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:25:20.935 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"2887f506ae124a3c932af15053c2c3a3","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:25:22.155 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:25:22.170 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:25:22.170 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:25:22.171 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:25:22.171 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:25:22.171 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:25:22.171 +02:00 [DBG] Start discovery request
2019-04-28 14:25:22.198 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:25:22.198 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:25:22.199 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:25:22.199 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:25:22.199 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:25:22.199 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:25:22.199 +02:00 [DBG] Start token request.
2019-04-28 14:25:22.199 +02:00 [DBG] Start client validation
2019-04-28 14:25:22.199 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:25:22.199 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:25:22.206 +02:00 [DBG] client id without secret found
2019-04-28 14:25:22.207 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:25:22.207 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:25:22.207 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:25:22.207 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:25:22.207 +02:00 [DBG] Client validation success
2019-04-28 14:25:22.207 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000006","TimeStamp":"2019-04-28T12:25:22.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:25:22.207 +02:00 [DBG] Start token request validation
2019-04-28 14:25:22.208 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:25:22.221 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:25:22.226 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:25:22.226 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"86a07e46359d8712f9f5c5da96bc8054350aec79fc49cfae0322704bb9cf53e1","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"86a07e46359d8712f9f5c5da96bc8054350aec79fc49cfae0322704bb9cf53e1","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"0ac4e8b297ae4f24a6c7f4ae117edd98b2f0c3c5c112487d8cb74a9db07c80128f2e4235c2ae400fb48af480e51b3a91","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:25:22.227 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:25:22.227 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:25:22.227 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:25:22.237 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:25:22.238 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:25:22.238 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:25:22.241 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****ieSA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****1Xgg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000006","TimeStamp":"2019-04-28T12:25:22.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:25:22.241 +02:00 [DBG] Token request success.
2019-04-28 14:25:22.253 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:25:22.253 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:25:22.253 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:25:22.262 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:25:22.262 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:25:22.262 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:25:22.263 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:25:22.263 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:25:22.263 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:25:22.263 +02:00 [DBG] Start userinfo request
2019-04-28 14:25:22.263 +02:00 [DBG] Bearer token found in header
2019-04-28 14:25:22.265 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:25:22.265 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:25:22.270 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:25:22.270 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454322,"exp":1556454412,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:25:22.270 +02:00 [DBG] Creating userinfo response
2019-04-28 14:25:22.270 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:25:22.270 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:25:22.270 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:25:22.270 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:25:22.276 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:25:22.276 +02:00 [DBG] End userinfo request
2019-04-28 14:26:12.318 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:26:12.318 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:26:12.318 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:26:12.319 +02:00 [DBG] Start authorize request
2019-04-28 14:26:12.319 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:26:12.319 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:26:12.319 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:26:12.319 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:26:12.319 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:26:12.319 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"929da71a07e94e7cbafd57a4418f9c9c","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"929da71a07e94e7cbafd57a4418f9c9c","code_challenge":"_8vf6Kyj7W--poG5LjUPgdXzKgofC0Fhqs6-e6bcjw0","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:26:12.349 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:26:12.349 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:26:12.354 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****a9a4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000010","TimeStamp":"2019-04-28T12:26:12.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:26:12.354 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"929da71a07e94e7cbafd57a4418f9c9c","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:26:14.578 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:26:14.578 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:26:14.578 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:26:14.578 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:26:14.579 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:26:14.579 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:26:14.579 +02:00 [DBG] Start discovery request
2019-04-28 14:26:14.627 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:26:14.627 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:26:14.627 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:26:14.627 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:26:14.627 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:26:14.627 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:26:14.627 +02:00 [DBG] Start token request.
2019-04-28 14:26:14.627 +02:00 [DBG] Start client validation
2019-04-28 14:26:14.628 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:26:14.628 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:26:14.628 +02:00 [DBG] client id without secret found
2019-04-28 14:26:14.628 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:26:14.628 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:26:14.628 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:26:14.628 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:26:14.628 +02:00 [DBG] Client validation success
2019-04-28 14:26:14.628 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000011","TimeStamp":"2019-04-28T12:26:14.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:26:14.628 +02:00 [DBG] Start token request validation
2019-04-28 14:26:14.628 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:26:14.637 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:26:14.644 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:26:14.644 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"c4d8e5c4d0c65f4e7a89b07b08867999faaf22799447d21418c2f2e9410aa9a4","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"c4d8e5c4d0c65f4e7a89b07b08867999faaf22799447d21418c2f2e9410aa9a4","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"7e3494edf5414b4089d1c39302893765ba264f709315434a87b28efa0e569c4bf8d7743c288245ee910571bfa4c90abd","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:26:14.644 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:26:14.644 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:26:14.644 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:26:14.655 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:26:14.655 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:26:14.655 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:26:14.659 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****lt7A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Hk3w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000011","TimeStamp":"2019-04-28T12:26:14.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:26:14.659 +02:00 [DBG] Token request success.
2019-04-28 14:26:14.666 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:26:14.666 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:26:14.666 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:26:14.674 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:26:14.675 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:26:14.675 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:26:14.675 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:26:14.675 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:26:14.675 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:26:14.675 +02:00 [DBG] Start userinfo request
2019-04-28 14:26:14.675 +02:00 [DBG] Bearer token found in header
2019-04-28 14:26:14.678 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:26:14.678 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:26:14.681 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:26:14.682 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454374,"exp":1556454464,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:26:14.682 +02:00 [DBG] Creating userinfo response
2019-04-28 14:26:14.682 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:26:14.682 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:26:14.682 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:26:14.682 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:26:14.696 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:26:14.696 +02:00 [DBG] End userinfo request
2019-04-28 14:26:17.727 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:26:17.727 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:26:17.727 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:26:17.727 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:26:17.727 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:26:17.728 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:26:17.728 +02:00 [DBG] Start discovery request
2019-04-28 14:26:17.979 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:26:17.979 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:26:17.979 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:26:17.979 +02:00 [DBG] Rendering check session result
2019-04-28 14:27:07.756 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:27:07.758 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:27:07.759 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:27:07.759 +02:00 [DBG] Start authorize request
2019-04-28 14:27:07.759 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:27:07.759 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:27:07.759 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:27:07.759 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:27:07.760 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:27:07.760 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"8c8dfd1b321f400a9937b068e542cda3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"8c8dfd1b321f400a9937b068e542cda3","code_challenge":"N2xwEfnVFsT0KXupHdXumxqNUIMn7Xtv2Sn4YiUmxuw","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:27:07.777 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:27:07.777 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:27:07.784 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****a19c","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000000B","TimeStamp":"2019-04-28T12:27:07.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:27:07.784 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"8c8dfd1b321f400a9937b068e542cda3","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:27:09.075 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:27:09.075 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:27:09.075 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:27:09.075 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:27:09.076 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:27:09.076 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:27:09.076 +02:00 [DBG] Start discovery request
2019-04-28 14:27:09.118 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:27:09.135 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:27:09.135 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:27:09.136 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:27:09.136 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:27:09.136 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:27:09.136 +02:00 [DBG] Start token request.
2019-04-28 14:27:09.136 +02:00 [DBG] Start client validation
2019-04-28 14:27:09.136 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:27:09.136 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:27:09.137 +02:00 [DBG] client id without secret found
2019-04-28 14:27:09.137 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:27:09.137 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:27:09.137 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:27:09.137 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:27:09.137 +02:00 [DBG] Client validation success
2019-04-28 14:27:09.137 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000000C","TimeStamp":"2019-04-28T12:27:09.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:27:09.137 +02:00 [DBG] Start token request validation
2019-04-28 14:27:09.137 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:27:09.147 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:27:09.152 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:27:09.160 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"79c1da3afbb8ed79b051bb3e8dff5521799c0a4346a091d36d5fe98e3a14a19c","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"79c1da3afbb8ed79b051bb3e8dff5521799c0a4346a091d36d5fe98e3a14a19c","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"0ce19a77f7b54c16bac75fb4f6faf776b1691b487f1540a5bcc7fe8ca87aa492dad9beb57dc64cce974c599d73990c99","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:27:09.161 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:27:09.161 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:27:09.161 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:27:09.171 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:27:09.171 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:27:09.171 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:27:09.174 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****K04w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Q-Sw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000000C","TimeStamp":"2019-04-28T12:27:09.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:27:09.174 +02:00 [DBG] Token request success.
2019-04-28 14:27:09.185 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:27:09.186 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:27:09.186 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:27:09.193 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:27:09.193 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:27:09.194 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:27:09.194 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:27:09.194 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:27:09.194 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:27:09.194 +02:00 [DBG] Start userinfo request
2019-04-28 14:27:09.195 +02:00 [DBG] Bearer token found in header
2019-04-28 14:27:09.197 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:27:09.197 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:27:09.202 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:27:09.202 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454429,"exp":1556454519,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:27:09.202 +02:00 [DBG] Creating userinfo response
2019-04-28 14:27:09.202 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:27:09.202 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:27:09.202 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:27:09.203 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:27:09.214 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:27:09.214 +02:00 [DBG] End userinfo request
2019-04-28 14:27:59.270 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:27:59.270 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:27:59.270 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:27:59.270 +02:00 [DBG] Start authorize request
2019-04-28 14:27:59.270 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:27:59.271 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:27:59.271 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:27:59.271 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:27:59.271 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:27:59.271 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"fbe4183ac6aa4acbb19ec84ddc23bdc6","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"fbe4183ac6aa4acbb19ec84ddc23bdc6","code_challenge":"CeDfpIeUWTMWvVD5lqv4lzSirLMG6eFg8DyOTztgF0w","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:27:59.329 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:27:59.329 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:27:59.336 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****895b","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000016","TimeStamp":"2019-04-28T12:27:59.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:27:59.336 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"fbe4183ac6aa4acbb19ec84ddc23bdc6","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:28:00.552 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:28:00.552 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:28:00.553 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:28:00.553 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:28:00.553 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:28:00.553 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:28:00.553 +02:00 [DBG] Start discovery request
2019-04-28 14:28:00.593 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:28:00.594 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:28:00.594 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:28:00.594 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:28:00.594 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:28:00.594 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:28:00.594 +02:00 [DBG] Start token request.
2019-04-28 14:28:00.594 +02:00 [DBG] Start client validation
2019-04-28 14:28:00.595 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:28:00.595 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:28:00.596 +02:00 [DBG] client id without secret found
2019-04-28 14:28:00.596 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:28:00.596 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:28:00.596 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:28:00.596 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:28:00.597 +02:00 [DBG] Client validation success
2019-04-28 14:28:00.597 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000017","TimeStamp":"2019-04-28T12:28:00.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:28:00.597 +02:00 [DBG] Start token request validation
2019-04-28 14:28:00.597 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:28:00.616 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:28:00.626 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:28:00.626 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"e9e3a9cf3c662735bd3671f383f40e2adc6b47bf869df353ce874e4dd728895b","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"e9e3a9cf3c662735bd3671f383f40e2adc6b47bf869df353ce874e4dd728895b","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"f524308902c7443eacb7f6c45d1db21218add80e1a584eaeab12c11a04e2587a2bf86ce9658c4272b21282128ca7d593","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:28:00.627 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:28:00.627 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:28:00.627 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:28:00.644 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:28:00.644 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:28:00.644 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:28:00.647 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****7kdg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****M3wg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000017","TimeStamp":"2019-04-28T12:28:00.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:28:00.648 +02:00 [DBG] Token request success.
2019-04-28 14:28:00.675 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:28:00.675 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:28:00.675 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:28:00.686 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:28:00.686 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:28:00.686 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:28:00.687 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:28:00.687 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:28:00.687 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:28:00.687 +02:00 [DBG] Start userinfo request
2019-04-28 14:28:00.687 +02:00 [DBG] Bearer token found in header
2019-04-28 14:28:00.690 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:28:00.690 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:28:00.705 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:28:00.705 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454480,"exp":1556454570,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:28:00.705 +02:00 [DBG] Creating userinfo response
2019-04-28 14:28:00.705 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:28:00.705 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:28:00.705 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:28:00.705 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:28:00.715 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:28:00.715 +02:00 [DBG] End userinfo request
2019-04-28 14:28:50.821 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:28:50.821 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:28:50.821 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:28:50.821 +02:00 [DBG] Start authorize request
2019-04-28 14:28:50.821 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:28:50.821 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:28:50.822 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:28:50.822 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:28:50.822 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:28:50.822 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"b43f871ab78e48aa8ca1a6a03ee6e3a0","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"b43f871ab78e48aa8ca1a6a03ee6e3a0","code_challenge":"yU_WfFXX9SD7OOGQLu8XhQVozAcvW2H8KmC1N3c9gxc","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:28:50.827 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:28:50.827 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:28:50.835 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****6add","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000010","TimeStamp":"2019-04-28T12:28:50.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:28:50.835 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"b43f871ab78e48aa8ca1a6a03ee6e3a0","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:28:52.144 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:28:52.145 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:28:52.145 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:28:52.145 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:28:52.145 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:28:52.145 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:28:52.145 +02:00 [DBG] Start discovery request
2019-04-28 14:28:52.194 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:28:52.194 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:28:52.194 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:28:52.194 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:28:52.195 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:28:52.195 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:28:52.195 +02:00 [DBG] Start token request.
2019-04-28 14:28:52.195 +02:00 [DBG] Start client validation
2019-04-28 14:28:52.195 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:28:52.195 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:28:52.195 +02:00 [DBG] client id without secret found
2019-04-28 14:28:52.195 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:28:52.195 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:28:52.195 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:28:52.195 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:28:52.195 +02:00 [DBG] Client validation success
2019-04-28 14:28:52.196 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000011","TimeStamp":"2019-04-28T12:28:52.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:28:52.196 +02:00 [DBG] Start token request validation
2019-04-28 14:28:52.196 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:28:52.207 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:28:52.237 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:28:52.237 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"2d202c60aaa20a581c8cc3419ada872edc4dbcc4c2d4087a3c6f0446a88f6add","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"2d202c60aaa20a581c8cc3419ada872edc4dbcc4c2d4087a3c6f0446a88f6add","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"c3ba37056f824909b1d217150437df5d085cf4c8c1c7457c94bdb088f9f8ff5b39b3b10914144b2a8abd46548b003707","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:28:52.237 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:28:52.237 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:28:52.238 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:28:52.261 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:28:52.261 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:28:52.261 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:28:52.265 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****DGtg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vJWg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000011","TimeStamp":"2019-04-28T12:28:52.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:28:52.266 +02:00 [DBG] Token request success.
2019-04-28 14:28:52.276 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:28:52.276 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:28:52.276 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:28:52.288 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:28:52.288 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:28:52.288 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:28:52.288 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:28:52.289 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:28:52.289 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:28:52.289 +02:00 [DBG] Start userinfo request
2019-04-28 14:28:52.289 +02:00 [DBG] Bearer token found in header
2019-04-28 14:28:52.292 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:28:52.292 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:28:52.301 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:28:52.301 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454532,"exp":1556454622,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:28:52.301 +02:00 [DBG] Creating userinfo response
2019-04-28 14:28:52.301 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:28:52.301 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:28:52.301 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:28:52.301 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:28:52.324 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:28:52.324 +02:00 [DBG] End userinfo request
2019-04-28 14:29:42.384 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:29:42.384 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:29:42.384 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:29:42.384 +02:00 [DBG] Start authorize request
2019-04-28 14:29:42.385 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:29:42.385 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:29:42.386 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:29:42.386 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:29:42.387 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:29:42.387 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"190e32a2a6164c2a807b69462578c9bc","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"190e32a2a6164c2a807b69462578c9bc","code_challenge":"ybMLQiKUuNJYFA944CcMu8T5SqTSwImOWLRe96Vh9Rc","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:29:42.606 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:29:42.606 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:29:42.616 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****4d24","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:0000001B","TimeStamp":"2019-04-28T12:29:42.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:29:42.616 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"190e32a2a6164c2a807b69462578c9bc","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:29:44.880 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:29:44.881 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:29:44.881 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:29:44.881 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:29:44.881 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:29:44.882 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:29:44.882 +02:00 [DBG] Start discovery request
2019-04-28 14:29:44.934 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:29:44.934 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:29:44.934 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:29:44.935 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:29:44.935 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:29:44.935 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:29:44.935 +02:00 [DBG] Start token request.
2019-04-28 14:29:44.935 +02:00 [DBG] Start client validation
2019-04-28 14:29:44.937 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:29:44.937 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:29:44.940 +02:00 [DBG] client id without secret found
2019-04-28 14:29:44.941 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:29:44.941 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:29:44.941 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:29:44.941 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:29:44.941 +02:00 [DBG] Client validation success
2019-04-28 14:29:44.941 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:0000001C","TimeStamp":"2019-04-28T12:29:44.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:29:44.941 +02:00 [DBG] Start token request validation
2019-04-28 14:29:44.942 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:29:44.964 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:29:44.972 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:29:44.972 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"1a8e82829d4ce6669b5674d888a1e0dce97623d1618b5f7f1c6358b2356a4d24","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"1a8e82829d4ce6669b5674d888a1e0dce97623d1618b5f7f1c6358b2356a4d24","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"44a9a5446d7448219d7bc2f26cdf94b85218183f6b364c5db6bc75b01296774af465234a614445eca13c5ef84597951c","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:29:44.973 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:29:44.973 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:29:44.973 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:29:45.002 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:29:45.002 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:29:45.002 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:29:45.005 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****0_VQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vOYg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:0000001C","TimeStamp":"2019-04-28T12:29:45.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:29:45.005 +02:00 [DBG] Token request success.
2019-04-28 14:29:45.027 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:29:45.028 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:29:45.028 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:29:45.035 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:29:45.035 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:29:45.035 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:29:45.035 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:29:45.035 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:29:45.036 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:29:45.036 +02:00 [DBG] Start userinfo request
2019-04-28 14:29:45.036 +02:00 [DBG] Bearer token found in header
2019-04-28 14:29:45.038 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:29:45.038 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:29:45.042 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:29:45.042 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454585,"exp":1556454675,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:29:45.042 +02:00 [DBG] Creating userinfo response
2019-04-28 14:29:45.042 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:29:45.043 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:29:45.043 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:29:45.043 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:29:45.053 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:29:45.053 +02:00 [DBG] End userinfo request
2019-04-28 14:30:35.121 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:30:35.121 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:30:35.122 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:30:35.122 +02:00 [DBG] Start authorize request
2019-04-28 14:30:35.122 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:30:35.122 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:30:35.122 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:30:35.122 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:30:35.123 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:30:35.123 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"1184b8ed3c9e4ed5bfed4734e72a40d9","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"1184b8ed3c9e4ed5bfed4734e72a40d9","code_challenge":"_gGIZs1A_n38krITzyiWng8mK_CyP22X7EuaOfm0ZX0","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:30:35.147 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:30:35.147 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:30:35.155 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****a58e","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000015","TimeStamp":"2019-04-28T12:30:35.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:30:35.155 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"1184b8ed3c9e4ed5bfed4734e72a40d9","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:30:36.422 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:30:36.422 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:30:36.422 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:30:36.422 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:30:36.423 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:30:36.423 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:30:36.423 +02:00 [DBG] Start discovery request
2019-04-28 14:30:36.464 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:30:36.464 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:30:36.464 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:30:36.464 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:30:36.465 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:30:36.465 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:30:36.465 +02:00 [DBG] Start token request.
2019-04-28 14:30:36.465 +02:00 [DBG] Start client validation
2019-04-28 14:30:36.465 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:30:36.465 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:30:36.466 +02:00 [DBG] client id without secret found
2019-04-28 14:30:36.466 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:30:36.467 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:30:36.467 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:30:36.468 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:30:36.470 +02:00 [DBG] Client validation success
2019-04-28 14:30:36.471 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000016","TimeStamp":"2019-04-28T12:30:36.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:30:36.471 +02:00 [DBG] Start token request validation
2019-04-28 14:30:36.471 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:30:36.490 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:30:36.501 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:30:36.501 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"d9f73f603d69b52ad7109a2f520dbdd74a91a4e7831acc3c675296664078a58e","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"d9f73f603d69b52ad7109a2f520dbdd74a91a4e7831acc3c675296664078a58e","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"a43dec1d114d43e1944adbb17f6a267bb8f25d03a709475dbb4a45cb7953981136b766329c3245a99a5d87cb7935dff3","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:30:36.502 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:30:36.502 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:30:36.502 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:30:36.517 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:30:36.517 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:30:36.517 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:30:36.521 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****bXBQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****3M_Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000016","TimeStamp":"2019-04-28T12:30:36.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:30:36.521 +02:00 [DBG] Token request success.
2019-04-28 14:30:36.549 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:30:36.549 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:30:36.549 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:30:36.555 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:30:36.555 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:30:36.555 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:30:36.555 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:30:36.555 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:30:36.555 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:30:36.555 +02:00 [DBG] Start userinfo request
2019-04-28 14:30:36.555 +02:00 [DBG] Bearer token found in header
2019-04-28 14:30:36.558 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:30:36.558 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:30:36.566 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:30:36.566 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454636,"exp":1556454726,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:30:36.567 +02:00 [DBG] Creating userinfo response
2019-04-28 14:30:36.567 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:30:36.567 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:30:36.567 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:30:36.567 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:30:36.573 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:30:36.573 +02:00 [DBG] End userinfo request
2019-04-28 14:31:26.617 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:31:26.620 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:31:26.620 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:31:26.635 +02:00 [DBG] Start authorize request
2019-04-28 14:31:26.636 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:31:26.636 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:31:26.636 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:31:26.636 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:31:26.639 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:31:26.640 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"162d40f6c16f4b2abf49a5891395cdee","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"162d40f6c16f4b2abf49a5891395cdee","code_challenge":"v1YFVDVskFSAID99Lw-EVXn6bCtBF7dHviRcEOa_Wk8","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:31:26.667 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:31:26.667 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:31:26.675 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****f412","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000020","TimeStamp":"2019-04-28T12:31:26.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:31:26.676 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"162d40f6c16f4b2abf49a5891395cdee","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:31:27.929 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:31:27.929 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:31:27.929 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:31:27.929 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:31:27.929 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:31:27.929 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:31:27.929 +02:00 [DBG] Start discovery request
2019-04-28 14:31:27.961 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:31:27.961 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:31:27.961 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:31:27.962 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:31:27.962 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:31:27.962 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:31:27.962 +02:00 [DBG] Start token request.
2019-04-28 14:31:27.962 +02:00 [DBG] Start client validation
2019-04-28 14:31:27.962 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:31:27.962 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:31:27.963 +02:00 [DBG] client id without secret found
2019-04-28 14:31:27.963 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:31:27.963 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:31:27.963 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:31:27.963 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:31:27.963 +02:00 [DBG] Client validation success
2019-04-28 14:31:27.963 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000021","TimeStamp":"2019-04-28T12:31:27.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:31:27.964 +02:00 [DBG] Start token request validation
2019-04-28 14:31:27.964 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:31:27.979 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:31:27.984 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:31:27.985 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"0571bd1010827cdd25aa835e8b16dee96892826e87cbaefc33e8db2576d2f412","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"0571bd1010827cdd25aa835e8b16dee96892826e87cbaefc33e8db2576d2f412","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"2c1accd296fe414c85e676ffd2e956930bc34658f57a4dcd9209df93bc6c9c922e7610dc0abd4e16ad38d37368243aaf","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:31:27.985 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:31:27.985 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:31:27.985 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:31:27.996 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:31:27.996 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:31:27.996 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:31:27.999 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****DfPQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****mlRg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000021","TimeStamp":"2019-04-28T12:31:27.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:31:27.999 +02:00 [DBG] Token request success.
2019-04-28 14:31:28.053 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:31:28.053 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:31:28.053 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:31:28.080 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:31:28.081 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:31:28.081 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:31:28.082 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:31:28.083 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:31:28.083 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:31:28.083 +02:00 [DBG] Start userinfo request
2019-04-28 14:31:28.083 +02:00 [DBG] Bearer token found in header
2019-04-28 14:31:28.085 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:31:28.085 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:31:28.097 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:31:28.097 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454687,"exp":1556454777,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:31:28.097 +02:00 [DBG] Creating userinfo response
2019-04-28 14:31:28.097 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:31:28.098 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:31:28.098 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:31:28.098 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:31:28.104 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:31:28.105 +02:00 [DBG] End userinfo request
2019-04-28 14:32:18.157 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:32:18.157 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:32:18.159 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:32:18.159 +02:00 [DBG] Start authorize request
2019-04-28 14:32:18.159 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:32:18.159 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:32:18.159 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:32:18.159 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:32:18.160 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:32:18.160 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"1884e7accb7441d392ca814bc98fb32d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"1884e7accb7441d392ca814bc98fb32d","code_challenge":"GxVoDVYqX511iYY-jkPqu7lfwe6Bs7W-K0ry3-wNxkU","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:32:18.170 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:32:18.170 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:32:18.179 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****a01f","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000001A","TimeStamp":"2019-04-28T12:32:18.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:32:18.179 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"1884e7accb7441d392ca814bc98fb32d","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:32:19.365 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:32:19.366 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:32:19.366 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:32:19.366 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:32:19.366 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:32:19.366 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:32:19.366 +02:00 [DBG] Start discovery request
2019-04-28 14:32:19.419 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:32:19.419 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:32:19.419 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:32:19.420 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:32:19.420 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:32:19.420 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:32:19.420 +02:00 [DBG] Start token request.
2019-04-28 14:32:19.420 +02:00 [DBG] Start client validation
2019-04-28 14:32:19.420 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:32:19.420 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:32:19.421 +02:00 [DBG] client id without secret found
2019-04-28 14:32:19.421 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:32:19.421 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:32:19.421 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:32:19.421 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:32:19.421 +02:00 [DBG] Client validation success
2019-04-28 14:32:19.421 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000001B","TimeStamp":"2019-04-28T12:32:19.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:32:19.421 +02:00 [DBG] Start token request validation
2019-04-28 14:32:19.421 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:32:19.432 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:32:19.439 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:32:19.439 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"ee20ba023d2a75051ac17f9e5f130cb8a18749cf890cfe814b7efa5ea583a01f","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"ee20ba023d2a75051ac17f9e5f130cb8a18749cf890cfe814b7efa5ea583a01f","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"6784bbf6b30042b0966b663e0f846e6f36765bb9e30846da82d8c3324876ab0d54f9710af0564181ac3a571b4dcee477","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:32:19.439 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:32:19.439 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:32:19.440 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:32:19.451 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:32:19.451 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:32:19.451 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:32:19.454 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****C4ig","$type":"Token"},{"TokenType":"access_token","TokenValue":"****FwgQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000001B","TimeStamp":"2019-04-28T12:32:19.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:32:19.454 +02:00 [DBG] Token request success.
2019-04-28 14:32:19.476 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:32:19.476 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:32:19.476 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:32:19.487 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:32:19.487 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:32:19.487 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:32:19.488 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:32:19.488 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:32:19.488 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:32:19.488 +02:00 [DBG] Start userinfo request
2019-04-28 14:32:19.488 +02:00 [DBG] Bearer token found in header
2019-04-28 14:32:19.491 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:32:19.491 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:32:19.496 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:32:19.496 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454739,"exp":1556454829,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:32:19.498 +02:00 [DBG] Creating userinfo response
2019-04-28 14:32:19.498 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:32:19.499 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:32:19.499 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:32:19.499 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:32:19.507 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:32:19.507 +02:00 [DBG] End userinfo request
2019-04-28 14:33:09.556 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:33:09.556 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:33:09.556 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:33:09.556 +02:00 [DBG] Start authorize request
2019-04-28 14:33:09.556 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:33:09.556 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:33:09.557 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:33:09.557 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:33:09.560 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:33:09.560 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"c979918a46b4444e9fc28e9754fd6e78","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"c979918a46b4444e9fc28e9754fd6e78","code_challenge":"538fcSzaWBdHM22GTCa_v87USNpc-zt7JLPyDkC8iqc","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:33:09.587 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:33:09.587 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:33:09.595 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****f7e3","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000025","TimeStamp":"2019-04-28T12:33:09.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:33:09.595 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"c979918a46b4444e9fc28e9754fd6e78","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:33:10.865 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:33:10.874 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:33:10.875 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:33:10.875 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:33:10.875 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:33:10.875 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:33:10.876 +02:00 [DBG] Start discovery request
2019-04-28 14:33:10.915 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:33:10.916 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:33:10.916 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:33:10.916 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:33:10.917 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:33:10.917 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:33:10.917 +02:00 [DBG] Start token request.
2019-04-28 14:33:10.917 +02:00 [DBG] Start client validation
2019-04-28 14:33:10.917 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:33:10.917 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:33:10.918 +02:00 [DBG] client id without secret found
2019-04-28 14:33:10.918 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:33:10.918 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:33:10.918 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:33:10.918 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:33:10.918 +02:00 [DBG] Client validation success
2019-04-28 14:33:10.918 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000026","TimeStamp":"2019-04-28T12:33:10.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:33:10.919 +02:00 [DBG] Start token request validation
2019-04-28 14:33:10.919 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:33:10.939 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:33:10.945 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:33:10.945 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"3e7a89d1591ebe4ab624e8b6238bcc74a16a5b1c3aa2c1dec59cb2556263f7e3","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"3e7a89d1591ebe4ab624e8b6238bcc74a16a5b1c3aa2c1dec59cb2556263f7e3","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"f8fa2d1940af4886b1accf1f7ec6562202e05f55f649491e99691ac5dc693d4e16a6e7207828464e8dbe5492e775cc68","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:33:10.945 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:33:10.945 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:33:10.945 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:33:10.959 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:33:10.959 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:33:10.959 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:33:10.962 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****L2TA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****XhzA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000026","TimeStamp":"2019-04-28T12:33:10.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:33:10.962 +02:00 [DBG] Token request success.
2019-04-28 14:33:11.002 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:33:11.003 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:33:11.003 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:33:11.020 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:33:11.020 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:33:11.020 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:33:11.020 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:33:11.021 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:33:11.021 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:33:11.021 +02:00 [DBG] Start userinfo request
2019-04-28 14:33:11.021 +02:00 [DBG] Bearer token found in header
2019-04-28 14:33:11.024 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:33:11.024 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:33:11.034 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:33:11.034 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454790,"exp":1556454880,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:33:11.034 +02:00 [DBG] Creating userinfo response
2019-04-28 14:33:11.035 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:33:11.035 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:33:11.035 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:33:11.035 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:33:11.064 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:33:11.064 +02:00 [DBG] End userinfo request
2019-04-28 14:34:01.129 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:34:01.131 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:34:01.131 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:34:01.131 +02:00 [DBG] Start authorize request
2019-04-28 14:34:01.132 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:34:01.132 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:34:01.132 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:34:01.132 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:34:01.133 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:34:01.133 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"338d5390fb4a4a7898a0e2602936b4ef","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"338d5390fb4a4a7898a0e2602936b4ef","code_challenge":"rLzuqr78XRXjuhxmZPgU8L1J9h0OCrDlTWhtN3ZK7Jw","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:34:01.189 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:34:01.189 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:34:01.197 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****908e","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000001F","TimeStamp":"2019-04-28T12:34:01.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:34:01.197 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"338d5390fb4a4a7898a0e2602936b4ef","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:34:03.483 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:34:03.485 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:34:03.485 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:34:03.485 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:34:03.486 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:34:03.486 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:34:03.486 +02:00 [DBG] Start discovery request
2019-04-28 14:34:03.538 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:34:03.538 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:34:03.538 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:34:03.538 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:34:03.539 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:34:03.539 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:34:03.539 +02:00 [DBG] Start token request.
2019-04-28 14:34:03.539 +02:00 [DBG] Start client validation
2019-04-28 14:34:03.539 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:34:03.539 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:34:03.539 +02:00 [DBG] client id without secret found
2019-04-28 14:34:03.539 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:34:03.539 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:34:03.540 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:34:03.540 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:34:03.540 +02:00 [DBG] Client validation success
2019-04-28 14:34:03.540 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000020","TimeStamp":"2019-04-28T12:34:03.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:34:03.540 +02:00 [DBG] Start token request validation
2019-04-28 14:34:03.540 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:34:03.555 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:34:03.561 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:34:03.561 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"127ba01a08782062e91637eb150306666c19f16b6f2b5091f793c02134d6908e","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"127ba01a08782062e91637eb150306666c19f16b6f2b5091f793c02134d6908e","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"06f135d01bba4abe9e259c7a720d4eb0d8da5cc9dbc54eeba14fdb74c3fb774cae968da033494d33bcd1e39a4eb75801","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:34:03.562 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:34:03.562 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:34:03.562 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:34:03.574 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:34:03.574 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:34:03.574 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:34:03.577 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****yWHw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****1Ycw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000020","TimeStamp":"2019-04-28T12:34:03.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:34:03.578 +02:00 [DBG] Token request success.
2019-04-28 14:34:03.616 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:34:03.616 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:34:03.616 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:34:03.631 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:34:03.631 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:34:03.631 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:34:03.631 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:34:03.631 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:34:03.631 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:34:03.631 +02:00 [DBG] Start userinfo request
2019-04-28 14:34:03.632 +02:00 [DBG] Bearer token found in header
2019-04-28 14:34:03.634 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:34:03.634 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:34:03.640 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:34:03.641 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454843,"exp":1556454933,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:34:03.641 +02:00 [DBG] Creating userinfo response
2019-04-28 14:34:03.641 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:34:03.641 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:34:03.641 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:34:03.641 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:34:03.646 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:34:03.646 +02:00 [DBG] End userinfo request
2019-04-28 14:34:53.729 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:34:53.730 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:34:53.730 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:34:53.730 +02:00 [DBG] Start authorize request
2019-04-28 14:34:53.730 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:34:53.730 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:34:53.730 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:34:53.730 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:34:53.732 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:34:53.733 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"98967a3b215b441c8b855c7a8c29f52a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"98967a3b215b441c8b855c7a8c29f52a","code_challenge":"yg6oQ9zdn6ZDJg9B1Mucm51a751uNeqecRpZxUBSaok","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:34:53.987 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:34:53.987 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:34:53.992 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****331c","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:0000002A","TimeStamp":"2019-04-28T12:34:53.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:34:53.992 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"98967a3b215b441c8b855c7a8c29f52a","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:34:55.215 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:34:55.223 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:34:55.223 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:34:55.224 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:34:55.224 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:34:55.224 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:34:55.225 +02:00 [DBG] Start discovery request
2019-04-28 14:34:55.272 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:34:55.273 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:34:55.273 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:34:55.275 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:34:55.275 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:34:55.275 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:34:55.276 +02:00 [DBG] Start token request.
2019-04-28 14:34:55.276 +02:00 [DBG] Start client validation
2019-04-28 14:34:55.276 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:34:55.276 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:34:55.277 +02:00 [DBG] client id without secret found
2019-04-28 14:34:55.277 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:34:55.277 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:34:55.277 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:34:55.277 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:34:55.277 +02:00 [DBG] Client validation success
2019-04-28 14:34:55.277 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:0000002B","TimeStamp":"2019-04-28T12:34:55.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:34:55.278 +02:00 [DBG] Start token request validation
2019-04-28 14:34:55.278 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:34:55.292 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:34:55.602 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:34:55.603 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"3ac6ff2e41eac72073eb1259412cf51d163dbcf564c6d4a05374cc46ac8b331c","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"3ac6ff2e41eac72073eb1259412cf51d163dbcf564c6d4a05374cc46ac8b331c","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"280397db21a44abb894841c3991beb1da0f1193e42c24afe89251b8826508066487c1bede7ff403a9f5ee86afce09b74","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:34:55.603 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:34:55.603 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:34:55.603 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:34:55.656 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:34:55.656 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:34:55.656 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:34:55.659 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****96iw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****rOew","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:0000002B","TimeStamp":"2019-04-28T12:34:55.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:34:55.659 +02:00 [DBG] Token request success.
2019-04-28 14:34:55.675 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:34:55.675 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:34:55.676 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:34:55.682 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:34:55.682 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:34:55.682 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:34:55.682 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:34:55.683 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:34:55.683 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:34:55.683 +02:00 [DBG] Start userinfo request
2019-04-28 14:34:55.683 +02:00 [DBG] Bearer token found in header
2019-04-28 14:34:55.687 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:34:55.687 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:34:55.934 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:34:55.934 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454895,"exp":1556454985,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:34:55.935 +02:00 [DBG] Creating userinfo response
2019-04-28 14:34:55.935 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:34:55.935 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:34:55.935 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:34:55.935 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:34:55.968 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:34:55.968 +02:00 [DBG] End userinfo request
2019-04-28 14:35:46.035 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:35:46.035 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:35:46.035 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:35:46.035 +02:00 [DBG] Start authorize request
2019-04-28 14:35:46.036 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:35:46.036 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:35:46.036 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:35:46.036 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:35:46.037 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:35:46.037 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"e5a5427452f249fb89ea55f6ee3ad3ae","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"e5a5427452f249fb89ea55f6ee3ad3ae","code_challenge":"YEMfXvyw87ZBRO_FG96uvktiDsWkifTiPxE1gclk--0","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:35:46.314 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:35:46.314 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:35:46.320 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****b673","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000024","TimeStamp":"2019-04-28T12:35:46.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:35:46.320 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"e5a5427452f249fb89ea55f6ee3ad3ae","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:35:47.505 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:35:47.505 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:35:47.505 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:35:47.505 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:35:47.506 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:35:47.506 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:35:47.506 +02:00 [DBG] Start discovery request
2019-04-28 14:35:47.589 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:35:47.589 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:35:47.589 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:35:47.589 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:35:47.590 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:35:47.590 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:35:47.590 +02:00 [DBG] Start token request.
2019-04-28 14:35:47.590 +02:00 [DBG] Start client validation
2019-04-28 14:35:47.590 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:35:47.590 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:35:47.590 +02:00 [DBG] client id without secret found
2019-04-28 14:35:47.590 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:35:47.591 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:35:47.591 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:35:47.591 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:35:47.591 +02:00 [DBG] Client validation success
2019-04-28 14:35:47.591 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000025","TimeStamp":"2019-04-28T12:35:47.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:35:47.591 +02:00 [DBG] Start token request validation
2019-04-28 14:35:47.591 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:35:47.604 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:35:47.839 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:35:47.839 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"ce0ecb9b0ee05e7d26fb70504df9199681c617f6d3124c6f1b2e4ecf026eb673","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"ce0ecb9b0ee05e7d26fb70504df9199681c617f6d3124c6f1b2e4ecf026eb673","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"a582e6f8dfe041b8a3049b861ab664878872b361fd5949558562ba671eca7c4868983fcf4a4d43348cab7cb0547d0df0","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:35:47.839 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:35:47.839 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:35:47.839 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:35:48.099 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:35:48.099 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:35:48.099 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:35:48.102 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****dTWQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****osHg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000025","TimeStamp":"2019-04-28T12:35:48.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:35:48.102 +02:00 [DBG] Token request success.
2019-04-28 14:35:48.110 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:35:48.110 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:35:48.110 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:35:48.116 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:35:48.116 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:35:48.116 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:35:48.117 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:35:48.117 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:35:48.117 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:35:48.117 +02:00 [DBG] Start userinfo request
2019-04-28 14:35:48.117 +02:00 [DBG] Bearer token found in header
2019-04-28 14:35:48.119 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:35:48.119 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:35:48.407 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:35:48.408 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556454948,"exp":1556455038,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:35:48.408 +02:00 [DBG] Creating userinfo response
2019-04-28 14:35:48.408 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:35:48.408 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:35:48.408 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:35:48.408 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:35:48.663 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:35:48.664 +02:00 [DBG] End userinfo request
2019-04-28 14:36:38.768 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:36:38.768 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:36:38.768 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:36:38.768 +02:00 [DBG] Start authorize request
2019-04-28 14:36:38.768 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:36:38.768 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:36:38.769 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:36:38.769 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:36:38.769 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:36:38.769 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"838409f35c3a4809b929af6f371a4de4","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"838409f35c3a4809b929af6f371a4de4","code_challenge":"GsMRxSo45dIVwnY3cWy_qMxZEE3kzIvJizGbawyRK70","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:36:39.012 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:36:39.012 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:36:39.020 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****c9ef","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:0000002F","TimeStamp":"2019-04-28T12:36:39.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:36:39.020 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"838409f35c3a4809b929af6f371a4de4","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:36:40.236 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:36:40.236 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:36:40.236 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:36:40.236 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:36:40.237 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:36:40.237 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:36:40.237 +02:00 [DBG] Start discovery request
2019-04-28 14:36:40.277 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:36:40.278 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:36:40.278 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:36:40.278 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:36:40.280 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:36:40.280 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:36:40.281 +02:00 [DBG] Start token request.
2019-04-28 14:36:40.281 +02:00 [DBG] Start client validation
2019-04-28 14:36:40.281 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:36:40.281 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:36:40.282 +02:00 [DBG] client id without secret found
2019-04-28 14:36:40.282 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:36:40.282 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:36:40.282 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:36:40.282 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:36:40.283 +02:00 [DBG] Client validation success
2019-04-28 14:36:40.283 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000030","TimeStamp":"2019-04-28T12:36:40.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:36:40.283 +02:00 [DBG] Start token request validation
2019-04-28 14:36:40.283 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:36:40.299 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:36:40.553 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:36:40.553 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"c9652fbcb404ae8851e8db9dec5f537182b848c38c2d9b1c8d0f09e7e79dc9ef","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"c9652fbcb404ae8851e8db9dec5f537182b848c38c2d9b1c8d0f09e7e79dc9ef","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"04b359673e264a3a9929fe4ca8647ef0bc5dcbc1e6624d20a719e0950df6e9481f1611e356e647708dacaa000295771a","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:36:40.554 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:36:40.554 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:36:40.554 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:36:41.125 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:36:41.125 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:36:41.125 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:36:41.128 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****d4EQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qjAw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000030","TimeStamp":"2019-04-28T12:36:41.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:36:41.128 +02:00 [DBG] Token request success.
2019-04-28 14:36:41.137 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:36:41.137 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:36:41.137 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:36:41.143 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:36:41.143 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:36:41.143 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:36:41.143 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:36:41.144 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:36:41.144 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:36:41.144 +02:00 [DBG] Start userinfo request
2019-04-28 14:36:41.144 +02:00 [DBG] Bearer token found in header
2019-04-28 14:36:41.146 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:36:41.146 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:36:41.423 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:36:41.423 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455001,"exp":1556455091,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:36:41.424 +02:00 [DBG] Creating userinfo response
2019-04-28 14:36:41.424 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:36:41.424 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:36:41.424 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:36:41.424 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:36:41.752 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:36:41.752 +02:00 [DBG] End userinfo request
2019-04-28 14:37:31.801 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:37:31.802 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:37:31.802 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:37:31.802 +02:00 [DBG] Start authorize request
2019-04-28 14:37:31.802 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:37:31.802 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:37:31.802 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:37:31.802 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:37:31.804 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:37:31.805 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"57468f447dc9411ab5f2bff81ac70f0c","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"57468f447dc9411ab5f2bff81ac70f0c","code_challenge":"rpunUNGkN9GntA-iGKhMJx_zA27aovoTpsv3Ttx-MH0","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:37:32.059 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:37:32.059 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:37:32.065 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****d99f","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000029","TimeStamp":"2019-04-28T12:37:32.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:37:32.065 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"57468f447dc9411ab5f2bff81ac70f0c","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:37:34.278 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:37:34.278 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:37:34.278 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:37:34.279 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:37:34.279 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:37:34.279 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:37:34.279 +02:00 [DBG] Start discovery request
2019-04-28 14:37:34.323 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:37:34.323 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:37:34.323 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:37:34.323 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:37:34.323 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:37:34.323 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:37:34.323 +02:00 [DBG] Start token request.
2019-04-28 14:37:34.323 +02:00 [DBG] Start client validation
2019-04-28 14:37:34.323 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:37:34.324 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:37:34.324 +02:00 [DBG] client id without secret found
2019-04-28 14:37:34.324 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:37:34.324 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:37:34.324 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:37:34.324 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:37:34.324 +02:00 [DBG] Client validation success
2019-04-28 14:37:34.324 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000002A","TimeStamp":"2019-04-28T12:37:34.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:37:34.324 +02:00 [DBG] Start token request validation
2019-04-28 14:37:34.325 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:37:34.339 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:37:34.348 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:37:34.348 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"590986f44f577bd3ff108db45e523363b7569f4154c6e156552e946ae474d99f","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"590986f44f577bd3ff108db45e523363b7569f4154c6e156552e946ae474d99f","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"2f84c99189f0459da82b519036a30b2def20a7b08b1840558bec21978efb5171f1106f010c394885b7aa2c9211ec0f1f","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:37:34.349 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:37:34.349 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:37:34.349 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:37:34.399 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:37:34.400 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:37:34.400 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:37:34.404 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****sfMw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****kISg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000002A","TimeStamp":"2019-04-28T12:37:34.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:37:34.404 +02:00 [DBG] Token request success.
2019-04-28 14:37:34.448 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:37:34.448 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:37:34.448 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:37:34.470 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:37:34.471 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:37:34.471 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:37:34.471 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:37:34.471 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:37:34.471 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:37:34.472 +02:00 [DBG] Start userinfo request
2019-04-28 14:37:34.472 +02:00 [DBG] Bearer token found in header
2019-04-28 14:37:34.474 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:37:34.474 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:37:34.739 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:37:34.739 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455054,"exp":1556455144,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:37:34.739 +02:00 [DBG] Creating userinfo response
2019-04-28 14:37:34.739 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:37:34.739 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:37:34.739 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:37:34.739 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:37:35.139 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:37:35.139 +02:00 [DBG] End userinfo request
2019-04-28 14:38:25.198 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:38:25.198 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:38:25.198 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:38:25.198 +02:00 [DBG] Start authorize request
2019-04-28 14:38:25.198 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:38:25.198 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:38:25.198 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:38:25.198 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:38:25.199 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:38:25.199 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"59209d1ba7024b9fb86ae7fd93f2c8a9","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"59209d1ba7024b9fb86ae7fd93f2c8a9","code_challenge":"3avdND3H-2x1YE9ES6tHu1DPL9tp-gNKbOMUz7hpZSw","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:38:25.473 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:38:25.473 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:38:25.478 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****0c0c","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000034","TimeStamp":"2019-04-28T12:38:25.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:38:25.478 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"59209d1ba7024b9fb86ae7fd93f2c8a9","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:38:26.738 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:38:26.738 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:38:26.738 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:38:26.738 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:38:26.738 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:38:26.738 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:38:26.739 +02:00 [DBG] Start discovery request
2019-04-28 14:38:26.769 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:38:26.769 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:38:26.769 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:38:26.769 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:38:26.769 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:38:26.769 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:38:26.770 +02:00 [DBG] Start token request.
2019-04-28 14:38:26.770 +02:00 [DBG] Start client validation
2019-04-28 14:38:26.770 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:38:26.770 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:38:26.770 +02:00 [DBG] client id without secret found
2019-04-28 14:38:26.770 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:38:26.770 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:38:26.770 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:38:26.770 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:38:26.771 +02:00 [DBG] Client validation success
2019-04-28 14:38:26.771 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000035","TimeStamp":"2019-04-28T12:38:26.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:38:26.771 +02:00 [DBG] Start token request validation
2019-04-28 14:38:26.771 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:38:26.787 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:38:27.030 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:38:27.030 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"10f5f03038da76ca38a29dfa84692ee3989580b8a5c0d114d4f3e706fba80c0c","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"10f5f03038da76ca38a29dfa84692ee3989580b8a5c0d114d4f3e706fba80c0c","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"1ca0e0a8be55442f9935fd272f0d7277e50c79b1265d4d2ab058d92918d1d14b2909439f06c34d59a2507bcdc5718499","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:38:27.031 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:38:27.031 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:38:27.031 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:38:27.067 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:38:27.067 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:38:27.067 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:38:27.070 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****OgqQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****1qBw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000035","TimeStamp":"2019-04-28T12:38:27.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:38:27.070 +02:00 [DBG] Token request success.
2019-04-28 14:38:27.080 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:38:27.080 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:38:27.080 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:38:27.086 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:38:27.086 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:38:27.086 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:38:27.086 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:38:27.087 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:38:27.087 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:38:27.087 +02:00 [DBG] Start userinfo request
2019-04-28 14:38:27.087 +02:00 [DBG] Bearer token found in header
2019-04-28 14:38:27.089 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:38:27.089 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:38:27.103 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:38:27.103 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455107,"exp":1556455197,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:38:27.103 +02:00 [DBG] Creating userinfo response
2019-04-28 14:38:27.103 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:38:27.103 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:38:27.104 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:38:27.104 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:38:27.129 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:38:27.129 +02:00 [DBG] End userinfo request
2019-04-28 14:39:17.186 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:39:17.187 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:39:17.188 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:39:17.188 +02:00 [DBG] Start authorize request
2019-04-28 14:39:17.188 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:39:17.188 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:39:17.188 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:39:17.188 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:39:17.189 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:39:17.189 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"3815c186cbed499a8c836617a266b452","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"3815c186cbed499a8c836617a266b452","code_challenge":"4tcD-Dl9PWkJIXF0QNjPn3iWak09WESpR6w1twbt7TQ","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:39:17.450 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:39:17.450 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:39:17.456 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****b063","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000002E","TimeStamp":"2019-04-28T12:39:17.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:39:17.456 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"3815c186cbed499a8c836617a266b452","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:39:18.718 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:39:18.718 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:39:18.718 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:39:18.719 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:39:18.719 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:39:18.719 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:39:18.719 +02:00 [DBG] Start discovery request
2019-04-28 14:39:18.765 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:39:18.765 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:39:18.765 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:39:18.766 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:39:18.766 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:39:18.766 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:39:18.766 +02:00 [DBG] Start token request.
2019-04-28 14:39:18.766 +02:00 [DBG] Start client validation
2019-04-28 14:39:18.766 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:39:18.766 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:39:18.767 +02:00 [DBG] client id without secret found
2019-04-28 14:39:18.767 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:39:18.767 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:39:18.767 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:39:18.767 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:39:18.767 +02:00 [DBG] Client validation success
2019-04-28 14:39:18.767 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000002F","TimeStamp":"2019-04-28T12:39:18.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:39:18.768 +02:00 [DBG] Start token request validation
2019-04-28 14:39:18.768 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:39:18.784 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:39:19.042 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:39:19.043 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"2cbde62b827134fc9f78516f8f5bc0e2ed0d06b5bf63a62a87f0aa2e9a80b063","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"2cbde62b827134fc9f78516f8f5bc0e2ed0d06b5bf63a62a87f0aa2e9a80b063","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"40d0f18c6ca942e39d8999177f3cdd65d7876b1af53243a2acbf7918929edaf62c69f481c4e94827a465d55476afdad1","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:39:19.043 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:39:19.043 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:39:19.043 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:39:19.348 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:39:19.348 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:39:19.348 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:39:19.351 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****SdOQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****V63Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000002F","TimeStamp":"2019-04-28T12:39:19.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:39:19.351 +02:00 [DBG] Token request success.
2019-04-28 14:39:19.359 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:39:19.359 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:39:19.359 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:39:19.365 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:39:19.365 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:39:19.365 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:39:19.365 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:39:19.365 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:39:19.365 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:39:19.366 +02:00 [DBG] Start userinfo request
2019-04-28 14:39:19.366 +02:00 [DBG] Bearer token found in header
2019-04-28 14:39:19.368 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:39:19.368 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:39:19.604 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:39:19.604 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455159,"exp":1556455249,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:39:19.605 +02:00 [DBG] Creating userinfo response
2019-04-28 14:39:19.605 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:39:19.605 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:39:19.605 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:39:19.605 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:39:20.076 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:39:20.076 +02:00 [DBG] End userinfo request
2019-04-28 14:40:10.148 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:40:10.148 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:40:10.150 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:40:10.150 +02:00 [DBG] Start authorize request
2019-04-28 14:40:10.150 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:40:10.150 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:40:10.150 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:40:10.150 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:40:10.151 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:40:10.151 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"be988c1c5f2c4eb5899fd6191f6162f9","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"be988c1c5f2c4eb5899fd6191f6162f9","code_challenge":"MBSpcDC734s5jGUBoL7uKUJOKqNvprENTzEVg0Gic9Q","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:40:10.405 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:40:10.405 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:40:10.410 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****f280","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:00000039","TimeStamp":"2019-04-28T12:40:10.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:40:10.410 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"be988c1c5f2c4eb5899fd6191f6162f9","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:40:11.648 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:40:11.649 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:40:11.649 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:40:11.649 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:40:11.649 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:40:11.649 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:40:11.649 +02:00 [DBG] Start discovery request
2019-04-28 14:40:11.689 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:40:11.689 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:40:11.689 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:40:11.689 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:40:11.690 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:40:11.690 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:40:11.690 +02:00 [DBG] Start token request.
2019-04-28 14:40:11.690 +02:00 [DBG] Start client validation
2019-04-28 14:40:11.690 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:40:11.690 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:40:11.691 +02:00 [DBG] client id without secret found
2019-04-28 14:40:11.691 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:40:11.691 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:40:11.691 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:40:11.691 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:40:11.691 +02:00 [DBG] Client validation success
2019-04-28 14:40:11.691 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:0000003A","TimeStamp":"2019-04-28T12:40:11.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:40:11.691 +02:00 [DBG] Start token request validation
2019-04-28 14:40:11.691 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:40:11.705 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:40:11.950 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:40:11.950 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"f89cd980e4b0200700f792878b8d22907e9d13289391f8bc3b05230224f7f280","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"f89cd980e4b0200700f792878b8d22907e9d13289391f8bc3b05230224f7f280","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"2c2dd2ab47f8475ea4368939cdf017ba35e0ecbff4c54ed4acbbd34b2b9475e146539610d83c4c5f8799d206ce7e00ca","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:40:11.950 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:40:11.951 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:40:11.951 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:40:11.992 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:40:11.992 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:40:11.992 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:40:11.995 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****bb3Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****SITQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C6:0000003A","TimeStamp":"2019-04-28T12:40:11.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:40:11.995 +02:00 [DBG] Token request success.
2019-04-28 14:40:12.010 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:40:12.010 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:40:12.010 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:40:12.018 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:40:12.018 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:40:12.018 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:40:12.019 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:40:12.019 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:40:12.019 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:40:12.019 +02:00 [DBG] Start userinfo request
2019-04-28 14:40:12.019 +02:00 [DBG] Bearer token found in header
2019-04-28 14:40:12.021 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:40:12.022 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:40:12.026 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:40:12.026 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455211,"exp":1556455301,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:40:12.026 +02:00 [DBG] Creating userinfo response
2019-04-28 14:40:12.026 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:40:12.026 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:40:12.026 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:40:12.026 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:40:12.043 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:40:12.043 +02:00 [DBG] End userinfo request
2019-04-28 14:41:02.121 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:41:02.121 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:41:02.122 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:41:02.122 +02:00 [DBG] Start authorize request
2019-04-28 14:41:02.122 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:41:02.122 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:41:02.122 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:41:02.122 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:41:02.123 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:41:02.124 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"0a18cda5eaa343ddbc831cbf52eacb80","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"0a18cda5eaa343ddbc831cbf52eacb80","code_challenge":"Poom6qVuWe2HEnlkB_f_eCc6K9GjKTQQHWL5-bmF6Ec","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:41:02.494 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:41:02.494 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:41:02.500 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****56a0","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000033","TimeStamp":"2019-04-28T12:41:02.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:41:02.500 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"0a18cda5eaa343ddbc831cbf52eacb80","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:41:03.751 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:41:03.751 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:41:03.752 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:41:03.753 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:41:03.754 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:41:03.754 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:41:03.754 +02:00 [DBG] Start discovery request
2019-04-28 14:41:03.756 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:41:03.756 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:41:03.757 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:41:03.757 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:41:03.759 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:41:03.760 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:41:03.760 +02:00 [DBG] Start token request.
2019-04-28 14:41:03.760 +02:00 [DBG] Start client validation
2019-04-28 14:41:03.760 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:41:03.760 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:41:03.761 +02:00 [DBG] client id without secret found
2019-04-28 14:41:03.761 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:41:03.761 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:41:03.762 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:41:03.762 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:41:03.762 +02:00 [DBG] Client validation success
2019-04-28 14:41:03.762 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000034","TimeStamp":"2019-04-28T12:41:03.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:41:03.762 +02:00 [DBG] Start token request validation
2019-04-28 14:41:03.763 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:41:03.779 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:41:04.021 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:41:04.021 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"8aec91a37df352723bed0f6181912bcbde7993dee57a7f2f2e750ae9e63556a0","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"8aec91a37df352723bed0f6181912bcbde7993dee57a7f2f2e750ae9e63556a0","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"047c03c32d5c460486c8de94669c28960c5e75c8705644fbb29afaa17e403149a7861bf39f044771a71c03fbc3073c61","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:41:04.021 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:41:04.021 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:41:04.021 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:41:04.572 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:41:04.572 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:41:04.572 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:41:04.575 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****grZQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****sIrw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000034","TimeStamp":"2019-04-28T12:41:04.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:41:04.575 +02:00 [DBG] Token request success.
2019-04-28 14:41:04.581 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:41:04.581 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:41:04.581 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:41:04.586 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:41:04.586 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:41:04.586 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:41:04.587 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:41:04.587 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:41:04.587 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:41:04.587 +02:00 [DBG] Start userinfo request
2019-04-28 14:41:04.587 +02:00 [DBG] Bearer token found in header
2019-04-28 14:41:04.589 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:41:04.589 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:41:04.628 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:41:04.629 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455264,"exp":1556455354,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:41:04.629 +02:00 [DBG] Creating userinfo response
2019-04-28 14:41:04.629 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:41:04.629 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:41:04.629 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:41:04.629 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:41:05.025 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:41:05.025 +02:00 [DBG] End userinfo request
2019-04-28 14:41:55.086 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:41:55.086 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:41:55.086 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:41:55.086 +02:00 [DBG] Start authorize request
2019-04-28 14:41:55.086 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:41:55.086 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:41:55.086 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:41:55.086 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:41:55.086 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:41:55.086 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"8df2a2a9455c4238a47abfd317bafaa3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"8df2a2a9455c4238a47abfd317bafaa3","code_challenge":"gXCTosWn7MZHuUriOo6QiCWx1kSxPS8pu9TBa1WOwU4","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:41:55.350 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:41:55.351 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:41:55.357 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****02d3","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000037","TimeStamp":"2019-04-28T12:41:55.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:41:55.357 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"8df2a2a9455c4238a47abfd317bafaa3","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:41:56.607 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:41:56.607 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:41:56.607 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:41:56.607 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:41:56.607 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:41:56.608 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:41:56.608 +02:00 [DBG] Start discovery request
2019-04-28 14:41:56.639 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:41:56.640 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:41:56.640 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:41:56.640 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:41:56.641 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:41:56.641 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:41:56.641 +02:00 [DBG] Start token request.
2019-04-28 14:41:56.641 +02:00 [DBG] Start client validation
2019-04-28 14:41:56.641 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:41:56.641 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:41:56.641 +02:00 [DBG] client id without secret found
2019-04-28 14:41:56.642 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:41:56.642 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:41:56.642 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:41:56.642 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:41:56.642 +02:00 [DBG] Client validation success
2019-04-28 14:41:56.642 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000039","TimeStamp":"2019-04-28T12:41:56.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:41:56.642 +02:00 [DBG] Start token request validation
2019-04-28 14:41:56.642 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:41:56.660 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:41:56.920 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:41:56.920 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"58a77e06e666c61a6d2d98fa07698cf8db6194f3afdc6d423a0844d7bebe02d3","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"58a77e06e666c61a6d2d98fa07698cf8db6194f3afdc6d423a0844d7bebe02d3","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"adb9d5a78eae4e1fb15c143256fc622297f4d57967e2421eb0dc17781ee4dac0d4927d203d7642cfb5d8bf052c195c39","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:41:56.920 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:41:56.921 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:41:56.921 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:41:57.182 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:41:57.182 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:41:57.182 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:41:57.185 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****fRyw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****R-sA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000039","TimeStamp":"2019-04-28T12:41:57.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:41:57.185 +02:00 [DBG] Token request success.
2019-04-28 14:41:57.193 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:41:57.193 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:41:57.194 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:41:57.203 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:41:57.203 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:41:57.203 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:41:57.203 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:41:57.204 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:41:57.204 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:41:57.204 +02:00 [DBG] Start userinfo request
2019-04-28 14:41:57.204 +02:00 [DBG] Bearer token found in header
2019-04-28 14:41:57.206 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:41:57.207 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:41:57.445 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:41:57.445 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455317,"exp":1556455407,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:41:57.446 +02:00 [DBG] Creating userinfo response
2019-04-28 14:41:57.446 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:41:57.446 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:41:57.446 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:41:57.446 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:41:57.827 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:41:57.827 +02:00 [DBG] End userinfo request
2019-04-28 14:42:47.887 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:42:47.888 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:42:47.888 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:42:47.888 +02:00 [DBG] Start authorize request
2019-04-28 14:42:47.889 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:42:47.889 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:42:47.889 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:42:47.889 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:42:47.889 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:42:47.889 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"87aecda4f6b042ddbd767b9734f681a0","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"87aecda4f6b042ddbd767b9734f681a0","code_challenge":"tIBFBZjqj9EGt4adh5OnvOJr7N4WYEjSlJo3mFyc-6A","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:42:48.133 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:42:48.133 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:42:48.138 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****7f78","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000003C","TimeStamp":"2019-04-28T12:42:48.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:42:48.138 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"87aecda4f6b042ddbd767b9734f681a0","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:42:49.286 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:42:49.286 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:42:49.287 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:42:49.287 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:42:49.287 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:42:49.287 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:42:49.287 +02:00 [DBG] Start discovery request
2019-04-28 14:42:49.323 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:42:49.323 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:42:49.323 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:42:49.324 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:42:49.324 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:42:49.324 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:42:49.324 +02:00 [DBG] Start token request.
2019-04-28 14:42:49.324 +02:00 [DBG] Start client validation
2019-04-28 14:42:49.324 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:42:49.324 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:42:49.324 +02:00 [DBG] client id without secret found
2019-04-28 14:42:49.324 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:42:49.325 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:42:49.325 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:42:49.325 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:42:49.325 +02:00 [DBG] Client validation success
2019-04-28 14:42:49.325 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000003E","TimeStamp":"2019-04-28T12:42:49.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:42:49.325 +02:00 [DBG] Start token request validation
2019-04-28 14:42:49.325 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:42:49.341 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:42:49.590 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:42:49.590 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"af8d4c26566d7242db01814db5f1fdc028c6f677c2a33a412a8e3121c5467f78","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"af8d4c26566d7242db01814db5f1fdc028c6f677c2a33a412a8e3121c5467f78","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"95c6025775fe41cd9c9b9c21dfafe47471616e077de94b78bde26752b003bb26c15d6834bbce414b9a97272e341ec37d","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:42:49.591 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:42:49.591 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:42:49.591 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:42:49.624 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:42:49.625 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:42:49.625 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:42:49.628 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****QnlQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****I5JQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000003E","TimeStamp":"2019-04-28T12:42:49.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:42:49.628 +02:00 [DBG] Token request success.
2019-04-28 14:42:49.635 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:42:49.636 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:42:49.636 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:42:49.642 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:42:49.642 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:42:49.642 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:42:49.643 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:42:49.643 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:42:49.643 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:42:49.643 +02:00 [DBG] Start userinfo request
2019-04-28 14:42:49.643 +02:00 [DBG] Bearer token found in header
2019-04-28 14:42:49.645 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:42:49.646 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:42:49.650 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:42:49.651 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455369,"exp":1556455459,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:42:49.651 +02:00 [DBG] Creating userinfo response
2019-04-28 14:42:49.651 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:42:49.651 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:42:49.651 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:42:49.651 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:42:49.670 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:42:49.670 +02:00 [DBG] End userinfo request
2019-04-28 14:43:39.724 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:43:39.725 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:43:39.725 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:43:39.725 +02:00 [DBG] Start authorize request
2019-04-28 14:43:39.726 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:43:39.726 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:43:39.726 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:43:39.726 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:43:39.727 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:43:39.727 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"ced51d94b09b40f9ae393abaac1c4001","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"ced51d94b09b40f9ae393abaac1c4001","code_challenge":"GC1DS9cMPW5bL3WIvhkgCt4wIYhJdn2y4HhMOm46pxA","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:43:40.072 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:43:40.072 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:43:40.078 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****2715","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000041","TimeStamp":"2019-04-28T12:43:40.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:43:40.078 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"ced51d94b09b40f9ae393abaac1c4001","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:43:41.224 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:43:41.224 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:43:41.224 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:43:41.224 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:43:41.225 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:43:41.225 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:43:41.225 +02:00 [DBG] Start discovery request
2019-04-28 14:43:41.278 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:43:41.279 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:43:41.279 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:43:41.280 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:43:41.280 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:43:41.280 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:43:41.280 +02:00 [DBG] Start token request.
2019-04-28 14:43:41.280 +02:00 [DBG] Start client validation
2019-04-28 14:43:41.281 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:43:41.281 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:43:41.281 +02:00 [DBG] client id without secret found
2019-04-28 14:43:41.281 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:43:41.281 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:43:41.282 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:43:41.282 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:43:41.282 +02:00 [DBG] Client validation success
2019-04-28 14:43:41.282 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000043","TimeStamp":"2019-04-28T12:43:41.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:43:41.282 +02:00 [DBG] Start token request validation
2019-04-28 14:43:41.282 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:43:41.299 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:43:41.585 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:43:41.586 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"5dc27f8d1324600c7f5628ce96059450395e165bd6180e20414a008366652715","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"5dc27f8d1324600c7f5628ce96059450395e165bd6180e20414a008366652715","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"642c9d68d37c4f1d8573625eeb8e7b40ac710c7cef08404cba386fa0cc6a702cb99d4dcbabca470fa66f9de044da719c","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:43:41.586 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:43:41.586 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:43:41.586 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:43:41.842 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:43:41.843 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:43:41.843 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:43:41.846 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****qUpQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****svtw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000043","TimeStamp":"2019-04-28T12:43:41.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:43:41.846 +02:00 [DBG] Token request success.
2019-04-28 14:43:41.854 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:43:41.855 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:43:41.855 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:43:41.861 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:43:41.861 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:43:41.862 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:43:41.862 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:43:41.863 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:43:41.863 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:43:41.863 +02:00 [DBG] Start userinfo request
2019-04-28 14:43:41.864 +02:00 [DBG] Bearer token found in header
2019-04-28 14:43:41.866 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:43:41.866 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:43:41.886 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:43:41.886 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455421,"exp":1556455511,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:43:41.886 +02:00 [DBG] Creating userinfo response
2019-04-28 14:43:41.886 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:43:41.886 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:43:41.886 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:43:41.886 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:43:42.056 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:43:42.056 +02:00 [DBG] End userinfo request
2019-04-28 14:44:32.097 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:44:32.098 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:44:32.098 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:44:32.098 +02:00 [DBG] Start authorize request
2019-04-28 14:44:32.099 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:44:32.099 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:44:32.099 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:44:32.100 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:44:32.101 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:44:32.101 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"3ada287f7d9c4249a84558fb162e039e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"3ada287f7d9c4249a84558fb162e039e","code_challenge":"NoJq6_BUWhe-5nua42Rr55TbG7gc9LPIGCE9Q8A8amY","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:44:32.346 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:44:32.346 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:44:32.352 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****357a","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000046","TimeStamp":"2019-04-28T12:44:32.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:44:32.352 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"3ada287f7d9c4249a84558fb162e039e","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:44:33.406 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:44:33.407 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:44:33.407 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:44:33.407 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:44:33.407 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:44:33.407 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:44:33.407 +02:00 [DBG] Start discovery request
2019-04-28 14:44:33.459 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:44:33.459 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:44:33.459 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:44:33.460 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:44:33.460 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:44:33.460 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:44:33.460 +02:00 [DBG] Start token request.
2019-04-28 14:44:33.460 +02:00 [DBG] Start client validation
2019-04-28 14:44:33.460 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:44:33.460 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:44:33.461 +02:00 [DBG] client id without secret found
2019-04-28 14:44:33.461 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:44:33.461 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:44:33.461 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:44:33.461 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:44:33.461 +02:00 [DBG] Client validation success
2019-04-28 14:44:33.462 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000048","TimeStamp":"2019-04-28T12:44:33.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:44:33.462 +02:00 [DBG] Start token request validation
2019-04-28 14:44:33.462 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:44:33.483 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:44:33.489 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:44:33.489 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"943f464a1221908abec3c0cfd393145390db58c090bfb418679d01cf1c17357a","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"943f464a1221908abec3c0cfd393145390db58c090bfb418679d01cf1c17357a","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"a721bc034d324efa9bca3624726cac7d134e0155f3e0448eb59d20cc82cd9db03d3ee2737e5f48d48ab8aebb8fcdaf6b","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:44:33.489 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:44:33.489 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:44:33.489 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:44:33.524 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:44:33.525 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:44:33.525 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:44:33.529 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****AqmQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****amVg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000048","TimeStamp":"2019-04-28T12:44:33.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:44:33.529 +02:00 [DBG] Token request success.
2019-04-28 14:44:33.618 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:44:33.618 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:44:33.618 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:44:33.649 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:44:33.649 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:44:33.649 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:44:33.649 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:44:33.650 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:44:33.650 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:44:33.650 +02:00 [DBG] Start userinfo request
2019-04-28 14:44:33.650 +02:00 [DBG] Bearer token found in header
2019-04-28 14:44:33.652 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:44:33.652 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:44:33.665 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:44:33.665 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455473,"exp":1556455563,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:44:33.665 +02:00 [DBG] Creating userinfo response
2019-04-28 14:44:33.666 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:44:33.666 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:44:33.666 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:44:33.666 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:44:33.671 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:44:33.671 +02:00 [DBG] End userinfo request
2019-04-28 14:45:23.723 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:45:23.723 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:45:23.723 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:45:23.723 +02:00 [DBG] Start authorize request
2019-04-28 14:45:23.723 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:45:23.723 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:45:23.723 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:45:23.725 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:45:23.725 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:45:23.726 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"ffc3e6a3dea44afe84ef73159a713058","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"ffc3e6a3dea44afe84ef73159a713058","code_challenge":"VBX2u4ZBZOZ1Oaboktq-TmzVPgt2toe_Cv1jjE25QUY","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:45:23.978 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:45:23.978 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:45:23.984 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****f986","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000004B","TimeStamp":"2019-04-28T12:45:23.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:45:23.984 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"ffc3e6a3dea44afe84ef73159a713058","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:45:25.085 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:45:25.085 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:45:25.085 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:45:25.085 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:45:25.085 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:45:25.085 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:45:25.085 +02:00 [DBG] Start discovery request
2019-04-28 14:45:25.161 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:45:25.161 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:45:25.161 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:45:25.161 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:45:25.161 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:45:25.161 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:45:25.161 +02:00 [DBG] Start token request.
2019-04-28 14:45:25.162 +02:00 [DBG] Start client validation
2019-04-28 14:45:25.162 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:45:25.162 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:45:25.162 +02:00 [DBG] client id without secret found
2019-04-28 14:45:25.162 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:45:25.162 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:45:25.162 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:45:25.162 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:45:25.162 +02:00 [DBG] Client validation success
2019-04-28 14:45:25.162 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000004D","TimeStamp":"2019-04-28T12:45:25.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:45:25.163 +02:00 [DBG] Start token request validation
2019-04-28 14:45:25.163 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:45:25.176 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:45:25.443 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:45:25.443 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"9203b18e93fe1c8b8335bb5a5f38d8cb43a3077f46566783c8b090df61aef986","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"9203b18e93fe1c8b8335bb5a5f38d8cb43a3077f46566783c8b090df61aef986","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"fd8fe880287345feb6b66bd6d12ac6d859f9782d42984660917532e29f8cd2ba4e650270fe0944a3a7e0fb92e830e841","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:45:25.443 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:45:25.443 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:45:25.443 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:45:25.473 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:45:25.473 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:45:25.474 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:45:25.476 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****PN1g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****mCPQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000004D","TimeStamp":"2019-04-28T12:45:25.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:45:25.476 +02:00 [DBG] Token request success.
2019-04-28 14:45:25.482 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:45:25.482 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:45:25.482 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:45:25.488 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:45:25.488 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:45:25.488 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:45:25.488 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:45:25.489 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:45:25.489 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:45:25.489 +02:00 [DBG] Start userinfo request
2019-04-28 14:45:25.489 +02:00 [DBG] Bearer token found in header
2019-04-28 14:45:25.491 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:45:25.491 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:45:25.495 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:45:25.496 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455525,"exp":1556455615,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:45:25.496 +02:00 [DBG] Creating userinfo response
2019-04-28 14:45:25.496 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:45:25.496 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:45:25.496 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:45:25.496 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:45:25.516 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:45:25.516 +02:00 [DBG] End userinfo request
2019-04-28 14:46:15.569 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:46:15.569 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:46:15.569 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:46:15.569 +02:00 [DBG] Start authorize request
2019-04-28 14:46:15.569 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:46:15.570 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:46:15.570 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:46:15.571 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:46:15.571 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:46:15.571 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"a110ac39f13c4fd68b614da5070a03dc","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"a110ac39f13c4fd68b614da5070a03dc","code_challenge":"ldKuRI9WWe8tU6bUq0kIfqtFD6-kYz_la2mmTwbi74I","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:46:15.804 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:46:15.804 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:46:15.810 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****2495","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000050","TimeStamp":"2019-04-28T12:46:15.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:46:15.810 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"a110ac39f13c4fd68b614da5070a03dc","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:46:16.930 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:46:16.939 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:46:16.939 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:46:16.939 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:46:16.939 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:46:16.940 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:46:16.940 +02:00 [DBG] Start discovery request
2019-04-28 14:46:17.001 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:46:17.001 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:46:17.002 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:46:17.002 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:46:17.003 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:46:17.004 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:46:17.004 +02:00 [DBG] Start token request.
2019-04-28 14:46:17.004 +02:00 [DBG] Start client validation
2019-04-28 14:46:17.004 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:46:17.004 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:46:17.005 +02:00 [DBG] client id without secret found
2019-04-28 14:46:17.005 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:46:17.005 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:46:17.005 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:46:17.005 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:46:17.005 +02:00 [DBG] Client validation success
2019-04-28 14:46:17.005 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000052","TimeStamp":"2019-04-28T12:46:17.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:46:17.005 +02:00 [DBG] Start token request validation
2019-04-28 14:46:17.005 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:46:17.017 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:46:17.282 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:46:17.283 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"f98f39e27cb08fcbab99cac613bcd7079aa77325881ea845b6ff30f625d62495","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"f98f39e27cb08fcbab99cac613bcd7079aa77325881ea845b6ff30f625d62495","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"2ae487b1573e4aafb8ed219fa896a9913d76827fa5284b42960c0d249dad0a359adda463e4d94e32b9cb7613e4a39143","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:46:17.283 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:46:17.283 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:46:17.283 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:46:17.316 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:46:17.316 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:46:17.316 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:46:17.319 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****P59A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qtrw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000052","TimeStamp":"2019-04-28T12:46:17.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:46:17.319 +02:00 [DBG] Token request success.
2019-04-28 14:46:17.331 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:46:17.331 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:46:17.331 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:46:17.339 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:46:17.339 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:46:17.339 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:46:17.339 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:46:17.340 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:46:17.340 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:46:17.340 +02:00 [DBG] Start userinfo request
2019-04-28 14:46:17.340 +02:00 [DBG] Bearer token found in header
2019-04-28 14:46:17.343 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:46:17.343 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:46:17.576 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:46:17.576 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455577,"exp":1556455667,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:46:17.577 +02:00 [DBG] Creating userinfo response
2019-04-28 14:46:17.577 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:46:17.577 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:46:17.577 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:46:17.577 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:46:17.610 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:46:17.611 +02:00 [DBG] End userinfo request
2019-04-28 14:47:07.706 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:47:07.706 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:47:07.706 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:47:07.706 +02:00 [DBG] Start authorize request
2019-04-28 14:47:07.706 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:47:07.706 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:47:07.706 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:47:07.706 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:47:07.706 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:47:07.707 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"f968a46e6457447e8925136ca8017888","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"f968a46e6457447e8925136ca8017888","code_challenge":"YW9O1HqDbJFXAohJguClOILHf-WlfDKFVAYJbO-fmYA","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:47:07.939 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:47:07.939 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:47:07.944 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****6348","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000055","TimeStamp":"2019-04-28T12:47:07.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:47:07.944 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"f968a46e6457447e8925136ca8017888","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:47:10.166 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:47:10.166 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:47:10.166 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:47:10.167 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:47:10.167 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:47:10.167 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:47:10.167 +02:00 [DBG] Start discovery request
2019-04-28 14:47:10.212 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:47:10.212 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:47:10.212 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:47:10.212 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:47:10.213 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:47:10.213 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:47:10.213 +02:00 [DBG] Start token request.
2019-04-28 14:47:10.213 +02:00 [DBG] Start client validation
2019-04-28 14:47:10.213 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:47:10.213 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:47:10.213 +02:00 [DBG] client id without secret found
2019-04-28 14:47:10.213 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:47:10.213 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:47:10.213 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:47:10.213 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:47:10.213 +02:00 [DBG] Client validation success
2019-04-28 14:47:10.214 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000057","TimeStamp":"2019-04-28T12:47:10.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:47:10.214 +02:00 [DBG] Start token request validation
2019-04-28 14:47:10.214 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:47:10.231 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:47:10.498 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:47:10.498 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"b0352cd15f1f968e2a2df7eb37fa242d028b569d16886c54f8f7c03bef1f6348","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"b0352cd15f1f968e2a2df7eb37fa242d028b569d16886c54f8f7c03bef1f6348","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"e4ff6dd049684d6c8ceca53729fdad4b195c364b61944dbebf11d86feb0cd9bed98ffbf1af464314999b053878b792cd","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:47:10.498 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:47:10.498 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:47:10.499 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:47:10.743 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:47:10.743 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:47:10.743 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:47:10.746 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****jUnA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****PH4w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:00000057","TimeStamp":"2019-04-28T12:47:10.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:47:10.746 +02:00 [DBG] Token request success.
2019-04-28 14:47:10.755 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:47:10.755 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:47:10.756 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:47:10.761 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:47:10.761 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:47:10.761 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:47:10.762 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:47:10.762 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:47:10.762 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:47:10.762 +02:00 [DBG] Start userinfo request
2019-04-28 14:47:10.762 +02:00 [DBG] Bearer token found in header
2019-04-28 14:47:10.765 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:47:10.765 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:47:11.051 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:47:11.051 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455630,"exp":1556455720,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:47:11.051 +02:00 [DBG] Creating userinfo response
2019-04-28 14:47:11.051 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:47:11.052 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:47:11.052 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:47:11.052 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:47:11.294 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:47:11.294 +02:00 [DBG] End userinfo request
2019-04-28 14:48:01.380 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:48:01.380 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:48:01.380 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:48:01.380 +02:00 [DBG] Start authorize request
2019-04-28 14:48:01.381 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:48:01.381 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:48:01.381 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:48:01.381 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:48:01.382 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:48:01.382 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"426caa72b2704a98b0f13e8cbfe68c75","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"426caa72b2704a98b0f13e8cbfe68c75","code_challenge":"fWvfLIUB4xMWipN2_3tRNfUnOIllJBMi-jK2iIodD34","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:48:01.631 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:48:01.631 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:48:01.638 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****bb47","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000005A","TimeStamp":"2019-04-28T12:48:01.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:48:01.638 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"426caa72b2704a98b0f13e8cbfe68c75","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:48:02.854 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:48:02.862 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:48:02.862 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:48:02.863 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:48:02.863 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:48:02.863 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:48:02.863 +02:00 [DBG] Start discovery request
2019-04-28 14:48:02.891 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:48:02.891 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:48:02.891 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:48:02.891 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:48:02.892 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:48:02.892 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:48:02.892 +02:00 [DBG] Start token request.
2019-04-28 14:48:02.892 +02:00 [DBG] Start client validation
2019-04-28 14:48:02.892 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:48:02.892 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:48:02.892 +02:00 [DBG] client id without secret found
2019-04-28 14:48:02.893 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:48:02.893 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:48:02.893 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:48:02.893 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:48:02.893 +02:00 [DBG] Client validation success
2019-04-28 14:48:02.893 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000005C","TimeStamp":"2019-04-28T12:48:02.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:48:02.893 +02:00 [DBG] Start token request validation
2019-04-28 14:48:02.893 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:48:02.913 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:48:03.269 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:48:03.270 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"6bae009a0c3082d0c0655afb1e9109fe055ea23de6c0f3d44e875afabc4bbb47","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"6bae009a0c3082d0c0655afb1e9109fe055ea23de6c0f3d44e875afabc4bbb47","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"c0e5f3a8d447445b879f1703555eaf695fb9f67665f4455d8d1fcf7107c629e82428bda9b02a4d4b992ecff61f69c10e","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:48:03.270 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:48:03.270 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:48:03.270 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:48:03.326 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:48:03.326 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:48:03.326 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:48:03.329 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****p_IA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****z1ig","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C7:0000005C","TimeStamp":"2019-04-28T12:48:03.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:48:03.329 +02:00 [DBG] Token request success.
2019-04-28 14:48:03.343 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:48:03.343 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:48:03.343 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:48:03.350 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:48:03.350 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:48:03.350 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:48:03.351 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:48:03.351 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:48:03.351 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:48:03.352 +02:00 [DBG] Start userinfo request
2019-04-28 14:48:03.352 +02:00 [DBG] Bearer token found in header
2019-04-28 14:48:03.355 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:48:03.355 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:48:03.601 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:48:03.601 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455683,"exp":1556455773,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:48:03.602 +02:00 [DBG] Creating userinfo response
2019-04-28 14:48:03.602 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:48:03.602 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:48:03.602 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:48:03.602 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:48:03.856 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:48:03.856 +02:00 [DBG] End userinfo request
2019-04-28 14:49:17.545 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:49:17.547 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:49:17.549 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:49:17.549 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:49:17.550 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:49:17.580 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:49:17.609 +02:00 [DBG] Start discovery request
2019-04-28 14:49:17.930 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:49:17.931 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:49:17.931 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:49:17.931 +02:00 [DBG] Rendering check session result
2019-04-28 14:49:18.971 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:49:18.972 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:49:18.972 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:49:18.972 +02:00 [DBG] Start authorize request
2019-04-28 14:49:18.972 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:49:18.972 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:49:18.972 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:49:18.972 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:49:18.972 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:49:18.973 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"aa24e47044dd4e7a848aed2216c28ebd","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"aa24e47044dd4e7a848aed2216c28ebd","code_challenge":"1uyyF6NNzFz6CQ0bI1ZiFSqJ8HOdh55rVqopBsO35qE","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:49:19.304 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:49:19.304 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:49:19.331 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****3d3b","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C8:00000003","TimeStamp":"2019-04-28T12:49:19.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:49:19.331 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"aa24e47044dd4e7a848aed2216c28ebd","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:49:20.552 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:49:20.552 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:49:20.553 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:49:20.554 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:49:20.554 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:49:20.554 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:49:20.555 +02:00 [DBG] Start discovery request
2019-04-28 14:49:20.584 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:49:20.584 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:49:20.584 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:49:20.584 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:49:20.585 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:49:20.585 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:49:20.585 +02:00 [DBG] Start token request.
2019-04-28 14:49:20.585 +02:00 [DBG] Start client validation
2019-04-28 14:49:20.585 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:49:20.585 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:49:20.585 +02:00 [DBG] client id without secret found
2019-04-28 14:49:20.585 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:49:20.585 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:49:20.586 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:49:20.586 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:49:20.586 +02:00 [DBG] Client validation success
2019-04-28 14:49:20.586 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C8:00000005","TimeStamp":"2019-04-28T12:49:20.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:49:20.586 +02:00 [DBG] Start token request validation
2019-04-28 14:49:20.586 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:49:20.609 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:49:20.908 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:49:20.908 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"89ae13fcde04f906421f76c69f0cd2f1c0f6464af31d71c9c1c62676a97a3d3b","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"89ae13fcde04f906421f76c69f0cd2f1c0f6464af31d71c9c1c62676a97a3d3b","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"74147d88583c4367910c27b89e27aba60964e2cd5f73462d8ffe78f0062fe56901e61fbcc5bd4ea6897b8a9693aab0a3","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:49:20.908 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:49:20.909 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:49:20.909 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:49:20.948 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:49:20.948 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:49:20.948 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:49:20.951 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****oINA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Hx8g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C8:00000005","TimeStamp":"2019-04-28T12:49:20.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:49:20.951 +02:00 [DBG] Token request success.
2019-04-28 14:49:20.967 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:49:20.968 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:49:20.968 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:49:20.983 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:49:20.984 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:49:20.984 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:49:20.984 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:49:20.985 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:49:20.985 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:49:20.985 +02:00 [DBG] Start userinfo request
2019-04-28 14:49:20.985 +02:00 [DBG] Bearer token found in header
2019-04-28 14:49:20.987 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:49:20.988 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:49:21.355 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:49:21.355 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455760,"exp":1556455850,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:49:21.355 +02:00 [DBG] Creating userinfo response
2019-04-28 14:49:21.355 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:49:21.355 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:49:21.355 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:49:21.355 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:49:21.772 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:49:21.772 +02:00 [DBG] End userinfo request
2019-04-28 14:49:38.961 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:49:38.961 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:49:38.961 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:49:38.961 +02:00 [DBG] Rendering check session result
2019-04-28 14:50:57.173 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-28 14:50:57.174 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-28 14:50:57.174 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-28 14:50:57.184 +02:00 [DBG] Rendering check session result
2019-04-28 14:50:57.648 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-28 14:50:57.648 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-28 14:50:57.648 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-28 14:50:57.648 +02:00 [DBG] Start authorize request
2019-04-28 14:50:57.649 +02:00 [DBG] User in authorize request: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:50:57.649 +02:00 [DBG] Start authorize request protocol validation
2019-04-28 14:50:57.649 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:50:57.649 +02:00 [DBG] Checking for PKCE parameters
2019-04-28 14:50:57.649 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-28 14:50:57.649 +02:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","AllowedRedirectUris":["http://localhost:8080/callback","http://localhost:8080/silentRenew"],"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile api1","State":"6946663ff69d4577a63ce6852a6f7217","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"1a1aec0db93c4cac082ed38419f0284f","Raw":{"client_id":"frontStore","redirect_uri":"http://localhost:8080/silentrenew","response_type":"code","scope":"openid profile api1","state":"6946663ff69d4577a63ce6852a6f7217","code_challenge":"G9SPPFxXXDe_W8tyQUuw5Bft7fmr4sgYevOJcFlATp4","code_challenge_method":"S256","prompt":"none","id_token_hint":"***REDACTED***"},"$type":"AuthorizeRequestValidationLog"}
2019-04-28 14:50:57.935 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-28 14:50:57.935 +02:00 [DBG] Creating Authorization Code Flow response.
2019-04-28 14:50:57.943 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":"http://localhost:8080/silentrenew","Endpoint":"Authorize","SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****2df7","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C9:00000002","TimeStamp":"2019-04-28T12:50:57.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:50:57.943 +02:00 [INF] Authorize endpoint response
{"SubjectId":"de3f25c8-246c-4061-bfa6-86c6698172fe","ClientId":"frontStore","RedirectUri":"http://localhost:8080/silentrenew","State":"6946663ff69d4577a63ce6852a6f7217","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-28 14:50:58.852 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-28 14:50:58.852 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:50:58.852 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:50:58.853 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-28 14:50:58.853 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-28 14:50:58.853 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-28 14:50:58.853 +02:00 [DBG] Start discovery request
2019-04-28 14:50:58.885 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-04-28 14:50:58.885 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:50:58.885 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:50:58.885 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-04-28 14:50:58.886 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-04-28 14:50:58.886 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-04-28 14:50:58.886 +02:00 [DBG] Start token request.
2019-04-28 14:50:58.886 +02:00 [DBG] Start client validation
2019-04-28 14:50:58.886 +02:00 [DBG] Start parsing Basic Authentication secret
2019-04-28 14:50:58.886 +02:00 [DBG] Start parsing for secret in post body
2019-04-28 14:50:58.887 +02:00 [DBG] client id without secret found
2019-04-28 14:50:58.887 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-04-28 14:50:58.887 +02:00 [DBG] Secret id found: frontStore
2019-04-28 14:50:58.887 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:50:58.887 +02:00 [DBG] Public Client - skipping secret validation success
2019-04-28 14:50:58.887 +02:00 [DBG] Client validation success
2019-04-28 14:50:58.887 +02:00 [INF] {"ClientId":"frontStore","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLMBQ2C1V0C9:00000004","TimeStamp":"2019-04-28T12:50:58.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-04-28 14:50:58.887 +02:00 [DBG] Start token request validation
2019-04-28 14:50:58.887 +02:00 [DBG] Start validation of authorization code token request
2019-04-28 14:50:58.900 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-04-28 14:50:59.152 +02:00 [DBG] Validation of authorization code token request success
2019-04-28 14:50:59.153 +02:00 [INF] Token request validation success
{"ClientId":"frontStore","ClientName":"Front Store Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"28c71f2e0853e4c7ff71d79fca66a48ba4558a94ed5e20a78504088ea51c2df7","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontStore","code":"28c71f2e0853e4c7ff71d79fca66a48ba4558a94ed5e20a78504088ea51c2df7","redirect_uri":"http://localhost:8080/silentrenew","code_verifier":"ed0df2fa774648e49b28f0210c43888d0b7218abd8124d3f8fd3c9e04f5b05704764dd9f2b4641bd885d4b2fca91b35f","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-04-28 14:50:59.153 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:50:59.153 +02:00 [DBG] Getting claims for access token for client: frontStore
2019-04-28 14:50:59.153 +02:00 [DBG] Getting claims for access token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe
2019-04-28 14:50:59.409 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:50:59.409 +02:00 [DBG] Getting claims for identity token for subject: de3f25c8-246c-4061-bfa6-86c6698172fe and client: frontStore
2019-04-28 14:50:59.409 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-28 14:50:59.412 +02:00 [INF] {"ClientId":"frontStore","ClientName":"Front Store Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"openid profile api1","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****mwgA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****TSZQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLMBQ2C1V0C9:00000004","TimeStamp":"2019-04-28T12:50:59.0000000Z","ProcessId":73276,"LocalIpAddress":"127.0.0.1:31566","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-28 14:50:59.412 +02:00 [DBG] Token request success.
2019-04-28 14:50:59.420 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:50:59.420 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:50:59.420 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:50:59.427 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-28 14:50:59.427 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-04-28 14:50:59.427 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-28 14:50:59.428 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-28 14:50:59.428 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-28 14:50:59.428 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-28 14:50:59.428 +02:00 [DBG] Start userinfo request
2019-04-28 14:50:59.428 +02:00 [DBG] Bearer token found in header
2019-04-28 14:50:59.431 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:50:59.431 +02:00 [DBG] client configuration validation for client frontStore succeeded.
2019-04-28 14:50:59.448 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-28 14:50:59.448 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1556455859,"exp":1556455949,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"frontStore","sub":"de3f25c8-246c-4061-bfa6-86c6698172fe","auth_time":1556450836,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-28 14:50:59.448 +02:00 [DBG] Creating userinfo response
2019-04-28 14:50:59.448 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:50:59.448 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:50:59.448 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-28 14:50:59.448 +02:00 [DBG] Scopes in access token: openid profile api1
2019-04-28 14:50:59.454 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-28 14:50:59.454 +02:00 [DBG] End userinfo request
