// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Products.Catalog.Photos;

namespace Products.Catalog.Migrations.Photos
{
    [DbContext(typeof(PhotosContext))]
    [Migration("20190425220224_AddPhotos")]
    partial class AddPhotos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Products.Catalog.Photos.Photo", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OriginalUrl");

                    b.HasKey("ProductId", "PhotoId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Products.Catalog.Photos.Photo", b =>
                {
                    b.OwnsMany("Products.Catalog.Photos.PhotoVariant", "Variants", b1 =>
                        {
                            b1.Property<int>("ProductId");

                            b1.Property<int>("PhotoId");

                            b1.Property<int>("PhotoVariantId");

                            b1.Property<string>("VariantName");

                            b1.Property<string>("VariantUrl");

                            b1.HasKey("ProductId", "PhotoId", "PhotoVariantId");

                            b1.ToTable("PhotoVariant");

                            b1.HasOne("Products.Catalog.Photos.Photo")
                                .WithMany("Variants")
                                .HasForeignKey("ProductId", "PhotoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
