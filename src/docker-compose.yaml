version: '3.7'
services:
  frontstore:
    container_name: frontstore
    networks:
      - pjmicrostore
    ports: 
      - 8080:80
    build:
      context: ../front-store/.
    environment: 
      - API_URL=http://localhost:9090
      - APP_URL=http://localhost:8080
      - AUTH_URL=http://localhost:5000
  cart:
    container_name: cart
    networks:
      - pjmicrostore
    build:
      context: .
      dockerfile: Checkout/Checkout.Cart/Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=${SQLSERVER_ADDRESS};Database=Checkout.Cart;User Id=${SQLSERVER_USERNAME};Password=${SQLSERVER_PASSWORD};ConnectRetryCount=0
      - Dependencies__Products=http://catalog
      - Identity__Authority=http://identityapi
  orders:
    container_name: orders
    networks:
      - pjmicrostore
    build:
      context: .
      dockerfile: Checkout/Checkout.Orders/Dockerfile          
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=${SQLSERVER_ADDRESS};Database=Checkout.Orders;User Id=${SQLSERVER_USERNAME};Password=${SQLSERVER_PASSWORD};ConnectRetryCount=0
      - Dependencies__Cart=http://cart
      - Dependencies__Shipping=http://shipping
      - Dependencies__Payment=http://payments
      - Identity__Authority=http://identityapi
  payments:    
    container_name: payments
    networks:
      - pjmicrostore
    build:
      context: .
      dockerfile: Checkout/Checkout.Payments/Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=${SQLSERVER_ADDRESS};Database=Checkout.Payments;User Id=${SQLSERVER_USERNAME};Password=${SQLSERVER_PASSWORD};ConnectRetryCount=0
      - Identity__Authority=http://identityapi
  shipping:    
    container_name: shipping
    networks:
      - pjmicrostore
    build:
      context: .
      dockerfile: Checkout/Checkout.Shipping/Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMq__Host=rabbitmq
      - Identity__Authority=http://identityapi
  frontapigateway:    
    container_name: frontapigateway
    networks:
      - pjmicrostore
    environment: 
      - GatewayServices__Products__DownstreamHost=catalog
      - GatewayServices__Products__DownstreamPort=80
      - GatewayServices__Photos__DownstreamHost=photos
      - GatewayServices__Photos__DownstreamPort=80
      - GatewayServices__Search__DownstreamHost=search
      - GatewayServices__Search__DownstreamPort=80
      - GatewayServices__Cart__DownstreamHost=cart
      - GatewayServices__Cart__DownstreamPort=80
      - GatewayServices__Orders__DownstreamHost=orders
      - GatewayServices__Orders__DownstreamPort=80
      - GatewayServices__Payments__DownstreamHost=payments
      - GatewayServices__Payments__DownstreamPort=80
      - GatewayServices__Identity__DownstreamHost=identityapi
      - GatewayServices__Identity__DownstreamPort=80
      - GatewayServices__Shipping__DownstreamHost=shipping
      - GatewayServices__Shipping__DownstreamPort=80
    build:
      context: .
      dockerfile: External/External.FrontApiGateway/Dockerfile
    ports: 
      - 9090:80
  emailsender:    
    container_name: emailsender
    networks:
      - pjmicrostore
    build:
      context: .
      dockerfile: Common/Common.EmailSender/Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=${SQLSERVER_ADDRESS};Database=Identity;User Id=${SQLSERVER_USERNAME};Password=${SQLSERVER_PASSWORD};ConnectRetryCount=0
      - Identity__Authority=http://identityapi
      - Dependencies__Orders=http://orders
      - Emails__Smtp__Host=smtp
  identityapi:    
    container_name: identityapi
    networks:
      - pjmicrostore
    build:
      context: .
      dockerfile: Identity/Identity.Api/Dockerfile
    ports:
      - 5000:80
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=${SQLSERVER_ADDRESS};Database=Identity;User Id=${SQLSERVER_USERNAME};Password=${SQLSERVER_PASSWORD};ConnectRetryCount=0
      - Identity__Authority=http://identityapi
      - IdentityServer__IssuerUri=http://identityapi
      - Dependencies__Orders=http://orders
  catalog:    
    container_name: catalog
    networks:
      - pjmicrostore
    build:
      context: .
      dockerfile: Products/Products.Catalog/Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=${SQLSERVER_ADDRESS};Database=Products.Catalog;User Id=${SQLSERVER_USERNAME};Password=${SQLSERVER_PASSWORD};ConnectRetryCount=0
      - Identity__Authority=http://identityapi
  photos:    
    container_name: photos
    networks:
      - pjmicrostore
    build:
      context: .
      dockerfile: Products/Products.Photos/Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=${SQLSERVER_ADDRESS};Database=Products.Photos;User Id=${SQLSERVER_USERNAME};Password=${SQLSERVER_PASSWORD};ConnectRetryCount=0
      - Identity__Authority=http://identityapi
  search:    
    container_name: search
    networks:
      - pjmicrostore
    build:
      context: .
      dockerfile: Products/Products.Search/Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMq__Host=rabbitmq
      - Dependencies__Products=http://catalog
      - ElasticSearch__Host=http://elasticsearch
      - ElasticSearch__Port=9200
      - Identity__Authority=http://identityapi  
networks:
  pjmicrostore:
    name: pjmicrostore